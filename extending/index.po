# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../extending/index.rst:5
msgid "Extending and Embedding the Python Interpreter"
msgstr "파이썬 인터프리터 확장 및 내장"

#: ../../extending/index.rst:7
msgid ""
"This document describes how to write modules in C or C++ to extend the "
"Python interpreter with new modules.  Those modules can not only define "
"new functions but also new object types and their methods.  The document "
"also describes how to embed the Python interpreter in another "
"application, for use as an extension language.  Finally, it shows how to "
"compile and link extension modules so that they can be loaded dynamically"
" (at run time) into the interpreter, if the underlying operating system "
"supports this feature."
msgstr ""
"이 문서는 새로운 모듈로 파이썬 인터프리터를 확장하기 위해 C 나 C++로 모듈을 작성하는 방법을 설명합니다. 이러한 모듈은 새로운"
" 함수뿐만 아니라 새로운 객체 형과 메서드를 정의할 수 있습니다. 또한, 확장 언어로 사용하기 위해, 파이썬 인터프리터를 다른 응용"
" 프로그램에 내장시키는 방법에 관해서도 설명합니다. 마지막으로, 하부 운영 체제에서 이 기능을 지원하는 경우, 동적으로 "
"(실행시간에) 인터프리터에 로드될 수 있도록 확장 모듈을 컴파일하고 링크하는 방법을 보여줍니다."

#: ../../extending/index.rst:15
msgid ""
"This document assumes basic knowledge about Python.  For an informal "
"introduction to the language, see :ref:`tutorial-index`.  :ref"
":`reference-index` gives a more formal definition of the language.  :ref"
":`library-index` documents the existing object types, functions and "
"modules (both built-in and written in Python) that give the language its "
"wide application range."
msgstr ""
"이 문서는 파이썬에 대한 기본 지식을 전제로 합니다. 언어에 대한 형식적이지 않은 소개는 :ref:`tutorial-index` 를"
" 보십시오. :ref:`reference-index` 는 보다 형식적인 언어 정의를 제공합니다. :ref:`library-"
"index` 는 존재하는 객체 형, 함수 및 모듈(내장된 것과 파이썬으로 작성된 것 모두)을 설명하는데, 이것들이 언어의 응용 "
"범위를 넓힙니다."

#: ../../extending/index.rst:21
msgid ""
"For a detailed description of the whole Python/C API, see the separate "
":ref:`c-api-index`."
msgstr "전체 파이썬/C API에 대한 자세한 설명은 별도의 :ref:`c-api-index` 를 참조하십시오."

#: ../../extending/index.rst:26
msgid "Recommended third party tools"
msgstr "권장 제삼자 도구"

#: ../../extending/index.rst:28
msgid ""
"This guide only covers the basic tools for creating extensions provided "
"as part of this version of CPython. Third party tools like `Cython "
"<https://cython.org/>`_, `cffi <https://cffi.readthedocs.io>`_, `SWIG "
"<https://www.swig.org>`_ and `Numba <https://numba.pydata.org/>`_ offer "
"both simpler and more sophisticated approaches to creating C and C++ "
"extensions for Python."
msgstr ""
"이 지침서는 이 버전의 CPython의 일부로 제공되는, 확장을 만들기 위한 기본 도구만을 다룹니다. `Cython "
"<https://cython.org/>`_, `cffi <https://cffi.readthedocs.io>`_, `SWIG "
"<https://www.swig.org>`_ 와 `Numba <https://numba.pydata.org/>`_  와 같은 제삼자"
" 도구는 파이썬을 위한 C와 C++ 확장을 만드는 더 간단하고 세련된 접근법을 제공합니다."

#: ../../extending/index.rst:37
msgid ""
"`Python Packaging User Guide: Binary Extensions "
"<https://packaging.python.org/guides/packaging-binary-extensions/>`_"
msgstr ""
"`파이썬 패키징 사용자 지침서: 바이너리 확장 <https://packaging.python.org/guides/packaging-"
"binary-extensions/>`_"

#: ../../extending/index.rst:38
msgid ""
"The Python Packaging User Guide not only covers several available tools "
"that simplify the creation of binary extensions, but also discusses the "
"various reasons why creating an extension module may be desirable in the "
"first place."
msgstr ""
"파이썬 패키징 사용자 지침서는 바이너리 확장의 생성을 단순화하는 몇 가지 사용 가능한 도구를 다루고 있을 뿐만 아니라, 확장 모듈을"
" 만드는 것이 왜 바람직한지 여러 가지 이유에 대해서도 논의합니다."

#: ../../extending/index.rst:45
msgid "Creating extensions without third party tools"
msgstr "제삼자 도구 없이 확장 만들기"

#: ../../extending/index.rst:47
msgid ""
"This section of the guide covers creating C and C++ extensions without "
"assistance from third party tools. It is intended primarily for creators "
"of those tools, rather than being a recommended way to create your own C "
"extensions."
msgstr ""
"지침서의 이 부문에서는 제삼자 도구의 도움 없이 C와 C++ 확장을 만드는 방법에 관해 설명합니다. 여러분 자신의 C 확장을 만드는"
" 데 권장되는 방법이라기보다는, 주로 도구를 제작하는 사람들을 대상으로 합니다."

#: ../../extending/index.rst:63
msgid "Embedding the CPython runtime in a larger application"
msgstr "더 큰 응용 프로그램에 CPython 런타임을 내장하기"

#: ../../extending/index.rst:65
msgid ""
"Sometimes, rather than creating an extension that runs inside the Python "
"interpreter as the main application, it is desirable to instead embed the"
" CPython runtime inside a larger application. This section covers some of"
" the details involved in doing that successfully."
msgstr ""
"때로는, 파이썬 인터프리터를 메인 응용 프로그램으로 사용하고 그 안에서 실행되는 확장을 만드는 대신, CPython 런타임을 더 큰"
" 응용 프로그램에 내장하는 것이 바람직합니다. 이 절에서는 이를 성공적으로 수행하는 데 관련된 몇 가지 세부 사항에 관해 "
"설명합니다."


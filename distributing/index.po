# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../distributing/index.rst:10
msgid "Distributing Python Modules"
msgstr "파이썬 모듈 배포하기"

#: ../../distributing/index.rst:14
msgid ""
"Information and guidance on distributing Python modules and packages has "
"been moved to the `Python Packaging User Guide`_, and the tutorial on "
"`packaging Python projects`_."
msgstr ""

#~ msgid "Email"
#~ msgstr "전자 우편"

#~ msgid "distutils-sig@python.org"
#~ msgstr "distutils-sig@python.org"

#~ msgid ""
#~ "As a popular open source development "
#~ "project, Python has an active supporting"
#~ " community of contributors and users "
#~ "that also make their software available"
#~ " for other Python developers to use"
#~ " under open source license terms."
#~ msgstr ""
#~ "널리 사용되는 공개 소스 개발 프로젝트로서, 파이썬에는 "
#~ "적극적으로 지원하는 기여자와 사용자의 커뮤니티가 있어, "
#~ "자신들의 소프트웨어를 공개 소스 라이센스 계약에 따라 "
#~ "다른 파이썬 개발자가 사용할 수 있도록 합니다."

#~ msgid ""
#~ "This allows Python users to share "
#~ "and collaborate effectively, benefiting from"
#~ " the solutions others have already "
#~ "created to common (and sometimes even"
#~ " rare!) problems, as well as "
#~ "potentially contributing their own solutions"
#~ " to the common pool."
#~ msgstr ""
#~ "이를 통해 파이썬 사용자는 효과적으로 공유하고 공동 "
#~ "작업할 수 있으며, 다른 사람들이 공통 (심지어 "
#~ "때로는 희귀한) 문제에 대해 이미 만든 솔루션의 "
#~ "이점을 누릴 수 있을 뿐 아니라, 자체 솔루션을"
#~ " 공동 풀에 잠재적으로 제공할 수 있습니다."

#~ msgid ""
#~ "This guide covers the distribution part"
#~ " of the process. For a guide to"
#~ " installing other Python projects, refer"
#~ " to the :ref:`installation guide "
#~ "<installing-index>`."
#~ msgstr ""
#~ "이 지침서는 이 절차의 배포 부분을 다룹니다. 다른"
#~ " 파이썬 프로젝트를 설치하는 지침은 :ref:`설치 지침서 "
#~ "<installing-index>` 를 참조하십시오."

#~ msgid ""
#~ "For corporate and other institutional "
#~ "users, be aware that many organisations"
#~ " have their own policies around using"
#~ " and contributing to open source "
#~ "software. Please take such policies into"
#~ " account when making use of the "
#~ "distribution and installation tools provided"
#~ " with Python."
#~ msgstr ""
#~ "기업 및 기타 기관 사용자의 경우, 많은 조직에서"
#~ " 공개 소스 소프트웨어를 사용하고 공헌하는 데 대한"
#~ " 자체 정책을 시행하고 있음을 알고 있어야 합니다."
#~ " 파이썬과 함께 제공되는 배포 및 설치 도구를 "
#~ "사용할 때 이러한 정책을 고려하십시오."

#~ msgid "Key terms"
#~ msgstr "핵심 용어"

#~ msgid ""
#~ "the `Python Packaging Index "
#~ "<https://pypi.org>`__ is a public repository"
#~ " of open source licensed packages "
#~ "made available for use by other "
#~ "Python users"
#~ msgstr ""
#~ "`파이썬 패키지 색인 <https://pypi.org>`__ 은 다른"
#~ " 파이썬 사용자가 사용할 수 있도록 만들어진 공개 "
#~ "소스 라이선스 패키지의 공용 저장소입니다."

#~ msgid ""
#~ "the `Python Packaging Authority "
#~ "<https://www.pypa.io/>`__ are the group of "
#~ "developers and documentation authors "
#~ "responsible for the maintenance and "
#~ "evolution of the standard packaging "
#~ "tools and the associated metadata and"
#~ " file format standards. They maintain "
#~ "a variety of tools, documentation and"
#~ " issue trackers on both `GitHub "
#~ "<https://github.com/pypa>`__ and `Bitbucket "
#~ "<https://bitbucket.org/pypa/>`__."
#~ msgstr ""
#~ "`파이썬 패키징 위원회 <https://www.pypa.io/>`__ 는 "
#~ "표준 패키징 도구와 관련 메타 데이터 및 파일"
#~ " 형식 표준의 유지 보수 및 발전을 담당하는 "
#~ "개발자 및 문서 작성자 모임입니다. 그들은 `GitHub"
#~ " <https://github.com/pypa>`__ 와 `Bitbucket "
#~ "<https://bitbucket.org/pypa/>`__ 에 다양한 도구, 문서,"
#~ " 이슈 추적기를 유지합니다."

#~ msgid ""
#~ ":mod:`distutils` is the original build "
#~ "and distribution system first added to"
#~ " the Python standard library in 1998."
#~ " While direct use of :mod:`distutils` "
#~ "is being phased out, it still laid"
#~ " the foundation for the current "
#~ "packaging and distribution infrastructure, and"
#~ " it not only remains part of "
#~ "the standard library, but its name "
#~ "lives on in other ways (such as"
#~ " the name of the mailing list "
#~ "used to coordinate Python packaging "
#~ "standards development)."
#~ msgstr ""
#~ ":mod:`distutils` 는 1998년에 파이썬 표준 라이브러리에"
#~ " 처음 추가된 최초의 빌드 및 배포 시스템입니다. "
#~ ":mod:`distutils` 의 직접 사용이 단계적으로 폐지되고 "
#~ "있지만, 여전히 현재의 패키징 및 배포 기반 시설의"
#~ " 기초를 이루고 있고, 표준 라이브러리의 일부로 남아있을"
#~ " 뿐만 아니라, 그 이름은 다른 방식으로도 (가령 "
#~ "파이썬 패키징 표준 개발을 조정하는 데 사용되는 "
#~ "메일링 리스트의 이름으로) 남아있습니다."

#~ msgid ""
#~ "`setuptools`_ is a (largely) drop-in "
#~ "replacement for :mod:`distutils` first "
#~ "published in 2004. Its most notable "
#~ "addition over the unmodified :mod:`distutils`"
#~ " tools was the ability to declare "
#~ "dependencies on other packages. It is"
#~ " currently recommended as a more "
#~ "regularly updated alternative to "
#~ ":mod:`distutils` that offers consistent "
#~ "support for more recent packaging "
#~ "standards across a wide range of "
#~ "Python versions."
#~ msgstr ""
#~ "`setuptools`_ 는 2004년에 처음 공개된, "
#~ ":mod:`distutils` 에 대한 (거의) 드롭인(drop-in)"
#~ " 대체품입니다. 수정되지 않은 :mod:`distutils` 도구와 "
#~ "비교할 때, 가장 주목할만한 추가는 다른 패키지에 "
#~ "대한 의존성을 선언할 수 있는 능력이었습니다. 현재, "
#~ ":mod:`distutils` 에 대한 보다 정기적으로 업데이트되는"
#~ " 대안으로 추천되는데, 광범위한 파이썬 버전에서 최근 "
#~ "패키징 표준을 더 일관성 있게 지원합니다."

#~ msgid ""
#~ "`wheel`_ (in this context) is a "
#~ "project that adds the ``bdist_wheel`` "
#~ "command to :mod:`distutils`/`setuptools`_. This "
#~ "produces a cross platform binary "
#~ "packaging format (called \"wheels\" or "
#~ "\"wheel files\" and defined in "
#~ ":pep:`427`) that allows Python libraries, "
#~ "even those including binary extensions, "
#~ "to be installed on a system "
#~ "without needing to be built locally."
#~ msgstr ""
#~ "`wheel`_\\(이 문맥에서)은 :mod:`distutils`/`setuptools`_ 에"
#~ " ``bdist_wheel`` 명령을 추가하는 프로젝트입니다. 이것은 "
#~ "파이썬 라이브러리를, 바이너리 확장을 포함한 것이라도, "
#~ "로컬에서 빌드될 필요 없이 시스템에 설치될 수 있게"
#~ " 해주는 크로스 플랫폼 바이너리 패키징 형식(\"휠\" "
#~ "이나 \"휠 파일\"로 불리고, :pep:`427`\\에서 정의됩니다)을"
#~ " 생성합니다."

#~ msgid "Open source licensing and collaboration"
#~ msgstr "공개 소스 라이센스 와 협업"

#~ msgid ""
#~ "In most parts of the world, "
#~ "software is automatically covered by "
#~ "copyright. This means that other "
#~ "developers require explicit permission to "
#~ "copy, use, modify and redistribute the"
#~ " software."
#~ msgstr ""
#~ "전 세계 대부분 지역에서, 소프트웨어는 자동으로 저작권의"
#~ " 보호를 받습니다. 즉, 다른 개발자가 소프트웨어를 "
#~ "복사, 사용, 수정 및 재배포하기 위해서는 명시적 "
#~ "허락이 필요합니다."

#~ msgid ""
#~ "Open source licensing is a way of"
#~ " explicitly granting such permission in "
#~ "a relatively consistent way, allowing "
#~ "developers to share and collaborate "
#~ "efficiently by making common solutions "
#~ "to various problems freely available. "
#~ "This leaves many developers free to "
#~ "spend more time focusing on the "
#~ "problems that are relatively unique to"
#~ " their specific situation."
#~ msgstr ""
#~ "공개 소스 라이선스는 상대적으로 일관된 방식으로 그러한 "
#~ "허락을 명시적으로 부여하는 방법으로, 다양한 문제에 대한"
#~ " 공통 솔루션을 자유롭게 만듦으로써 개발자가 효율적으로 "
#~ "공유하고 협업할 수 있게 합니다. 이로 인해 많은"
#~ " 개발자는 자신의 특정 상황에 상대적으로 고유한 문제에"
#~ " 집중하는 시간을 더 많이 할애할 수 있습니다."

#~ msgid ""
#~ "The distribution tools provided with "
#~ "Python are designed to make it "
#~ "reasonably straightforward for developers to"
#~ " make their own contributions back to"
#~ " that common pool of software if "
#~ "they choose to do so."
#~ msgstr ""
#~ "파이썬과 함께 제공되는 배포 도구는 개발자가 그렇게 "
#~ "하고자 할 때 소프트웨어의 공통 풀로 다시 기여하는"
#~ " 것을 합리적으로 손쉽게 만들도록 설계되었습니다."

#~ msgid ""
#~ "The same distribution tools can also "
#~ "be used to distribute software within"
#~ " an organisation, regardless of whether "
#~ "that software is published as open "
#~ "source software or not."
#~ msgstr "같은 배포 도구는, 공개 소스 소프트웨어로 게시되는지에 관계없이, 소프트웨어를 조직 내에서 배포하는데 사용될 수도 있습니다."

#~ msgid "Installing the tools"
#~ msgstr "도구 설치하기"

#~ msgid ""
#~ "The standard library does not include"
#~ " build tools that support modern "
#~ "Python packaging standards, as the core"
#~ " development team has found that it"
#~ " is important to have standard tools"
#~ " that work consistently, even on "
#~ "older versions of Python."
#~ msgstr ""
#~ "표준 라이브러리에는 최신 파이썬 패키징 표준을 지원하는 "
#~ "빌드 도구가 포함되어 있지 않습니다. 핵심 개발팀이 "
#~ "파이썬의 이전 버전에서도 일관되게 작동하는 표준 도구를 "
#~ "갖는 것이 중요하다는 사실을 발견했기 때문입니다."

#~ msgid ""
#~ "The currently recommended build and "
#~ "distribution tools can be installed by"
#~ " invoking the ``pip`` module at the"
#~ " command line::"
#~ msgstr "현재 권장되는 빌드 및 배포 도구는 명령 줄에서 ``pip`` 모듈을 호출하여 설치할 수 있습니다::"

#~ msgid ""
#~ "For POSIX users (including Mac OS "
#~ "X and Linux users), these instructions"
#~ " assume the use of a :term:`virtual"
#~ " environment`."
#~ msgstr ""
#~ "POSIX 사용자(맥 OS X 와 리눅스 사용자를 "
#~ "포함합니다)의 경우, 이 지침은 :term:`가상 환경 "
#~ "<virtual environment>` 을 사용한다고 가정합니다."

#~ msgid ""
#~ "For Windows users, these instructions "
#~ "assume that the option to adjust "
#~ "the system PATH environment variable was"
#~ " selected when installing Python."
#~ msgstr "윈도우 사용자의 경우, 이 지침은 파이썬을 설치할 때 시스템 PATH 환경 변수를 조정하는 옵션이 선택되었다고 가정합니다."

#~ msgid ""
#~ "The Python Packaging User Guide includes"
#~ " more details on the `currently "
#~ "recommended tools`_."
#~ msgstr ""
#~ "파이썬 패키징 사용자 지침서에는 `현재 권장되는 도구 "
#~ "<currently recommended tools_>`_ 에 대한 "
#~ "자세한 내용이 들어 있습니다."

#~ msgid "Reading the Python Packaging User Guide"
#~ msgstr "파이썬 패키징 사용자 지침서 읽기"

#~ msgid ""
#~ "The Python Packaging User Guide covers"
#~ " the various key steps and elements"
#~ " involved in creating and publishing "
#~ "a project:"
#~ msgstr "파이썬 패키징 사용자 지침서는 프로젝트를 만들고 출판하는 것에 관련된 다양한 핵심 단계와 요소를 다루고 있습니다:"

#~ msgid "`Project structure`_"
#~ msgstr "`프로젝트 구조 <Project structure_>`_"

#~ msgid "`Building and packaging the project`_"
#~ msgstr "`프로젝트들 빌드하고 패키징하기 <Building and packaging the project_>`_"

#~ msgid "`Uploading the project to the Python Packaging Index`_"
#~ msgstr ""
#~ "`프로젝트를 파이썬 패키지 색인에 올리기 <Uploading "
#~ "the project to the Python Packaging "
#~ "Index_>`_"

#~ msgid "`The .pypirc file`_"
#~ msgstr "`.pypirc 파일 <The .pypirc file_>`_"

#~ msgid "How do I...?"
#~ msgstr "어떻게 ...?"

#~ msgid "These are quick answers or links for some common tasks."
#~ msgstr "이것들은 몇 가지 일반적인 작업에 대한 빠른 답변 또는 링크입니다."

#~ msgid "... choose a name for my project?"
#~ msgstr "... 내 프로젝트의 이름을 고릅니까?"

#~ msgid "This isn't an easy topic, but here are a few tips:"
#~ msgstr "이것이 쉬운 주제는 아니지만, 여기 몇 가지 팁이 있습니다:"

#~ msgid "check the Python Packaging Index to see if the name is already in use"
#~ msgstr "파이썬 패키지 색인을 검사해서 이름이 이미 사용 중인지 확인하십시오"

#~ msgid ""
#~ "check popular hosting sites like GitHub,"
#~ " Bitbucket, etc to see if there "
#~ "is already a project with that "
#~ "name"
#~ msgstr "GitHub, Bitbucket 등 인기 있는 호스팅 사이트를 확인하여 이미 해당 이름의 프로젝트가 있는지 확인하십시오"

#~ msgid "check what comes up in a web search for the name you're considering"
#~ msgstr "고려 중인 이름으로 웹 검색에서 뭐가 나오는지 확인하십시오"

#~ msgid ""
#~ "avoid particularly common words, especially"
#~ " ones with multiple meanings, as they"
#~ " can make it difficult for users "
#~ "to find your software when searching "
#~ "for it"
#~ msgstr ""
#~ "특히 흔한 단어(특히 여러 의미가 있는 단어)는 "
#~ "피해야 합니다, 사용자가 여러분의 소프트웨어를 검색할 때"
#~ " 찾기 어렵게 만들기 때문입니다"

#~ msgid "... create and distribute binary extensions?"
#~ msgstr "... 바이너리 확장을 만들고 배포합니까?"

#~ msgid ""
#~ "This is actually quite a complex "
#~ "topic, with a variety of alternatives"
#~ " available depending on exactly what "
#~ "you're aiming to achieve. See the "
#~ "Python Packaging User Guide for more "
#~ "information and recommendations."
#~ msgstr ""
#~ "이것은 정확히 당신이 달성하고자 하는 목표에 따라 "
#~ "다양한 대안을 사용할 수 있는 실제로 꽤 복잡한"
#~ " 주제입니다. 자세한 정보와 권장 사항은 파이썬 패키징"
#~ " 사용자 지침서를 참조하십시오."

#~ msgid ""
#~ "`Python Packaging User Guide: Binary "
#~ "Extensions <https://packaging.python.org/guides/packaging-"
#~ "binary-extensions/>`__"
#~ msgstr ""
#~ "`파이썬 패키징 사용자 지침서: 바이너리 확장 "
#~ "<https://packaging.python.org/guides/packaging-binary-"
#~ "extensions/>`__"


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../c-api/cell.rst:6
msgid "Cell Objects"
msgstr "셀 객체"

#: ../../c-api/cell.rst:8
msgid ""
"\"Cell\" objects are used to implement variables referenced by multiple "
"scopes. For each such variable, a cell object is created to store the "
"value; the local variables of each stack frame that references the value "
"contains a reference to the cells from outer scopes which also use that "
"variable.  When the value is accessed, the value contained in the cell is"
" used instead of the cell object itself.  This de-referencing of the cell"
" object requires support from the generated byte-code; these are not "
"automatically de-referenced when accessed. Cell objects are not likely to"
" be useful elsewhere."
msgstr ""
"\"셀\" 객체는 여러 스코프에서 참조하는 변수를 구현하는 데 사용됩니다. 이러한 변수마다, 값을 저장하기 위해 셀 객체가 "
"만들어집니다; 값을 참조하는 각 스택 프레임의 지역 변수에는 해당 변수를 사용하는 외부 스코프의 셀에 대한 참조가 포함됩니다. 값에"
" 액세스하면, 셀 객체 자체 대신 셀에 포함된 값이 사용됩니다. 이러한 셀 객체의 역참조(de-referencing)는 생성된 "
"바이트 코드로부터의 지원이 필요합니다; 액세스 시 자동으로 역참조되지 않습니다. 셀 객체는 다른 곳에 유용하지는 않습니다."

#: ../../c-api/cell.rst:20
msgid "The C structure used for cell objects."
msgstr "셀 객체에 사용되는 C 구조체."

#: ../../c-api/cell.rst:25
msgid "The type object corresponding to cell objects."
msgstr "셀 객체에 해당하는 형 객체."

#: ../../c-api/cell.rst:30
msgid ""
"Return true if *ob* is a cell object; *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr "*ob*\\가 셀 객체면 참을 반환합니다; *ob*\\는 ``NULL``\\이 아니어야 합니다. 이 함수는 항상 성공합니다."

#: ../../c-api/cell.rst:36
msgid ""
"Create and return a new cell object containing the value *ob*. The "
"parameter may be ``NULL``."
msgstr "*ob* 값을 포함하는 새 셀 객체를 만들고 반환합니다. 매개 변수는 ``NULL`` 일 수 있습니다."

#: ../../c-api/cell.rst:42
#, fuzzy
msgid ""
"Return the contents of the cell *cell*, which can be ``NULL``. If *cell* "
"is not a cell object, returns ``NULL`` with an exception set."
msgstr "셀 *cell*\\의 내용을 반환하지만, *cell*\\이 ``NULL``\\이 아닌지와 셀 객체인지를 확인하지 않습니다."

#: ../../c-api/cell.rst:48
msgid ""
"Return the contents of the cell *cell*, but without checking that *cell* "
"is non-``NULL`` and a cell object."
msgstr "셀 *cell*\\의 내용을 반환하지만, *cell*\\이 ``NULL``\\이 아닌지와 셀 객체인지를 확인하지 않습니다."

#: ../../c-api/cell.rst:54
#, fuzzy
msgid ""
"Set the contents of the cell object *cell* to *value*.  This releases the"
" reference to any current content of the cell. *value* may be ``NULL``.  "
"*cell* must be non-``NULL``."
msgstr ""
"셀 객체 *cell*\\의 내용을 *value*\\로 설정합니다. 이렇게 하면 셀의 현재 내용에 대한 참조를 해제합니다. "
"*value*\\는 ``NULL`` 일 수 있습니다. *cell*\\는 ``NULL``\\이 아니어야 합니다; 셀 객체가 아니면, "
"``-1``\\이 반환됩니다. 성공하면, ``0``\\이 반환됩니다."

#: ../../c-api/cell.rst:58
msgid ""
"On success, return ``0``. If *cell* is not a cell object, set an "
"exception and return ``-1``."
msgstr ""

#: ../../c-api/cell.rst:64
msgid ""
"Sets the value of the cell object *cell* to *value*.  No reference counts"
" are adjusted, and no checks are made for safety; *cell* must be "
"non-``NULL`` and must be a cell object."
msgstr ""
"셀 객체 *cell*\\의 값을 *value*\\로 설정합니다. 참조 횟수는 조정되지 않고, 안전을 위한 검사가 이루어지지 "
"않습니다; *cell*\\은 ``NULL``\\이 아니어야 하고 셀 객체여야 합니다."

#~ msgid "Return the contents of the cell *cell*."
#~ msgstr "셀 *cell*\\의 내용을 반환합니다."


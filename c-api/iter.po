# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../c-api/iter.rst:6
msgid "Iterator Protocol"
msgstr "이터레이터 프로토콜"

#: ../../c-api/iter.rst:8
msgid "There are two functions specifically for working with iterators."
msgstr "특히 이터레이터를 사용하기 위한 두 함수가 있습니다."

#: ../../c-api/iter.rst:12
#, fuzzy
msgid ""
"Return non-zero if the object *o* can be safely passed to "
":c:func:`PyIter_Next`, and ``0`` otherwise.  This function always "
"succeeds."
msgstr "객체 *o*\\가 이터레이터 프로토콜을 지원하면 참을 돌려줍니다. 이 함수는 항상 성공합니다."

#: ../../c-api/iter.rst:17
#, fuzzy
msgid ""
"Return non-zero if the object *o* provides the :class:`AsyncIterator` "
"protocol, and ``0`` otherwise.  This function always succeeds."
msgstr "객체 *o*\\가 이터레이터 프로토콜을 지원하면 참을 돌려줍니다. 이 함수는 항상 성공합니다."

#: ../../c-api/iter.rst:24
#, fuzzy
msgid ""
"Return the next value from the iterator *o*.  The object must be an "
"iterator according to :c:func:`PyIter_Check` (it is up to the caller to "
"check this). If there are no remaining values, returns ``NULL`` with no "
"exception set. If an error occurs while retrieving the item, returns "
"``NULL`` and passes along the exception."
msgstr ""
"이터레이션 *o*\\에서 다음 값을 반환합니다. 객체는 이터레이터 여야 합니다 (이것을 확인하는 것은 호출자 책임입니다). 남은 "
"값이 없으면, 예외가 설정되지 않은 상태로 ``NULL``\\을 반환합니다. 항목을 꺼내는 동안 에러가 발생하면, "
"``NULL``\\을 반환하고 예외를 전달합니다."

#: ../../c-api/iter.rst:30
msgid ""
"To write a loop which iterates over an iterator, the C code should look "
"something like this::"
msgstr "이터레이터를 이터레이트하는 루프를 작성하려면, C 코드는 이런 식으로 되어야 합니다::"

#: ../../c-api/iter.rst:33
#, python-brace-format
msgid ""
"PyObject *iterator = PyObject_GetIter(obj);\n"
"PyObject *item;\n"
"\n"
"if (iterator == NULL) {\n"
"    /* propagate error */\n"
"}\n"
"\n"
"while ((item = PyIter_Next(iterator))) {\n"
"    /* do something with item */\n"
"    ...\n"
"    /* release reference when done */\n"
"    Py_DECREF(item);\n"
"}\n"
"\n"
"Py_DECREF(iterator);\n"
"\n"
"if (PyErr_Occurred()) {\n"
"    /* propagate error */\n"
"}\n"
"else {\n"
"    /* continue doing useful work */\n"
"}"
msgstr ""

#: ../../c-api/iter.rst:59
msgid ""
"The enum value used to represent different results of "
":c:func:`PyIter_Send`."
msgstr ""

#: ../../c-api/iter.rst:66
msgid "Sends the *arg* value into the iterator *iter*. Returns:"
msgstr ""

#: ../../c-api/iter.rst:68
msgid ""
"``PYGEN_RETURN`` if iterator returns. Return value is returned via "
"*presult*."
msgstr ""

#: ../../c-api/iter.rst:69
msgid ""
"``PYGEN_NEXT`` if iterator yields. Yielded value is returned via "
"*presult*."
msgstr ""

#: ../../c-api/iter.rst:70
msgid ""
"``PYGEN_ERROR`` if iterator has raised and exception. *presult* is set to"
" ``NULL``."
msgstr ""


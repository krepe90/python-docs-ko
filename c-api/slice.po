# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../c-api/slice.rst:6
msgid "Slice Objects"
msgstr "슬라이스 객체"

#: ../../c-api/slice.rst:11
msgid ""
"The type object for slice objects.  This is the same as :class:`slice` in"
" the Python layer."
msgstr "슬라이스 객체의 형 객체. 이것은 파이썬 계층의 :class:`slice`\\와 같습니다."

#: ../../c-api/slice.rst:17
msgid ""
"Return true if *ob* is a slice object; *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr "*ob*\\가 슬라이스 객체면 참을 반환합니다. *ob*\\는 ``NULL``\\이 아니어야 합니다. 이 함수는 항상 성공합니다."

#: ../../c-api/slice.rst:23
msgid ""
"Return a new slice object with the given values.  The *start*, *stop*, "
"and *step* parameters are used as the values of the slice object "
"attributes of the same names.  Any of the values may be ``NULL``, in "
"which case the ``None`` will be used for the corresponding attribute."
msgstr ""
"지정된 값으로 새로운 슬라이스 객체를 반환합니다. *start*, *stop* 및 *step* 매개 변수는 같은 이름의 슬라이스 "
"객체 어트리뷰트의 값으로 사용됩니다. 모든 값은 ``NULL`` 일 수 있으며, 이 경우 ``None``\\이 해당 어트리뷰트에 "
"사용됩니다."

#: ../../c-api/slice.rst:28
msgid ""
"Return ``NULL`` with an exception set if the new object could not be "
"allocated."
msgstr "새 객체를 할당할 수 없으면 예외를 설정하고 ``NULL``\\을 반환합니다."

#: ../../c-api/slice.rst:34
msgid ""
"Retrieve the start, stop and step indices from the slice object *slice*, "
"assuming a sequence of length *length*. Treats indices greater than "
"*length* as errors."
msgstr ""
"길이가 *length*\\인 시퀀스를 가정하여, 슬라이스 객체 *slice*\\에서 start, stop 및 step 인덱스를 "
"가져옵니다. *length*\\보다 큰 인덱스를 에러로 처리합니다."

#: ../../c-api/slice.rst:38
msgid ""
"Returns ``0`` on success and ``-1`` on error with no exception set "
"(unless one of the indices was not ``None`` and failed to be converted to"
" an integer, in which case ``-1`` is returned with an exception set)."
msgstr ""
"성공하면 ``0``\\을 반환하고, 에러면 예외 설정 없이 ``-1``\\을 반환합니다 (인덱스 중 하나가 ``None``\\이 "
"아니고 정수로 변환되지 않는 한, 이때는 예외를 설정하고 ``-1``\\을 반환합니다)."

#: ../../c-api/slice.rst:42
msgid "You probably do not want to use this function."
msgstr "이 기능을 사용하고 싶지는 않을 것입니다."

#: ../../c-api/slice.rst:44 ../../c-api/slice.rst:75
msgid ""
"The parameter type for the *slice* parameter was ``PySliceObject*`` "
"before."
msgstr "전에는 *slice* 매개 변수의 매개 변수 형이 ``PySliceObject*``\\였습니다."

#: ../../c-api/slice.rst:51
msgid ""
"Usable replacement for :c:func:`PySlice_GetIndices`.  Retrieve the start,"
" stop, and step indices from the slice object *slice* assuming a sequence"
" of length *length*, and store the length of the slice in *slicelength*."
"  Out of bounds indices are clipped in a manner consistent with the "
"handling of normal slices."
msgstr ""
":c:func:`PySlice_GetIndices`\\를 쓸만하게 대체합니다. 길이가 *length*\\인 시퀀스를 가정하여, "
"슬라이스 객체 *slice*\\에서 start, stop 및 step 인덱스를 가져오고, *slicelength*\\에 슬라이스의 "
"길이를 저장합니다. 범위를 벗어난 인덱스는 일반 슬라이스의 처리와 일관된 방식으로 잘립니다."

#: ../../c-api/slice.rst:57
msgid "Return ``0`` on success and ``-1`` on error with an exception set."
msgstr "성공하면 ``0``\\을 반환하고, 에러면 예외를 설정하고 ``-1``\\을 반환합니다."

#: ../../c-api/slice.rst:60
msgid ""
"This function is considered not safe for resizable sequences. Its "
"invocation should be replaced by a combination of "
":c:func:`PySlice_Unpack` and :c:func:`PySlice_AdjustIndices` where ::"
msgstr ""
"이 함수는 크기를 조정할 수 있는 시퀀스에는 안전하지 않은 것으로 간주합니다. 호출은 "
":c:func:`PySlice_Unpack`\\와 :c:func:`PySlice_AdjustIndices`\\의 조합으로 대체되어야"
" 합니다. 즉 ::"

#: ../../c-api/slice.rst:64
#, python-brace-format
msgid ""
"if (PySlice_GetIndicesEx(slice, length, &start, &stop, &step, "
"&slicelength) < 0) {\n"
"    // return error\n"
"}"
msgstr ""
"if (PySlice_GetIndicesEx(slice, length, &start, &stop, &step, "
"&slicelength) < 0) {\n"
"    // 에러 반환\n"
"}"

#: ../../c-api/slice.rst:68
msgid "is replaced by ::"
msgstr "은 다음으로 대체됩니다 ::"

#: ../../c-api/slice.rst:70
#, python-brace-format
msgid ""
"if (PySlice_Unpack(slice, &start, &stop, &step) < 0) {\n"
"    // return error\n"
"}\n"
"slicelength = PySlice_AdjustIndices(length, &start, &stop, step);"
msgstr ""
"if (PySlice_Unpack(slice, &start, &stop, &step) < 0) {\n"
"    // 에러 반환\n"
"}\n"
"slicelength = PySlice_AdjustIndices(length, &start, &stop, step);"

#: ../../c-api/slice.rst:79
msgid ""
"If ``Py_LIMITED_API`` is not set or set to the value between "
"``0x03050400`` and ``0x03060000`` (not including) or ``0x03060100`` or "
"higher :c:func:`!PySlice_GetIndicesEx` is implemented as a macro using "
":c:func:`!PySlice_Unpack` and :c:func:`!PySlice_AdjustIndices`. Arguments"
" *start*, *stop* and *step* are evaluated more than once."
msgstr ""
"``Py_LIMITED_API``\\가 설정되어 있지 않거나 ``0x03050400``\\과 ``0x03060000`` (포함하지 "
"않음) 사이나 ``0x03060100`` 이상의 값으로 설정되었으면, :c:func:`!PySlice_GetIndicesEx`\\는"
" :c:func:`!PySlice_Unpack`\\과 :c:func:`!PySlice_AdjustIndices`\\를 사용하는 "
"매크로로 구현됩니다. 인자 *start*, *stop* 및 *step*\\는 여러 번 평가됩니다."

#: ../../c-api/slice.rst:86
msgid ""
"If ``Py_LIMITED_API`` is set to the value less than ``0x03050400`` or "
"between ``0x03060000`` and ``0x03060100`` (not including) "
":c:func:`!PySlice_GetIndicesEx` is a deprecated function."
msgstr ""
"``Py_LIMITED_API``\\가 ``0x03050400``\\보다 작거나 ``0x03060000``\\과 "
"``0x03060100`` (포함하지 않음) 사이의 값으로 설정되었으면 "
":c:func:`!PySlice_GetIndicesEx`\\는 폐지된 함수입니다."

#: ../../c-api/slice.rst:94
msgid ""
"Extract the start, stop and step data members from a slice object as C "
"integers.  Silently reduce values larger than ``PY_SSIZE_T_MAX`` to "
"``PY_SSIZE_T_MAX``, silently boost the start and stop values less than "
"``PY_SSIZE_T_MIN`` to ``PY_SSIZE_T_MIN``, and silently boost the step "
"values less than ``-PY_SSIZE_T_MAX`` to ``-PY_SSIZE_T_MAX``."
msgstr ""
"슬라이스 객체의 start, stop 및 step 데이터 멤버를 C 정수로 추출합니다. ``PY_SSIZE_T_MAX``\\보다 큰"
" 값을 ``PY_SSIZE_T_MAX``\\로 조용히 줄이고, ``PY_SSIZE_T_MIN``\\보다 작은 start 와 stop"
" 값을 ``PY_SSIZE_T_MIN``\\로 조용히 높이고, ``-PY_SSIZE_T_MAX``\\보다 작은 step 값을 "
"``-PY_SSIZE_T_MAX``\\로 조용히 높입니다."

#: ../../c-api/slice.rst:100
msgid "Return ``-1`` with an exception set on error, ``0`` on success."
msgstr "에러면 예외를 설정하고 ``-1``\\을, 성공하면 ``0``\\을 반환합니다."

#: ../../c-api/slice.rst:107
msgid ""
"Adjust start/end slice indices assuming a sequence of the specified "
"length. Out of bounds indices are clipped in a manner consistent with the"
" handling of normal slices."
msgstr ""
"지정된 length 길이의 시퀀스를 가정하여 start/stop 슬라이스 인덱스를 조정합니다. 범위를 벗어난 인덱스는 일반 "
"슬라이스의 처리와 일관된 방식으로 잘립니다."

#: ../../c-api/slice.rst:111
msgid ""
"Return the length of the slice.  Always successful.  Doesn't call Python "
"code."
msgstr "슬라이스의 길이를 반환합니다. 항상 성공합니다. 파이썬 코드를 호출하지 않습니다."

#: ../../c-api/slice.rst:118
msgid "Ellipsis Object"
msgstr "Ellipsis 객체"

#: ../../c-api/slice.rst:123
msgid ""
"The type of Python :const:`Ellipsis` object.  Same as "
":class:`types.EllipsisType` in the Python layer."
msgstr "파이썬 :const:`Ellipsis` 객체의 형. 파이썬 계층의 :class:`types.EllipsisType`\\과 같습니다."

#: ../../c-api/slice.rst:129
msgid ""
"The Python ``Ellipsis`` object.  This object has no methods.  Like "
":c:data:`Py_None`, it is an :term:`immortal` singleton object."
msgstr ""
"파이썬 ``Ellipsis`` 객체. 이 객체에는 메서드가 없습니다. :c:data:`Py_None`\\과 마찬가지로, "
":term:`불멸 <immortal>` 싱글톤 객체입니다."

#: ../../c-api/slice.rst:132
msgid ":c:data:`Py_Ellipsis` is immortal."
msgstr ":c:data:`Py_Ellipsis`\\는 불멸입니다."


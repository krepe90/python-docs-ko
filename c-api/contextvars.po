# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../c-api/contextvars.rst:6
msgid "Context Variables Objects"
msgstr "컨텍스트 변수 객체"

#: ../../c-api/contextvars.rst:15
msgid ""
"In Python 3.7.1 the signatures of all context variables C APIs were "
"**changed** to use :c:type:`PyObject` pointers instead of "
":c:type:`PyContext`, :c:type:`PyContextVar`, and "
":c:type:`PyContextToken`, e.g.::"
msgstr ""
"파이썬 3.7.1에서 모든 컨텍스트 변수 C API의 서명이 :c:type:`PyContext`, "
":c:type:`PyContextVar` 및 :c:type:`PyContextToken` 대신 :c:type:`PyObject` "
"포인터를 사용하도록 **변경되었습니다**, 예를 들어::"

#: ../../c-api/contextvars.rst:20
msgid ""
"// in 3.7.0:\n"
"PyContext *PyContext_New(void);\n"
"\n"
"// in 3.7.1+:\n"
"PyObject *PyContext_New(void);"
msgstr ""
"// in 3.7.0:\n"
"PyContext *PyContext_New(void);\n"
"\n"
"// in 3.7.1+:\n"
"PyObject *PyContext_New(void);"

#: ../../c-api/contextvars.rst:26
msgid "See :issue:`34762` for more details."
msgstr "자세한 내용은 :issue:`34762`\\를 참조하십시오."

#: ../../c-api/contextvars.rst:29
msgid "This section details the public C API for the :mod:`contextvars` module."
msgstr "이 절에서는 :mod:`contextvars` 모듈을 위한 공용 C API에 대해 자세히 설명합니다."

#: ../../c-api/contextvars.rst:33
msgid "The C structure used to represent a :class:`contextvars.Context` object."
msgstr ":class:`contextvars.Context` 객체를 나타내는 데 사용되는 C 구조체."

#: ../../c-api/contextvars.rst:38
msgid ""
"The C structure used to represent a :class:`contextvars.ContextVar` "
"object."
msgstr ":class:`contextvars.ContextVar` 객체를 나타내는 데 사용되는 C 구조체."

#: ../../c-api/contextvars.rst:43
msgid "The C structure used to represent a :class:`contextvars.Token` object."
msgstr ":class:`contextvars.Token` 객체를 나타내는 데 사용되는 C 구조체."

#: ../../c-api/contextvars.rst:47
msgid "The type object representing the *context* type."
msgstr "*context* 형을 나타내는 형 객체."

#: ../../c-api/contextvars.rst:51
msgid "The type object representing the *context variable* type."
msgstr "*컨텍스트 변수* 형을 나타내는 형 객체."

#: ../../c-api/contextvars.rst:55
msgid "The type object representing the *context variable token* type."
msgstr "*컨텍스트 변수 토큰* 형을 나타내는 형 객체."

#: ../../c-api/contextvars.rst:58
msgid "Type-check macros:"
msgstr "형 검사 매크로:"

#: ../../c-api/contextvars.rst:62
msgid ""
"Return true if *o* is of type :c:data:`PyContext_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"*o*\\가 :c:data:`PyContext_Type` 형이면 참을 돌려줍니다. *o*\\는 ``NULL``\\이 아니어야 "
"합니다. 이 함수는 항상 성공합니다."

#: ../../c-api/contextvars.rst:67
msgid ""
"Return true if *o* is of type :c:data:`PyContextVar_Type`. *o* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"*o*\\가 :c:data:`PyContextVar_Type` 형이면 참을 돌려줍니다. *o*\\는 ``NULL``\\이 아니어야 "
"합니다. 이 함수는 항상 성공합니다."

#: ../../c-api/contextvars.rst:72
msgid ""
"Return true if *o* is of type :c:data:`PyContextToken_Type`. *o* must not"
" be ``NULL``.  This function always succeeds."
msgstr ""
"*o*\\가 :c:data:`PyContextToken_Type` 형이면 참을 돌려줍니다. *o*\\는 ``NULL``\\이 "
"아니어야 합니다. 이 함수는 항상 성공합니다."

#: ../../c-api/contextvars.rst:76
msgid "Context object management functions:"
msgstr "컨텍스트 객체 관리 함수:"

#: ../../c-api/contextvars.rst:80
msgid ""
"Create a new empty context object.  Returns ``NULL`` if an error has "
"occurred."
msgstr "새로운 빈 컨텍스트 객체를 만듭니다. 에러가 발생하면 ``NULL``\\를 반환합니다."

#: ../../c-api/contextvars.rst:85
msgid ""
"Create a shallow copy of the passed *ctx* context object. Returns "
"``NULL`` if an error has occurred."
msgstr "전달된 *ctx* 컨텍스트 객체의 얕은 복사본을 만듭니다. 에러가 발생하면 ``NULL``\\을 반환합니다."

#: ../../c-api/contextvars.rst:90
msgid ""
"Create a shallow copy of the current thread context. Returns ``NULL`` if "
"an error has occurred."
msgstr "현재 스레드 컨텍스트의 얕은 복사본을 만듭니다. 에러가 발생하면 ``NULL``\\을 반환합니다."

#: ../../c-api/contextvars.rst:95
msgid ""
"Set *ctx* as the current context for the current thread. Returns ``0`` on"
" success, and ``-1`` on error."
msgstr "현재 스레드의 현재 컨텍스트로 *ctx*\\를 설정합니다. 성공 시 ``0``\\을 반환하고, 에러 시 ``-1``\\을 반환합니다."

#: ../../c-api/contextvars.rst:100
msgid ""
"Deactivate the *ctx* context and restore the previous context as the "
"current context for the current thread.  Returns ``0`` on success, and "
"``-1`` on error."
msgstr ""
"*ctx* 컨텍스트를 비활성화하고 이전 컨텍스트를 현재 스레드의 현재 컨텍스트로 복원합니다. 성공 시 ``0``\\을 반환하고, "
"에러 시 ``-1``\\을 반환합니다."

#: ../../c-api/contextvars.rst:105
msgid "Context variable functions:"
msgstr "컨텍스트 변수 함수:"

#: ../../c-api/contextvars.rst:109
msgid ""
"Create a new ``ContextVar`` object.  The *name* parameter is used for "
"introspection and debug purposes.  The *def* parameter specifies a "
"default value for the context variable, or ``NULL`` for no default. If an"
" error has occurred, this function returns ``NULL``."
msgstr ""
"새 ``ContextVar`` 객체를 만듭니다. *name* 매개 변수는 인트로스펙션과 디버그 목적으로 사용됩니다. *def* 매개"
" 변수는 컨텍스트 변수의 기본값을 지정할 수 있습니다. ``NULL``\\은 기본값 없음입니다. 에러가 발생하면, 이 함수는 "
"``NULL``\\을 반환합니다."

#: ../../c-api/contextvars.rst:116
msgid ""
"Get the value of a context variable.  Returns ``-1`` if an error has "
"occurred during lookup, and ``0`` if no error occurred, whether or not a "
"value was found."
msgstr ""
"컨텍스트 변수의 값을 가져옵니다. 조회하는 동안 에러가 발생하면 ``-1``\\을 반환하고, 값이 있는지와 상관없이 에러가 발생하지"
" 않으면 ``0``\\을 반환합니다."

#: ../../c-api/contextvars.rst:120
msgid ""
"If the context variable was found, *value* will be a pointer to it. If "
"the context variable was *not* found, *value* will point to:"
msgstr ""
"컨텍스트 변수가 발견되면, *value*\\는 그것을 가리키는 포인터가 됩니다. 컨텍스트 변수가 발견되지 *않으면*, "
"*value*\\는 다음을 가리 킵니다:"

#: ../../c-api/contextvars.rst:123
msgid "*default_value*, if not ``NULL``;"
msgstr "*default_value*, ``NULL``\\이 아니면;"

#: ../../c-api/contextvars.rst:124
msgid "the default value of *var*, if not ``NULL``;"
msgstr "*var*\\의 기본값, ``NULL``\\이 아니면;"

#: ../../c-api/contextvars.rst:125
msgid "``NULL``"
msgstr "``NULL``"

#: ../../c-api/contextvars.rst:127
msgid "Except for ``NULL``, the function returns a new reference."
msgstr "``NULL``\\일 때를 제외하고, 이 함수는 새 참조를 반환합니다."

#: ../../c-api/contextvars.rst:131
msgid ""
"Set the value of *var* to *value* in the current context.  Returns a new "
"token object for this change, or ``NULL`` if an error has occurred."
msgstr ""
"현재 컨텍스트에서 *var*\\의 값을 *value*\\로 설정합니다. 이 변경에 대한 새 토큰 객체를 반환하거나, 에러가 발생하면"
" ``NULL``\\을 반환합니다."

#: ../../c-api/contextvars.rst:136
msgid ""
"Reset the state of the *var* context variable to that it was in before "
":c:func:`PyContextVar_Set` that returned the *token* was called. This "
"function returns ``0`` on success and ``-1`` on error."
msgstr ""
"*var* 컨텍스트 변수의 상태를 *token*\\을 반환한 :c:func:`PyContextVar_Set` 호출 전의 상태로 "
"재설정합니다. 이 함수는 성공 시 ``0``\\을 반환하고, 에러 시 ``-1``\\을 반환합니다."


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../c-api/bytes.rst:6
msgid "Bytes Objects"
msgstr "바이트열 객체"

#: ../../c-api/bytes.rst:8
#, fuzzy
msgid ""
"These functions raise :exc:`TypeError` when expecting a bytes parameter "
"and called with a non-bytes parameter."
msgstr "이 함수들은 바이트열 매개 변수가 필요할 때 바이트열이 아닌 매개 변수로 호출하면 :exc:`TypeError`\\를 발생시킵니다."

#: ../../c-api/bytes.rst:16
msgid "This subtype of :c:type:`PyObject` represents a Python bytes object."
msgstr "이 :c:type:`PyObject`\\의 서브 형은 파이썬 바이트열 객체를 나타냅니다."

#: ../../c-api/bytes.rst:21
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python bytes type;"
" it is the same object as :class:`bytes` in the Python layer."
msgstr ""
"이 :c:type:`PyTypeObject`\\의 인스턴스는 파이썬 바이트열 형을 나타냅니다; 파이썬 계층의 "
":class:`bytes`\\와 같은 객체입니다."

#: ../../c-api/bytes.rst:27
msgid ""
"Return true if the object *o* is a bytes object or an instance of a "
"subtype of the bytes type.  This function always succeeds."
msgstr "객체 *o*\\가 바이트열 객체이거나 바이트열 형의 서브 형의 인스턴스면 참을 반환합니다. 이 함수는 항상 성공합니다."

#: ../../c-api/bytes.rst:33
msgid ""
"Return true if the object *o* is a bytes object, but not an instance of a"
" subtype of the bytes type.  This function always succeeds."
msgstr "객체 *o*\\가 바이트열 객체이지만, 바이트열 형의 서브 형의 인스턴스는 아니면 참을 반환합니다. 이 함수는 항상 성공합니다."

#: ../../c-api/bytes.rst:39
msgid ""
"Return a new bytes object with a copy of the string *v* as value on "
"success, and ``NULL`` on failure.  The parameter *v* must not be "
"``NULL``; it will not be checked."
msgstr ""
"성공하면 값으로 *v* 문자열의 복사본을 갖는 새 바이트열 객체를 반환하고, 실패하면 ``NULL``\\을 반환합니다. 매개 변수 "
"*v*\\는 ``NULL``\\이 아니어야 합니다; 검사하지 않습니다."

#: ../../c-api/bytes.rst:46
msgid ""
"Return a new bytes object with a copy of the string *v* as value and "
"length *len* on success, and ``NULL`` on failure.  If *v* is ``NULL``, "
"the contents of the bytes object are uninitialized."
msgstr ""
"성공하면 값이 *v* 문자열의 복사본이고 길이가 *len*\\인 새 바이트열 객체를 반환하고, 실패하면 ``NULL``\\을 "
"반환합니다. *v*\\가 ``NULL``\\이면, 바이트열 객체의 내용은 초기화되지 않습니다."

#: ../../c-api/bytes.rst:53
msgid ""
"Take a C :c:func:`printf`\\ -style *format* string and a variable number "
"of arguments, calculate the size of the resulting Python bytes object and"
" return a bytes object with the values formatted into it.  The variable "
"arguments must be C types and must correspond exactly to the format "
"characters in the *format* string.  The following format characters are "
"allowed:"
msgstr ""
"C :c:func:`printf`\\ -스타일 *format* 문자열과 가변 개수의 인자를 받아서, 결과 파이썬 바이트열 객체의 "
"크기를 계산하고 그 안에 값이 포맷된 바이트열 객체를 반환합니다. 가변 인자는 C 형이어야 하며 *format* 문자열에 있는 포맷"
" 문자들과 정확히 대응해야 합니다. 허용되는 포맷 문자는 다음과 같습니다:"

#: ../../c-api/bytes.rst:65
msgid "Format Characters"
msgstr "포맷 문자"

#: ../../c-api/bytes.rst:65
msgid "Type"
msgstr "형"

#: ../../c-api/bytes.rst:65
msgid "Comment"
msgstr "주석"

#: ../../c-api/bytes.rst:67
#, python-format
msgid "``%%``"
msgstr ""

#: ../../c-api/bytes.rst:67
msgid "*n/a*"
msgstr "*n/a*"

#: ../../c-api/bytes.rst:67
#, python-format
msgid "The literal % character."
msgstr "리터럴 % 문자."

#: ../../c-api/bytes.rst:69
#, python-format
msgid "``%c``"
msgstr ""

#: ../../c-api/bytes.rst:69 ../../c-api/bytes.rst:72 ../../c-api/bytes.rst:90
#: ../../c-api/bytes.rst:93
msgid "int"
msgstr "int"

#: ../../c-api/bytes.rst:69
msgid "A single byte, represented as a C int."
msgstr "단일 바이트, C int로 표현됩니다."

#: ../../c-api/bytes.rst:72
#, python-format
msgid "``%d``"
msgstr ""

#: ../../c-api/bytes.rst:72
#, python-format
msgid "Equivalent to ``printf(\"%d\")``. [1]_"
msgstr "``printf(\"%d\")``\\와 동등합니다. [1]_"

#: ../../c-api/bytes.rst:75
#, python-format
msgid "``%u``"
msgstr ""

#: ../../c-api/bytes.rst:75
msgid "unsigned int"
msgstr "unsigned int"

#: ../../c-api/bytes.rst:75
#, python-format
msgid "Equivalent to ``printf(\"%u\")``. [1]_"
msgstr "``printf(\"%u\")``\\와 동등합니다. [1]_"

#: ../../c-api/bytes.rst:78
#, python-format
msgid "``%ld``"
msgstr ""

#: ../../c-api/bytes.rst:78
msgid "long"
msgstr "long"

#: ../../c-api/bytes.rst:78
#, python-format
msgid "Equivalent to ``printf(\"%ld\")``. [1]_"
msgstr "``printf(\"%ld\")``\\와 동등합니다. [1]_"

#: ../../c-api/bytes.rst:81
#, python-format
msgid "``%lu``"
msgstr ""

#: ../../c-api/bytes.rst:81
msgid "unsigned long"
msgstr "unsigned long"

#: ../../c-api/bytes.rst:81
#, python-format
msgid "Equivalent to ``printf(\"%lu\")``. [1]_"
msgstr "``printf(\"%lu\")``\\와 동등합니다. [1]_"

#: ../../c-api/bytes.rst:84
msgid "``%zd``"
msgstr ""

#: ../../c-api/bytes.rst:84
#, fuzzy
msgid ":c:type:`\\ Py_ssize_t`"
msgstr "Py_ssize_t"

#: ../../c-api/bytes.rst:84
msgid "Equivalent to ``printf(\"%zd\")``. [1]_"
msgstr "``printf(\"%zd\")``\\와 동등합니다. [1]_"

#: ../../c-api/bytes.rst:87
msgid "``%zu``"
msgstr ""

#: ../../c-api/bytes.rst:87
msgid "size_t"
msgstr "size_t"

#: ../../c-api/bytes.rst:87
msgid "Equivalent to ``printf(\"%zu\")``. [1]_"
msgstr "``printf(\"%zu\")``\\와 동등합니다. [1]_"

#: ../../c-api/bytes.rst:90
#, python-format
msgid "``%i``"
msgstr ""

#: ../../c-api/bytes.rst:90
#, python-format
msgid "Equivalent to ``printf(\"%i\")``. [1]_"
msgstr "``printf(\"%i\")``\\와 동등합니다. [1]_"

#: ../../c-api/bytes.rst:93
#, python-format
msgid "``%x``"
msgstr ""

#: ../../c-api/bytes.rst:93
#, python-format
msgid "Equivalent to ``printf(\"%x\")``. [1]_"
msgstr "``printf(\"%x\")``\\와 동등합니다. [1]_"

#: ../../c-api/bytes.rst:96
#, python-format
msgid "``%s``"
msgstr ""

#: ../../c-api/bytes.rst:96
msgid "const char\\*"
msgstr "const char\\*"

#: ../../c-api/bytes.rst:96
msgid "A null-terminated C character array."
msgstr "널-종료 C 문자 배열."

#: ../../c-api/bytes.rst:99
msgid "``%p``"
msgstr ""

#: ../../c-api/bytes.rst:99
msgid "const void\\*"
msgstr "const void\\*"

#: ../../c-api/bytes.rst:99
msgid ""
"The hex representation of a C pointer. Mostly equivalent to "
"``printf(\"%p\")`` except that it is guaranteed to start with the literal"
" ``0x`` regardless of what the platform's ``printf`` yields."
msgstr ""
"C 포인터의 16진수 표현. 플랫폼의 ``printf``\\가 어떤 결과를 내는지에 상관없이 리터럴 ``0x``\\로 시작함이 "
"보장된다는 점을 제외하고는 거의 ``printf(\"%p\")``\\와 동등합니다."

#: ../../c-api/bytes.rst:108
msgid ""
"An unrecognized format character causes all the rest of the format string"
" to be copied as-is to the result object, and any extra arguments "
"discarded."
msgstr "인식할 수 없는 포맷 문자는 포맷 문자열의 나머지 부분이 모두 결과 객체에 그대로 복사되게 만들고, 추가 인자는 무시됩니다."

#: ../../c-api/bytes.rst:111
msgid ""
"For integer specifiers (d, u, ld, lu, zd, zu, i, x): the 0-conversion "
"flag has effect even when a precision is given."
msgstr "정수 지정자 (d, u, ld, lu, zd, zu, i, x)에서: 0-변환 플래그는 정밀도를 지정해도 영향을 미칩니다."

#: ../../c-api/bytes.rst:117
msgid ""
"Identical to :c:func:`PyBytes_FromFormat` except that it takes exactly "
"two arguments."
msgstr "정확히 두 개의 인자를 취한다는 것을 제외하고는 :c:func:`PyBytes_FromFormat`\\과 같습니다."

#: ../../c-api/bytes.rst:123
msgid ""
"Return the bytes representation of object *o* that implements the buffer "
"protocol."
msgstr "버퍼 프로토콜을 구현하는 객체 *o*\\의 바이트열 표현을 반환합니다."

#: ../../c-api/bytes.rst:129
msgid "Return the length of the bytes in bytes object *o*."
msgstr "바이트열 객체 *o*\\의 길이를 반환합니다."

#: ../../c-api/bytes.rst:134
#, fuzzy
msgid "Similar to :c:func:`PyBytes_Size`, but without error checking."
msgstr "에러 검사 없는 :c:func:`PyBytes_Size`\\의 매크로 형식."

#: ../../c-api/bytes.rst:139
msgid ""
"Return a pointer to the contents of *o*.  The pointer refers to the "
"internal buffer of *o*, which consists of ``len(o) + 1`` bytes.  The last"
" byte in the buffer is always null, regardless of whether there are any "
"other null bytes.  The data must not be modified in any way, unless the "
"object was just created using ``PyBytes_FromStringAndSize(NULL, size)``. "
"It must not be deallocated.  If *o* is not a bytes object at all, "
":c:func:`PyBytes_AsString` returns ``NULL`` and raises :exc:`TypeError`."
msgstr ""
"*o*\\의 내용에 대한 포인터를 반환합니다. 포인터는 ``len(o) + 1`` 바이트로 구성된 *o*\\의 내부 버퍼를 "
"가리킵니다. 버퍼의 마지막 바이트는 다른 널(null) 바이트가 있는지에 관계없이 항상 널입니다. 객체가 "
"``PyBytes_FromStringAndSize(NULL, size)``\\를 사용하여 방금 만들어진 경우가 아니면 데이터를 "
"수정해서는 안 됩니다. 할당을 해제해서는 안 됩니다. *o*\\가 바이트열 객체가 아니면, "
":c:func:`PyBytes_AsString`\\은 ``NULL``\\을 반환하고 :exc:`TypeError`\\를 "
"발생시킵니다."

#: ../../c-api/bytes.rst:151
#, fuzzy
msgid "Similar to :c:func:`PyBytes_AsString`, but without error checking."
msgstr "에러 검사 없는 :c:func:`PyBytes_AsString`\\의 매크로 형식."

#: ../../c-api/bytes.rst:156
#, fuzzy
msgid ""
"Return the null-terminated contents of the object *obj* through the "
"output variables *buffer* and *length*. Returns ``0`` on success."
msgstr "출력 변수 *buffer*\\와 *length*\\로 객체 *obj*\\의 널-종료 내용을 반환합니다."

#: ../../c-api/bytes.rst:160
msgid ""
"If *length* is ``NULL``, the bytes object may not contain embedded null "
"bytes; if it does, the function returns ``-1`` and a :exc:`ValueError` is"
" raised."
msgstr ""
"*length*\\가 ``NULL``\\이면, 바이트열 객체는 내장된 널 바이트를 포함할 수 없습니다; 만약 그렇다면 함수는 "
"``-1``\\을 반환하고 :exc:`ValueError`\\를 발생시킵니다."

#: ../../c-api/bytes.rst:164
msgid ""
"The buffer refers to an internal buffer of *obj*, which includes an "
"additional null byte at the end (not counted in *length*).  The data must"
" not be modified in any way, unless the object was just created using "
"``PyBytes_FromStringAndSize(NULL, size)``.  It must not be deallocated.  "
"If *obj* is not a bytes object at all, :c:func:`PyBytes_AsStringAndSize` "
"returns ``-1`` and raises :exc:`TypeError`."
msgstr ""
"buffer는 *obj*\\의 내부 버퍼를 가리키게 되는데, 끝에 추가 널 바이트가 포함됩니다 (*length*\\에는 포함되지 "
"않습니다). 객체가 ``PyBytes_FromStringAndSize(NULL, size)``\\를 사용하여 방금 만들어진 경우가 "
"아니면 데이터를 수정해서는 안 됩니다. 할당을 해제해서는 안 됩니다. *obj*\\가 바이트열 객체가 아니면 "
":c:func:`PyBytes_AsStringAndSize`\\는 ``-1``\\을 반환하고 :exc:`TypeError`\\를 "
"발생시킵니다."

#: ../../c-api/bytes.rst:171
msgid ""
"Previously, :exc:`TypeError` was raised when embedded null bytes were "
"encountered in the bytes object."
msgstr "이전에는, 바이트열 객체에 널 바이트가 포함되어 있으면 :exc:`TypeError`\\가 발생했습니다."

#: ../../c-api/bytes.rst:178
msgid ""
"Create a new bytes object in *\\*bytes* containing the contents of "
"*newpart* appended to *bytes*; the caller will own the new reference.  "
"The reference to the old value of *bytes* will be stolen.  If the new "
"object cannot be created, the old reference to *bytes* will still be "
"discarded and the value of *\\*bytes* will be set to ``NULL``; the "
"appropriate exception will be set."
msgstr ""
"*bytes*\\에 *newpart*\\의 내용을 덧붙인 새 바이트열 객체를 *\\*bytes*\\에 만듭니다; 호출자가 새 참조를"
" 소유합니다. *bytes*\\의 예전 값에 대한 참조를 훔칩니다. 새 객체가 만들어질 수 없으면, *bytes*\\에 대한 예전 "
"참조는 여전히 버려지고 *\\*bytes*\\의 값은 ``NULL``\\로 설정됩니다; 적절한 예외가 설정됩니다."

#: ../../c-api/bytes.rst:187
#, fuzzy
msgid ""
"Create a new bytes object in *\\*bytes* containing the contents of "
"*newpart* appended to *bytes*.  This version releases the :term:`strong "
"reference` to *newpart* (i.e. decrements its reference count)."
msgstr ""
"*bytes*\\에 *newpart*\\의 내용을 덧붙인 새 바이트열 객체를 *\\*bytes*\\에 만듭니다. 이 버전은 "
"*newpart*\\의 참조 횟수를 감소시킵니다."

#: ../../c-api/bytes.rst:194
#, fuzzy
msgid ""
"Resize a bytes object. *newsize* will be the new length of the bytes "
"object. You can think of it as creating a new bytes object and destroying"
" the old one, only more efficiently. Pass the address of an existing "
"bytes object as an lvalue (it may be written into), and the new size "
"desired.  On success, *\\*bytes* holds the resized bytes object and ``0``"
" is returned; the address in *\\*bytes* may differ from its input value."
"  If the reallocation fails, the original bytes object at *\\*bytes* is "
"deallocated, *\\*bytes* is set to ``NULL``, :exc:`MemoryError` is set, "
"and ``-1`` is returned."
msgstr ""
"\"불변\"임에도 불구하고 바이트열 객체의 크기를 변경하는 방법. 완전히 새로운 바이트열 객체를 만들 때만 사용하십시오; "
"bytes가 이미 코드의 다른 부분에 알려져 있을 수 있다면 사용하지 마십시오. 입력 바이트열 객체의 참조 횟수가 1이 아닐 때 이"
" 함수를 호출하는 것은 에러입니다. 기존 바이트열 객체의 주소를 lvalue(내용을 기록할 수 있습니다)로 전달하고, 원하는 새 "
"크기를 전달합니다. 성공하면, *\\*bytes*\\는 크기가 변경된 바이트열 객체를 갖게 되고 ``0``\\이 반환됩니다; "
"*\\*bytes*\\의 주소는 입력값과 다를 수 있습니다. 재할당이 실패하면, *\\*bytes*\\에 있는 원래 바이트열 객체는"
" 할당 해제되고, *\\*bytes*\\가 ``NULL``\\로 설정되고, :exc:`MemoryError`\\가 설정되며 "
"``-1``\\이 반환됩니다."

#: ../../c-api/bytes.rst:11
#, fuzzy
msgid "object"
msgstr "바이트열 객체"

#: ../../c-api/bytes.rst:11
msgid "bytes"
msgstr ""

#~ msgid ":attr:`%%`"
#~ msgstr ":attr:`%%`"

#~ msgid ":attr:`%c`"
#~ msgstr ":attr:`%c`"

#~ msgid ":attr:`%d`"
#~ msgstr ":attr:`%d`"

#~ msgid ":attr:`%u`"
#~ msgstr ":attr:`%u`"

#~ msgid ":attr:`%ld`"
#~ msgstr ":attr:`%ld`"

#~ msgid ":attr:`%lu`"
#~ msgstr ":attr:`%lu`"

#~ msgid ":attr:`%zd`"
#~ msgstr ":attr:`%zd`"

#~ msgid ":attr:`%zu`"
#~ msgstr ":attr:`%zu`"

#~ msgid ":attr:`%i`"
#~ msgstr ":attr:`%i`"

#~ msgid ":attr:`%x`"
#~ msgstr ":attr:`%x`"

#~ msgid ":attr:`%s`"
#~ msgstr ":attr:`%s`"

#~ msgid ":attr:`%p`"
#~ msgstr ":attr:`%p`"


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../installing/index.rst:7
msgid "Installing Python Modules"
msgstr "파이썬 모듈 설치하기"

#: ../../installing/index.rst
msgid "Email"
msgstr "전자 우편"

#: ../../installing/index.rst:9
msgid "distutils-sig@python.org"
msgstr "distutils-sig@python.org"

#: ../../installing/index.rst:11
msgid ""
"As a popular open source development project, Python has an active "
"supporting community of contributors and users that also make their "
"software available for other Python developers to use under open source "
"license terms."
msgstr ""
"널리 사용되는 공개 소스 개발 프로젝트로서, 파이썬에는 적극적으로 지원하는 기여자와 사용자의 커뮤니티가 있어, 자신들의 소프트웨어를"
" 공개 소스 라이센스 계약에 따라 다른 파이썬 개발자가 사용할 수 있도록 합니다."

#: ../../installing/index.rst:15
msgid ""
"This allows Python users to share and collaborate effectively, benefiting"
" from the solutions others have already created to common (and sometimes "
"even rare!) problems, as well as potentially contributing their own "
"solutions to the common pool."
msgstr ""
"이를 통해 파이썬 사용자는 효과적으로 공유하고 공동 작업할 수 있으며, 다른 사람들이 공통 (심지어 때로는 희귀한) 문제에 대해 "
"이미 만든 솔루션의 이점을 누릴 수 있을 뿐 아니라, 자체 솔루션을 공동 풀에 잠재적으로 제공할 수 있습니다."

#: ../../installing/index.rst:20
msgid ""
"This guide covers the installation part of the process. For a guide to "
"creating and sharing your own Python projects, refer to the `Python "
"packaging user guide`_."
msgstr ""
"이 지침서는 이 절차의 설치 부분을 다룹니다. 자신의 파이썬 프로젝트를 만들고 공유하는 지침은 `Python packaging "
"user guide`_\\를 참조하십시오."

#: ../../installing/index.rst:28
msgid ""
"For corporate and other institutional users, be aware that many "
"organisations have their own policies around using and contributing to "
"open source software. Please take such policies into account when making "
"use of the distribution and installation tools provided with Python."
msgstr ""
"기업 및 기타 기관 사용자의 경우, 많은 조직에서 공개 소스 소프트웨어를 사용하고 공헌하는 데 대한 자체 정책을 시행하고 있음을 "
"알고 있어야 합니다. 파이썬과 함께 제공되는 배포 및 설치 도구를 사용할 때 이러한 정책을 고려하십시오."

#: ../../installing/index.rst:35
msgid "Key terms"
msgstr "핵심 용어"

#: ../../installing/index.rst:37
msgid ""
"``pip`` is the preferred installer program. Starting with Python 3.4, it "
"is included by default with the Python binary installers."
msgstr "``pip`` 는 선호되는 설치 프로그램입니다. 파이썬 3.4부터, 기본적으로 파이썬 바이너리 설치 프로그램에 포함되어 있습니다."

#: ../../installing/index.rst:39
msgid ""
"A *virtual environment* is a semi-isolated Python environment that allows"
" packages to be installed for use by a particular application, rather "
"than being installed system wide."
msgstr ""
"*가상 환경* 은 패키지가 시스템 전체에 설치되는 것이 아니라, 특정 응용 프로그램에 사용되도록 설치될 수 있도록 하는 반 격리 된"
" 파이썬 환경입니다."

#: ../../installing/index.rst:42
msgid ""
"``venv`` is the standard tool for creating virtual environments, and has "
"been part of Python since Python 3.3. Starting with Python 3.4, it "
"defaults to installing ``pip`` into all created virtual environments."
msgstr ""
"``venv`` 는 가상 환경을 만들기 위한 표준 도구이며, 파이썬 3.3 이후로 파이썬의 일부입니다. 파이썬 3.4부터, 생성되는"
" 모든 가상 환경에 기본적으로 ``pip`` 를 설치합니다."

#: ../../installing/index.rst:45
msgid ""
"``virtualenv`` is a third party alternative (and predecessor) to "
"``venv``. It allows virtual environments to be used on versions of Python"
" prior to 3.4, which either don't provide ``venv`` at all, or aren't able"
" to automatically install ``pip`` into created environments."
msgstr ""
"``virtualenv`` 는 ``venv`` 에 대한 제삼자 대안(그리고 전임자)입니다. ``venv`` 를 아예 제공하지 "
"않거나, 생성되는 환경에 ``pip`` 를 자동으로 설치할 수 없는, 3.4 이전의 파이썬 버전에서 가상 환경을 사용할 수 있도록 "
"합니다."

#: ../../installing/index.rst:49
msgid ""
"The `Python Package Index <https://pypi.org>`__ is a public repository of"
" open source licensed packages made available for use by other Python "
"users."
msgstr ""
"`파이썬 패키지 색인 <https://pypi.org>`__ 은 다른 파이썬 사용자가 사용할 수 있도록 만들어진 공개 소스 라이선스"
" 패키지의 공용 저장소입니다."

#: ../../installing/index.rst:52
msgid ""
"the `Python Packaging Authority <https://www.pypa.io/>`__ is the group of"
" developers and documentation authors responsible for the maintenance and"
" evolution of the standard packaging tools and the associated metadata "
"and file format standards. They maintain a variety of tools, "
"documentation, and issue trackers on `GitHub "
"<https://github.com/pypa>`__."
msgstr ""
"`파이썬 패키징 위원회 <https://www.pypa.io/>`__ 는 표준 패키징 도구와 관련 메타 데이터 및 파일 형식 표준의"
" 유지 보수 및 발전을 담당하는 개발자 및 문서 작성자 모임입니다. 그들은 `GitHub "
"<https://github.com/pypa>`__ 에 다양한 도구, 문서, 이슈 추적기를 유지합니다."

#: ../../installing/index.rst:58
msgid ""
"``distutils`` is the original build and distribution system first added "
"to the Python standard library in 1998. While direct use of ``distutils``"
" is being phased out, it still laid the foundation for the current "
"packaging and distribution infrastructure, and it not only remains part "
"of the standard library, but its name lives on in other ways (such as the"
" name of the mailing list used to coordinate Python packaging standards "
"development)."
msgstr ""
"``distutils`` 는 1998년에 파이썬 표준 라이브러리에 처음 추가된 최초의 빌드 및 배포 시스템입니다. "
"``distutils`` 의 직접 사용이 단계적으로 폐지되고 있지만, 여전히 현재의 패키징 및 배포 기반 시설의 기초를 이루고 "
"있고, 표준 라이브러리의 일부로 남아있을 뿐만 아니라, 그 이름은 다른 방식으로도 (가령 파이썬 패키징 표준 개발을 조정하는 데 "
"사용되는 메일링 리스트의 이름으로) 남아있습니다."

#: ../../installing/index.rst:66
msgid "The use of ``venv`` is now recommended for creating virtual environments."
msgstr "이제 가상 환경을 만드는데 ``venv`` 사용을 권장합니다."

#: ../../installing/index.rst:71
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/installing/#creating-virtual-"
"environments>`__"
msgstr ""
"`파이썬 패키징 사용자 지침서: 가상 환경 생성과 사용 <https://packaging.python.org/installing"
"/#creating-virtual-environments>`__"

#: ../../installing/index.rst:76
msgid "Basic usage"
msgstr "기본 사용법"

#: ../../installing/index.rst:78
msgid ""
"The standard packaging tools are all designed to be used from the command"
" line."
msgstr "표준 패키징 도구는 모두 명령 줄에서 사용하도록 설계되었습니다."

#: ../../installing/index.rst:81
msgid ""
"The following command will install the latest version of a module and its"
" dependencies from the Python Package Index::"
msgstr "다음 명령은 파이썬 패키지 색인에서 최신 버전의 모듈과 그 의존성을 설치합니다::"

#: ../../installing/index.rst:84
msgid "python -m pip install SomePackage"
msgstr "python -m pip install SomePackage"

#: ../../installing/index.rst:88
msgid ""
"For POSIX users (including macOS and Linux users), the examples in this "
"guide assume the use of a :term:`virtual environment`."
msgstr ""
"POSIX 사용자(맥 OS 와 리눅스 사용자를 포함합니다)의 경우, 이 지침서의의 예제는 :term:`가상 환경 <virtual "
"environment>` 을 사용한다고 가정합니다."

#: ../../installing/index.rst:91
msgid ""
"For Windows users, the examples in this guide assume that the option to "
"adjust the system PATH environment variable was selected when installing "
"Python."
msgstr "윈도우 사용자의 경우, 이 지침서의 예제는 파이썬을 설치할 때 시스템 PATH 환경 변수를 조정하는 옵션이 선택되었다고 가정합니다."

#: ../../installing/index.rst:95
msgid ""
"It's also possible to specify an exact or minimum version directly on the"
" command line. When using comparator operators such as ``>``, ``<`` or "
"some other special character which get interpreted by shell, the package "
"name and the version should be enclosed within double quotes::"
msgstr ""
"정확한 버전이나 최소 버전을 명령 줄에서 직접 지정할 수도 있습니다. ``>``, ``<`` 와 같은 비교 연산자나 셸에서 해석되는"
" 다른 특수 문자를 사용할 때는, 패키지 이름과 버전을 큰따옴표로 묶어야 합니다::"

#: ../../installing/index.rst:100
msgid ""
"python -m pip install SomePackage==1.0.4    # specific version\n"
"python -m pip install \"SomePackage>=1.0.4\"  # minimum version"
msgstr ""
"python -m pip install SomePackage==1.0.4    # 특정 버전\n"
"python -m pip install \"SomePackage>=1.0.4\"  # 최소 버전"

#: ../../installing/index.rst:103
msgid ""
"Normally, if a suitable module is already installed, attempting to "
"install it again will have no effect. Upgrading existing modules must be "
"requested explicitly::"
msgstr ""
"일반적으로, 적절한 모듈이 이미 설치되어있으면, 다시 설치하려고 해도 아무런 효과가 없습니다. 기존 모듈을 업그레이드하려면 "
"명시적으로 요청해야 합니다::"

#: ../../installing/index.rst:107
msgid "python -m pip install --upgrade SomePackage"
msgstr "python -m pip install --upgrade SomePackage"

#: ../../installing/index.rst:109
msgid ""
"More information and resources regarding ``pip`` and its capabilities can"
" be found in the `Python Packaging User Guide "
"<https://packaging.python.org>`__."
msgstr ""
"``pip`` 와 그 기능에 관한 더 많은 정보와 자원은 `파이썬 패키징 사용자 지침서 "
"<https://packaging.python.org>`__ 에서 찾을 수 있습니다."

#: ../../installing/index.rst:112
msgid ""
"Creation of virtual environments is done through the :mod:`venv` module. "
"Installing packages into an active virtual environment uses the commands "
"shown above."
msgstr ""
"가상 환경의 생성은 :mod:`venv` 모듈을 통해 수행됩니다. 활성 가상 환경에 패키지를 설치하려면 위에 표시된 명령을 "
"사용합니다."

#: ../../installing/index.rst:118
msgid ""
"`Python Packaging User Guide: Installing Python Distribution Packages "
"<https://packaging.python.org/installing/>`__"
msgstr ""
"`파이썬 패키징 사용자 지침서: 파이썬 배포 패키지 설치하기 "
"<https://packaging.python.org/installing/>`__"

#: ../../installing/index.rst:123
msgid "How do I ...?"
msgstr "어떻게 ...?"

#: ../../installing/index.rst:125
msgid "These are quick answers or links for some common tasks."
msgstr "이것들은 몇 가지 일반적인 작업에 대한 빠른 답변 또는 링크입니다."

#: ../../installing/index.rst:128
msgid "... install ``pip`` in versions of Python prior to Python 3.4?"
msgstr "... 파이썬 3.4 이전 버전의 파이썬에서 ``pip`` 를 설치합니까?"

#: ../../installing/index.rst:130
msgid ""
"Python only started bundling ``pip`` with Python 3.4. For earlier "
"versions, ``pip`` needs to be \"bootstrapped\" as described in the Python"
" Packaging User Guide."
msgstr ""
"파이썬은 ``pip`` 를 파이썬 3.4에 와서야 포함하기 시작했습니다. 이전 버전의 경우, ``pip`` 는 파이썬 패키징 사용자"
" 지침서에 설명된 대로 \"부트스트랩(bootstrapped)\" 될 필요가 있습니다."

#: ../../installing/index.rst:136
msgid ""
"`Python Packaging User Guide: Requirements for Installing Packages "
"<https://packaging.python.org/installing/#requirements-for-installing-"
"packages>`__"
msgstr ""
"`파이썬 패키징 사용자 지침서: 패키지 설치 요구 사항 <https://packaging.python.org/installing"
"/#requirements-for-installing-packages>`__"

#: ../../installing/index.rst:143
msgid "... install packages just for the current user?"
msgstr "... 현재 사용자만을 위해 패키지를 설치합니까?"

#: ../../installing/index.rst:145
msgid ""
"Passing the ``--user`` option to ``python -m pip install`` will install a"
" package just for the current user, rather than for all users of the "
"system."
msgstr ""
"``--user`` 옵션을 ``python -m pip install`` 에 넘겨주면 시스템의 모든 사용자가 아닌 현재 사용자를 "
"위해서만 패키지를 설치합니다."

#: ../../installing/index.rst:150
msgid "... install scientific Python packages?"
msgstr "... 과학 계산용 파이썬 패키지를 설치합니까?"

#: ../../installing/index.rst:152
msgid ""
"A number of scientific Python packages have complex binary dependencies, "
"and aren't currently easy to install using ``pip`` directly. At this "
"point in time, it will often be easier for users to install these "
"packages by `other means <https://packaging.python.org/science/>`__ "
"rather than attempting to install them with ``pip``."
msgstr ""
"많은 과학 계산용 파이썬 패키지는 복잡한 바이너리 의존성을 가지고 있고, 현재 ``pip`` 를 사용하여 직접 설치하기가 쉽지 "
"않습니다. 이 시점에서, 사용자가 이 패키지들을 ``pip`` 로 설치하려고 시도하는 것보다 `다른 방법 "
"<https://packaging.python.org/science/>`__ 으로 설치하는 것이 더 쉬운 경우가 종종 있습니다."

#: ../../installing/index.rst:160
msgid ""
"`Python Packaging User Guide: Installing Scientific Packages "
"<https://packaging.python.org/science/>`__"
msgstr ""
"`파이썬 패키징 사용자 지침서: 과학 계산용 패키지 설치하기 "
"<https://packaging.python.org/science/>`__"

#: ../../installing/index.rst:165
msgid "... work with multiple versions of Python installed in parallel?"
msgstr "... 병렬로 설치된 여러 버전의 파이썬으로 작업합니까?"

#: ../../installing/index.rst:167
msgid ""
"On Linux, macOS, and other POSIX systems, use the versioned Python "
"commands in combination with the ``-m`` switch to run the appropriate "
"copy of ``pip``::"
msgstr ""
"리눅스, 맥 OS 및 다른 POSIX 시스템에서는, 버전이 지정된 파이썬 명령을 ``-m`` 스위치와 조합하여 적절한 ``pip``"
" 사본을 실행하십시오::"

#: ../../installing/index.rst:171
msgid ""
"python2   -m pip install SomePackage  # default Python 2\n"
"python2.7 -m pip install SomePackage  # specifically Python 2.7\n"
"python3   -m pip install SomePackage  # default Python 3\n"
"python3.4 -m pip install SomePackage  # specifically Python 3.4"
msgstr ""
"python2   -m pip install SomePackage  # 기본 파이썬 2\n"
"python2.7 -m pip install SomePackage  # 특정하여 파이썬 2.7\n"
"python3   -m pip install SomePackage  # 기본 파이썬 3\n"
"python3.4 -m pip install SomePackage  # 특정하여 파이썬 3.4"

#: ../../installing/index.rst:176
msgid "Appropriately versioned ``pip`` commands may also be available."
msgstr "적절히 버전이 지정된 ``pip`` 명령도 제공될 수 있습니다."

#: ../../installing/index.rst:178
msgid ""
"On Windows, use the ``py`` Python launcher in combination with the ``-m``"
" switch::"
msgstr "윈도우에서는 ``py`` 파이썬 실행기를 ``-m`` 스위치와 조합해서 사용하십시오::"

#: ../../installing/index.rst:181
msgid ""
"py -2   -m pip install SomePackage  # default Python 2\n"
"py -2.7 -m pip install SomePackage  # specifically Python 2.7\n"
"py -3   -m pip install SomePackage  # default Python 3\n"
"py -3.4 -m pip install SomePackage  # specifically Python 3.4"
msgstr ""
"py -2   -m pip install SomePackage  # 기본 파이썬 2\n"
"py -2.7 -m pip install SomePackage  # 특정하여 파이썬 2.7\n"
"py -3   -m pip install SomePackage  # 기본 파이썬 3\n"
"py -3.4 -m pip install SomePackage  # 특정하여 파이썬 3.4"

#: ../../installing/index.rst:195
msgid "Common installation issues"
msgstr "흔히 만나는 설치 문제"

#: ../../installing/index.rst:198
msgid "Installing into the system Python on Linux"
msgstr "리눅스에 시스템 파이썬 설치하기"

#: ../../installing/index.rst:200
msgid ""
"On Linux systems, a Python installation will typically be included as "
"part of the distribution. Installing into this Python installation "
"requires root access to the system, and may interfere with the operation "
"of the system package manager and other components of the system if a "
"component is unexpectedly upgraded using ``pip``."
msgstr ""
"리눅스 시스템에서, 보통 파이썬 설치가 배포 일부로 포함됩니다. 이 파이썬 설치에 설치하려면 시스템에 대한 루트 액세스가 필요하며,"
" ``pip`` 를 사용하여 구성 요소가 예기치 않게 업그레이드되면 시스템 패키지 관리자와 시스템의 다른 구성 요소의 작동을 방해할"
" 수 있습니다."

#: ../../installing/index.rst:206
msgid ""
"On such systems, it is often better to use a virtual environment or a "
"per-user installation when installing packages with ``pip``."
msgstr "이러한 시스템에서는, ``pip`` 로 패키지를 설치할 때 가상 환경이나 사용자별 설치를 사용하는 것이 더 좋습니다."

#: ../../installing/index.rst:211
msgid "Pip not installed"
msgstr "Pip가 설치되지 않았습니다."

#: ../../installing/index.rst:213
msgid ""
"It is possible that ``pip`` does not get installed by default. One "
"potential fix is::"
msgstr "``pip`` 가 기본적으로 설치되지 않았을 수도 있습니다. 한가지 가능한 해결법은 다음과 같습니다::"

#: ../../installing/index.rst:215
msgid "python -m ensurepip --default-pip"
msgstr "python -m ensurepip --default-pip"

#: ../../installing/index.rst:217
msgid ""
"There are also additional resources for `installing pip. "
"<https://packaging.python.org/en/latest/tutorials/installing-packages"
"/#ensure-pip-setuptools-and-wheel-are-up-to-date>`__"
msgstr ""
"`pip 설치 <https://packaging.python.org/en/latest/tutorials/installing-"
"packages/#ensure-pip-setuptools-and-wheel-are-up-to-date>`__ 에 대한 추가 자원도 "
"있습니다."

#: ../../installing/index.rst:222
msgid "Installing binary extensions"
msgstr "바이너리 확장 설치하기"

#: ../../installing/index.rst:224
msgid ""
"Python has typically relied heavily on source based distribution, with "
"end users being expected to compile extension modules from source as part"
" of the installation process."
msgstr ""
"파이썬은 일반적으로 소스 기반 배포에 크게 의존하고 있으며, 최종 사용자가 설치 프로세스의 일부로 소스로부터 확장 모듈을 컴파일할 "
"것으로 기대합니다."

#: ../../installing/index.rst:228
msgid ""
"With the introduction of support for the binary ``wheel`` format, and the"
" ability to publish wheels for at least Windows and macOS through the "
"Python Package Index, this problem is expected to diminish over time, as "
"users are more regularly able to install pre-built extensions rather than"
" needing to build them themselves."
msgstr ""
"바이너리 ``wheel`` 형식에 대한 지원의 도입과 파이썬 패키지 색인을 통해 적어도 윈도우와 맥 OS 용의 휠을 게시할 수 있게"
" 됨에 따라, 사용자가 스스로 빌드하기 보다는 점차 사전 빌드된 확장들을 설치할 수 있게 되어, 이 문제는 시간이 지날수록 줄어들 "
"것으로 예상합니다."

#: ../../installing/index.rst:234
msgid ""
"Some of the solutions for installing `scientific software "
"<https://packaging.python.org/science/>`__ that are not yet available as "
"pre-built ``wheel`` files may also help with obtaining other binary "
"extensions without needing to build them locally."
msgstr ""
"``wheel`` 파일로 아직 사용할 수 없는 `과학 계산용 소프트웨어 "
"<https://packaging.python.org/science/>`__  설치를 위한 어떤 해결책들은 로컬에서 빌드할 필요 "
"없이 다른 바이너리 확장을 얻는 데 도움이 될 수 있습니다."

#: ../../installing/index.rst:241
msgid ""
"`Python Packaging User Guide: Binary Extensions "
"<https://packaging.python.org/extensions/>`__"
msgstr "`파이썬 패키징 사용자 지침서: 바이너리 확장 <https://packaging.python.org/extensions/>`__"


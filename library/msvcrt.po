# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/msvcrt.rst:2
msgid ":mod:`!msvcrt` --- Useful routines from the MS VC++ runtime"
msgstr ":mod:`!msvcrt` --- MS VC++ 런타임의 유용한 루틴"

#: ../../library/msvcrt.rst:12
msgid ""
"These functions provide access to some useful capabilities on Windows "
"platforms. Some higher-level modules use these functions to build the "
"Windows implementations of their services. For example, the "
":mod:`getpass` module uses this in the implementation of the "
":func:`getpass` function."
msgstr ""
"이 함수들은 윈도우 플랫폼에서 유용한 기능에 대한 액세스를 제공합니다. 일부 고수준 모듈은 이러한 함수를 사용하여 해당 서비스의 "
"윈도우 구현을 구축합니다. 예를 들어, :mod:`getpass` 모듈은 :func:`getpass` 함수를 구현할 때 이를 "
"사용합니다."

#: ../../library/msvcrt.rst:17
msgid ""
"Further documentation on these functions can be found in the Platform API"
" documentation."
msgstr "이 함수에 대한 자세한 설명은 플랫폼 API 설명서에서 찾을 수 있습니다."

#: ../../library/msvcrt.rst:20
msgid ""
"The module implements both the normal and wide char variants of the "
"console I/O api. The normal API deals only with ASCII characters and is "
"of limited use for internationalized applications. The wide char API "
"should be used where ever possible."
msgstr ""
"이 모듈은 콘솔 I/O api의 일반과 광폭(wide) 문자 변형을 모두 구현합니다. 일반 API는 ASCII 문자만 다루며 "
"국제화된 응용 프로그램에서는 제한적으로 사용됩니다. 가능하면 광폭 문자 API를 사용해야 합니다."

#: ../../library/msvcrt.rst:25
msgid ""
"Operations in this module now raise :exc:`OSError` where :exc:`IOError` "
"was raised."
msgstr "이 모듈의 연산은 이제 :exc:`IOError`\\를 발생시키던 곳에서 :exc:`OSError`\\를 발생시킵니다."

#: ../../library/msvcrt.rst:33
msgid "File Operations"
msgstr "파일 연산"

#: ../../library/msvcrt.rst:38
msgid ""
"Lock part of a file based on file descriptor *fd* from the C runtime. "
"Raises :exc:`OSError` on failure. The locked region of the file extends "
"from the current file position for *nbytes* bytes, and may continue "
"beyond the end of the file. *mode* must be one of the :const:`!LK_\\*` "
"constants listed below. Multiple regions in a file may be locked at the "
"same time, but may not overlap. Adjacent regions are not merged; they "
"must be unlocked individually."
msgstr ""
"C 런타임의 파일 기술자 *fd*\\를 기반으로 파일 일부를 잠급니다. 실패하면 :exc:`OSError`\\를 발생시킵니다. "
"파일의 잠긴 영역은 현재 파일 위치에서부터 *nbytes* 바이트까지며, 파일 끝을 넘어 계속될 수 있습니다. *mode*\\는 "
"아래에 나열된 :const:`!LK_\\*` 상수 중 하나여야 합니다. 파일의 여러 영역이 동시에 잠길 수 있지만 겹칠 수는 "
"없습니다. 인접한 영역은 병합되지 않습니다; 개별적으로 잠금을 해제해야 합니다."

#: ../../library/msvcrt.rst:45
msgid ""
"Raises an :ref:`auditing event <auditing>` ``msvcrt.locking`` with "
"arguments ``fd``, ``mode``, ``nbytes``."
msgstr ""
"인자 ``fd``, ``mode``, ``nbytes``\\로 :ref:`감사 이벤트 <auditing>` "
"``msvcrt.locking``\\을 발생시킵니다."

#: ../../library/msvcrt.rst:51
msgid ""
"Locks the specified bytes. If the bytes cannot be locked, the program "
"immediately tries again after 1 second. If, after 10 attempts, the bytes "
"cannot be locked, :exc:`OSError` is raised."
msgstr ""
"지정된 바이트를 잠급니다. 바이트를 잠글 수 없으면, 프로그램은 1초 후에 즉시 다시 시도합니다. 10 번 시도한 후에도 바이트를 "
"잠글 수 없으면, :exc:`OSError`\\가 발생합니다."

#: ../../library/msvcrt.rst:59
msgid ""
"Locks the specified bytes. If the bytes cannot be locked, :exc:`OSError` "
"is raised."
msgstr "지정된 바이트를 잠급니다. 바이트를 잠글 수 없으면, :exc:`OSError`\\가 발생합니다."

#: ../../library/msvcrt.rst:65
msgid "Unlocks the specified bytes, which must have been previously locked."
msgstr "이전에 잠겨 있어야 하는 지정된 바이트의 잠금을 해제합니다."

#: ../../library/msvcrt.rst:70
msgid ""
"Set the line-end translation mode for the file descriptor *fd*. To set it"
" to text mode, *flags* should be :const:`os.O_TEXT`; for binary, it "
"should be :const:`os.O_BINARY`."
msgstr ""
"파일 기술자 *fd*\\의 줄 종료 변환 모드를 설정합니다. 텍스트 모드로 설정하려면, *flags*\\가 "
":const:`os.O_TEXT` 여야 합니다; 바이너리는, :const:`os.O_BINARY` 여야 합니다."

#: ../../library/msvcrt.rst:77
msgid ""
"Create a C runtime file descriptor from the file handle *handle*. The "
"*flags* parameter should be a bitwise OR of :const:`os.O_APPEND`, "
":const:`os.O_RDONLY`, :const:`os.O_TEXT` and :const:`os.O_NOINHERIT`. The"
" returned file descriptor may be used as a parameter to :func:`os.fdopen`"
" to create a file object."
msgstr ""
"파일 핸들 *handle*\\에서 C 런타임 파일 기술자를 만듭니다. *flags* 매개 변수는 "
":const:`os.O_APPEND`, :const:`os.O_RDONLY`, :const:`os.O_TEXT` 및 "
":const:`os.O_NOINHERIT`\\의 비트별 OR 여야 합니다. 반환된 파일 기술자는 "
":func:`os.fdopen`\\에 대한 매개 변수로 사용되어 파일 객체를 만들 수 있습니다."

#: ../../library/msvcrt.rst:83
msgid ""
"The file descriptor is inheritable by default. Pass "
":const:`os.O_NOINHERIT` flag to make it non inheritable."
msgstr ""

#: ../../library/msvcrt.rst:86
msgid ""
"Raises an :ref:`auditing event <auditing>` ``msvcrt.open_osfhandle`` with"
" arguments ``handle``, ``flags``."
msgstr ""
"인자 ``handle``, ``flags``\\로 :ref:`감사 이벤트 <auditing>` "
"``msvcrt.open_osfhandle``\\을 발생시킵니다."

#: ../../library/msvcrt.rst:91
msgid ""
"Return the file handle for the file descriptor *fd*. Raises "
":exc:`OSError` if *fd* is not recognized."
msgstr "파일 기술자 *fd*\\의 파일 핸들을 돌려줍니다. *fd*\\가 인식되지 않으면 :exc:`OSError`\\를 발생시킵니다."

#: ../../library/msvcrt.rst:94
msgid ""
"Raises an :ref:`auditing event <auditing>` ``msvcrt.get_osfhandle`` with "
"argument ``fd``."
msgstr "인자 ``fd``\\로 :ref:`감사 이벤트 <auditing>` ``msvcrt.get_osfhandle``\\을 발생시킵니다."

#: ../../library/msvcrt.rst:100
msgid "Console I/O"
msgstr "콘솔 I/O"

#: ../../library/msvcrt.rst:105
msgid ""
"Returns a nonzero value if a keypress is waiting to be read. Otherwise, "
"return 0."
msgstr "읽을 수 있는 키 누르기가 대기 중이면 0이 아닌 값을 반환합니다. 그렇지 않으면, 0을 반환합니다."

#: ../../library/msvcrt.rst:111
msgid ""
"Read a keypress and return the resulting character as a byte string. "
"Nothing is echoed to the console. This call will block if a keypress is "
"not already available, but will not wait for :kbd:`Enter` to be pressed. "
"If the pressed key was a special function key, this will return "
"``'\\000'`` or ``'\\xe0'``; the next call will return the keycode. The "
":kbd:`Control-C` keypress cannot be read with this function."
msgstr ""
"키 누르기를 읽고 결과 문자를 바이트열로 반환합니다. 콘솔에 아무것도 에코 되지 않습니다. 이 호출은 키 누르기를 아직 사용할 수 "
"없으면 블록하지만, :kbd:`Enter`\\가 눌러지기를 기다리지는 않습니다. 누른 키가 특수 기능 키면, ``'\\000'`` "
"이나 ``'\\xe0'``\\를 반환합니다; 다음 호출은 키코드를 반환합니다. 이 함수로 :kbd:`Control-C` 키 누르기를"
" 읽을 수 없습니다."

#: ../../library/msvcrt.rst:121
msgid "Wide char variant of :func:`getch`, returning a Unicode value."
msgstr "유니코드 값을 반환하는 :func:`getch`\\의 광폭 문자 변형."

#: ../../library/msvcrt.rst:126
msgid ""
"Similar to :func:`getch`, but the keypress will be echoed if it "
"represents a printable character."
msgstr ":func:`getch`\\와 비슷하지만, 인쇄 가능한 문자를 나타내는 경우 키 누르기가 에코 됩니다."

#: ../../library/msvcrt.rst:132
msgid "Wide char variant of :func:`getche`, returning a Unicode value."
msgstr "유니코드 값을 반환하는 :func:`getche`\\의 광폭 문자 변형."

#: ../../library/msvcrt.rst:137
msgid "Print the byte string *char* to the console without buffering."
msgstr "버퍼링하지 않고 바이트열 *char*\\을 콘솔에 인쇄합니다."

#: ../../library/msvcrt.rst:142
msgid "Wide char variant of :func:`putch`, accepting a Unicode value."
msgstr "유니코드 값을 받아들이는 :func:`putch`\\의 광폭 문자 변형."

#: ../../library/msvcrt.rst:147
msgid ""
"Cause the byte string *char* to be \"pushed back\" into the console "
"buffer; it will be the next character read by :func:`getch` or "
":func:`getche`."
msgstr ""
"바이트열 *char*\\이 콘솔 버퍼로 \"푸시백\" 되도록 합니다; :func:`getch` 나 :func:`getche`\\가 "
"읽는 다음 문자가 됩니다."

#: ../../library/msvcrt.rst:153
msgid "Wide char variant of :func:`ungetch`, accepting a Unicode value."
msgstr "유니코드 값을 받아들이는 :func:`ungetch`\\의 광폭 문자 변형."

#: ../../library/msvcrt.rst:159
msgid "Other Functions"
msgstr "기타 함수"

#: ../../library/msvcrt.rst:164
msgid ""
"Force the :c:func:`malloc` heap to clean itself up and return unused "
"blocks to the operating system. On failure, this raises :exc:`OSError`."
msgstr ""
"강제로 :c:func:`malloc` 힙이 자신을 정리하고, 사용하지 않는 블록을 운영 체제로 반환하도록 합니다. 실패하면, "
":exc:`OSError`\\가 발생합니다."

#: ../../library/msvcrt.rst:170
msgid ""
"Changes the location where the C runtime writes an error message for an "
"error that might end the program. *mode* must be one of the "
":const:`!OUT_\\*` constants listed below  or :const:`REPORT_ERRMODE`. "
"Returns the old setting or -1 if an error occurs. Only available in "
":ref:`debug build of Python <debug-build>`."
msgstr ""

#: ../../library/msvcrt.rst:179
msgid ""
"Error sink is determined by the app's type. Only available in :ref:`debug"
" build of Python <debug-build>`."
msgstr ""

#: ../../library/msvcrt.rst:185
msgid ""
"Error sink is a standard error. Only available in :ref:`debug build of "
"Python <debug-build>`."
msgstr ""

#: ../../library/msvcrt.rst:191
msgid ""
"Error sink is a message box. Only available in :ref:`debug build of "
"Python <debug-build>`."
msgstr ""

#: ../../library/msvcrt.rst:197
msgid ""
"Report the current error mode value. Only available in :ref:`debug build "
"of Python <debug-build>`."
msgstr ""

#: ../../library/msvcrt.rst:203
msgid ""
"Specifies the destination or destinations for a specific report type "
"generated by :c:func:`!_CrtDbgReport` in the MS VC++ runtime. *type* must"
" be one of the :const:`!CRT_\\*` constants listed below. *mode* must be "
"one of the :const:`!CRTDBG_\\*` constants listed below. Only available in"
" :ref:`debug build of Python <debug-build>`."
msgstr ""

#: ../../library/msvcrt.rst:212
msgid ""
"After you use :func:`CrtSetReportMode` to specify "
":const:`CRTDBG_MODE_FILE`, you can specify the file handle to receive the"
" message text. *type* must be one of the :const:`!CRT_\\*` constants "
"listed below. *file* should be the file handle your want specified. Only "
"available in :ref:`debug build of Python <debug-build>`."
msgstr ""

#: ../../library/msvcrt.rst:221
msgid "Warnings, messages, and information that doesn't need immediate attention."
msgstr ""

#: ../../library/msvcrt.rst:226
msgid ""
"Errors, unrecoverable problems, and issues that require immediate "
"attention."
msgstr ""

#: ../../library/msvcrt.rst:231
msgid "Assertion failures."
msgstr ""

#: ../../library/msvcrt.rst:236
msgid "Writes the message to the debugger's output window."
msgstr ""

#: ../../library/msvcrt.rst:241
msgid ""
"Writes the message to a user-supplied file handle. "
":func:`CrtSetReportFile` should be called to define the specific file or "
"stream to use as the destination."
msgstr ""

#: ../../library/msvcrt.rst:248
msgid ""
"Creates a message box to display the message along with the ``Abort``, "
"``Retry``, and ``Ignore`` buttons."
msgstr ""

#: ../../library/msvcrt.rst:254
msgid "Returns current *mode* for the specified *type*."
msgstr ""

#: ../../library/msvcrt.rst:259
msgid "The CRT Assembly version, from the :file:`crtassem.h` header file."
msgstr ""

#: ../../library/msvcrt.rst:264
msgid "The VC Assembly public key token, from the :file:`crtassem.h` header file."
msgstr ""

#: ../../library/msvcrt.rst:269
msgid ""
"The Libraries Assembly name prefix, from the :file:`crtassem.h` header "
"file."
msgstr ""


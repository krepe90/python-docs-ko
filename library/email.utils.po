# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/email.utils.rst:2
msgid ":mod:`!email.utils`: Miscellaneous utilities"
msgstr ":mod:`!email.utils`: 기타 유틸리티"

#: ../../library/email.utils.rst:7
msgid "**Source code:** :source:`Lib/email/utils.py`"
msgstr "**소스 코드:** :source:`Lib/email/utils.py`"

#: ../../library/email.utils.rst:11
msgid ""
"There are a couple of useful utilities provided in the :mod:`email.utils`"
" module:"
msgstr ":mod:`email.utils` 모듈에서 제공되는 몇 가지 유용한 유틸리티가 있습니다:"

#: ../../library/email.utils.rst:16
msgid ""
"Return local time as an aware datetime object.  If called without "
"arguments, return current time.  Otherwise *dt* argument should be a "
":class:`~datetime.datetime` instance, and it is converted to the local "
"time zone according to the system time zone database.  If *dt* is naive "
"(that is, ``dt.tzinfo`` is ``None``), it is assumed to be in local time."
"  The *isdst* parameter is ignored."
msgstr ""
"지역 시간을 어웨어 datetime 객체로 반환합니다. 인자 없이 호출되면, 현재 시각을 반환합니다. 그렇지 않으면 *dt* 인자가"
" :class:`~datetime.datetime` 인스턴스여야 하며, 시스템 시간대 데이터베이스에 따라 지역 시간대로 변환됩니다."
" *dt*\\가 나이브하면 (즉, ``dt.tzinfo``\\가 ``None``\\이면), 지역 시간으로 간주합니다. *isdst*"
" 매개 변수는 무시합니다."

#: ../../library/email.utils.rst:25
msgid "The *isdst* parameter."
msgstr "*isdst* 매개 변수."

#: ../../library/email.utils.rst:30
msgid ""
"Returns a string suitable for an :rfc:`2822`\\ -compliant :mailheader"
":`Message-ID` header.  Optional *idstring* if given, is a string used to "
"strengthen the uniqueness of the message id.  Optional *domain* if given "
"provides the portion of the msgid after the '@'.  The default is the "
"local hostname.  It is not normally necessary to override this default, "
"but may be useful certain cases, such as a constructing distributed "
"system that uses a consistent domain name across multiple hosts."
msgstr ""
":rfc:`2822`\\ -준수 :mailheader:`Message-ID` 헤더에 적합한 문자열을 반환합니다. 선택적인 "
"*idstring*\\이 주어지면, 메시지 id의 고유성을 강화하는 데 사용되는 문자열입니다. 선택적인 *domain*\\이 "
"주어지면, msgid의 '@' 다음 부분을 제공합니다. 기본값은 로컬 호스트 명입니다. 일반적으로 이 기본값을 재정의할 필요는 "
"없지만, 여러 호스트에 걸쳐 일관된 도메인 이름을 사용하는 분산 시스템을 구성하는 경우와 같이 특정 경우에 유용할 수 있습니다."

#: ../../library/email.utils.rst:38
msgid "Added the *domain* keyword."
msgstr "*domain* 키워드가 추가되었습니다."

#: ../../library/email.utils.rst:42
msgid ""
"The remaining functions are part of the legacy (``Compat32``) email API."
"  There is no need to directly use these with the new API, since the "
"parsing and formatting they provide is done automatically by the header "
"parsing machinery of the new API."
msgstr ""
"나머지 함수는 레거시 (``Compat32``) email API의 일부입니다. 이것들이 제공하는 구문 분석과 포매팅은 새 API의"
" 헤더 구문 분석 장치가 자동으로 수행하므로, 새 API에서 이것들을 직접 사용할 필요는 없습니다."

#: ../../library/email.utils.rst:50
msgid ""
"Return a new string with backslashes in *str* replaced by two "
"backslashes, and double quotes replaced by backslash-double quote."
msgstr "*str*\\에 있는 역 슬래시를 두 개의 역 슬래시로 대체하고, 큰따옴표는 역 슬래시-큰따옴표로 대체한 새 문자열을 반환합니다."

#: ../../library/email.utils.rst:56
msgid ""
"Return a new string which is an *unquoted* version of *str*. If *str* "
"ends and begins with double quotes, they are stripped off.  Likewise if "
"*str* ends and begins with angle brackets, they are stripped off."
msgstr ""
"*str*\\의 *unquote 된* 버전인 새 문자열을 반환합니다. *str*\\가 큰따옴표로 끝나고 시작하면, 큰따옴표가 "
"제거됩니다. 마찬가지로 *str*\\이 화살괄호(angle brackets)로 끝나고 시작하면, 제거됩니다."

#: ../../library/email.utils.rst:63
msgid ""
"Parse address -- which should be the value of some address-containing "
"field such as :mailheader:`To` or :mailheader:`Cc` -- into its "
"constituent *realname* and *email address* parts.  Returns a tuple of "
"that information, unless the parse fails, in which case a 2-tuple of "
"``('', '')`` is returned."
msgstr ""
"address(:mailheader:`To`\\나 :mailheader:`Cc`\\와 같은 주소를 포함하는 필드의 값이어야 "
"합니다)를 *realname*\\과 *email 주소* 구성 요소로 구문 분석합니다. 구문 분석에 실패하지 않는 한 해당 정보의 "
"튜플을 반환합니다. 실패하면 ``('', '')``\\의 2-튜플이 반환됩니다."

#: ../../library/email.utils.rst:68 ../../library/email.utils.rst:96
msgid "If *strict* is true, use a strict parser which rejects malformed inputs."
msgstr ""

#: ../../library/email.utils.rst:70 ../../library/email.utils.rst:108
msgid "Add *strict* optional parameter and reject malformed inputs by default."
msgstr ""

#: ../../library/email.utils.rst:76
msgid ""
"The inverse of :meth:`parseaddr`, this takes a 2-tuple of the form "
"``(realname, email_address)`` and returns the string value suitable for a"
" :mailheader:`To` or :mailheader:`Cc` header.  If the first element of "
"*pair* is false, then the second element is returned unmodified."
msgstr ""
":meth:`parseaddr`\\의 역, ``(realname, email_address)`` 형식의 2-튜플을 취해 "
":mailheader:`To`\\나 :mailheader:`Cc` 헤더에 적합한 문자열 값을 반환합니다. *pair*\\의 첫 번째"
" 요소가 거짓이면, 두 번째 요소는 수정되지 않은 채 반환됩니다."

#: ../../library/email.utils.rst:81
msgid ""
"Optional *charset* is the character set that will be used in the "
":rfc:`2047` encoding of the ``realname`` if the ``realname`` contains "
"non-ASCII characters.  Can be an instance of :class:`str` or a "
":class:`~email.charset.Charset`.  Defaults to ``utf-8``."
msgstr ""
"선택적 *charset*\\은 ``realname``\\에 비 ASCII 문자가 포함되어있을 때 ``realname``\\의 "
":rfc:`2047` 인코딩에 사용될 문자 집합입니다. :class:`str`\\이나 "
":class:`~email.charset.Charset`\\의 인스턴스가 될 수 있습니다. 기본값은 ``utf-8``\\입니다."

#: ../../library/email.utils.rst:86
msgid "Added the *charset* option."
msgstr "*charset* 옵션이 추가되었습니다."

#: ../../library/email.utils.rst:92
msgid ""
"This method returns a list of 2-tuples of the form returned by "
"``parseaddr()``. *fieldvalues* is a sequence of header field values as "
"might be returned by :meth:`Message.get_all "
"<email.message.Message.get_all>`."
msgstr ""
"이 메서드는 ``parseaddr()``\\에 의해 반환된 형식의 2-튜플 리스트를 반환합니다. *fieldvalues*\\는 "
":meth:`Message.get_all <email.message.Message.get_all>`\\에 의해 반환될 수 있는 헤더"
" 필드 값의 시퀀스입니다."

#: ../../library/email.utils.rst:98
msgid "Here's a simple example that gets all the recipients of a message::"
msgstr ""

#: ../../library/email.utils.rst:100
msgid ""
"from email.utils import getaddresses\n"
"\n"
"tos = msg.get_all('to', [])\n"
"ccs = msg.get_all('cc', [])\n"
"resent_tos = msg.get_all('resent-to', [])\n"
"resent_ccs = msg.get_all('resent-cc', [])\n"
"all_recipients = getaddresses(tos + ccs + resent_tos + resent_ccs)"
msgstr ""
"from email.utils import getaddresses\n"
"\n"
"tos = msg.get_all('to', [])\n"
"ccs = msg.get_all('cc', [])\n"
"resent_tos = msg.get_all('resent-to', [])\n"
"resent_ccs = msg.get_all('resent-cc', [])\n"
"all_recipients = getaddresses(tos + ccs + resent_tos + resent_ccs)"

#: ../../library/email.utils.rst:114
msgid ""
"Attempts to parse a date according to the rules in :rfc:`2822`. however, "
"some mailers don't follow that format as specified, so :func:`parsedate` "
"tries to guess correctly in such cases.  *date* is a string containing an"
" :rfc:`2822` date, such as  ``\"Mon, 20 Nov 1995 19:12:08 -0500\"``.  If "
"it succeeds in parsing the date, :func:`parsedate` returns a 9-tuple that"
" can be passed directly to :func:`time.mktime`; otherwise ``None`` will "
"be returned.  Note that indexes 6, 7, and 8 of the result tuple are not "
"usable."
msgstr ""
":rfc:`2822`\\의 규칙에 따라 날짜를 구문 분석하려고 시도합니다. 그러나, 일부 메일러는 지정된 대로 이 형식을 따르지 "
"않으므로 :func:`parsedate`\\는 이러한 경우에 올바르게 추측하려고 합니다. *date*\\는 :rfc:`2822` "
"날짜를 포함하는 문자열입니다 (가령 ``\"Mon, 20 Nov 1995 19:12:08 -0500\"``). 날짜 구문 분석에 "
"성공하면, :func:`parsedate`\\는 :func:`time.mktime`\\에 직접 전달할 수 있는 9-튜플을 "
"반환합니다; 그렇지 않으면, ``None``\\을 반환합니다. 결과 튜플의 인덱스 6, 7 및 8은 사용할 수 없음에 유의하십시오."

#: ../../library/email.utils.rst:125
msgid ""
"Performs the same function as :func:`parsedate`, but returns either "
"``None`` or a 10-tuple; the first 9 elements make up a tuple that can be "
"passed directly to :func:`time.mktime`, and the tenth is the offset of "
"the date's timezone from UTC (which is the official term for Greenwich "
"Mean Time) [#]_.  If the input string has no timezone, the last element "
"of the tuple returned is ``0``, which represents UTC. Note that indexes "
"6, 7, and 8 of the result tuple are not usable."
msgstr ""
":func:`parsedate`\\와 같은 기능을 수행하지만, ``None``\\이나 10-튜플을 반환합니다; 앞의 9개 요소는 "
":func:`time.mktime`\\에 직접 전달할 수 있는 튜플을 구성하고, 열 번째 요소는 UTC(그리니치 표준 시의 공식 "
"용어)로부터의 날짜의 시간대 오프셋입니다 [#]_. 입력 문자열에 시간대가 없으면, 반환되는 튜플의 마지막 요소는 "
"``0``\\입니다, UTC를 나타냅니다. 결과 튜플의 인덱스 6, 7 및 8은 사용할 수 없음에 유의하십시오."

#: ../../library/email.utils.rst:135
msgid ""
"The inverse of :func:`format_datetime`.  Performs the same function as "
":func:`parsedate`, but on success returns a :mod:`~datetime.datetime`; "
"otherwise ``ValueError`` is raised if *date* contains an invalid value "
"such as an hour greater than 23 or a timezone offset not between -24 and "
"24 hours. If the input date has a timezone of ``-0000``, the ``datetime``"
" will be a naive ``datetime``, and if the date is conforming to the RFCs "
"it will represent a time in UTC but with no indication of the actual "
"source timezone of the message the date comes from.  If the input date "
"has any other valid timezone offset, the ``datetime`` will be an aware "
"``datetime`` with the corresponding a :class:`~datetime.timezone` "
":class:`~datetime.tzinfo`."
msgstr ""
":func:`format_datetime`\\의 역. :func:`parsedate`\\와 같은 기능을 수행하지만, 성공 시에 "
":mod:`~datetime.datetime`\\을 반환합니다; 그렇지 않으면, 23보다 큰 시간이나 -24 와 24 시간 사이에 "
"있지 않은 시간대와 같이 *date* 가 잘못된 값을 가질 때 ``ValueError``\\가 발생합니다. 입력 date의 시간대가"
" ``-0000``\\이면, ``datetime``\\은 나이브 ``datetime``\\이 되고, date가 RFC를 준수하면 "
"UTC로 시간이 표시되지만, date가 온 메시지의 실제 소스 시간대는 표시되지 않습니다. 입력 date에 다른 유효한 시간대 "
"오프셋이 있으면, ``datetime``\\은 해당 :class:`~datetime.timezone` "
":class:`~datetime.tzinfo`\\가 있는 어웨어 ``datetime``\\이 됩니다."

#: ../../library/email.utils.rst:151
msgid ""
"Turn a 10-tuple as returned by :func:`parsedate_tz` into a UTC timestamp "
"(seconds since the Epoch).  If the timezone item in the tuple is "
"``None``, assume local time."
msgstr ""
":func:`parsedate_tz`\\에 의해 반환된 10-튜플을 UTC 타임스탬프(Epoch 이후 초)로 바꿉니다. 튜플의 "
"시간대 항목이 ``None``\\이면, 지역 시간으로 간주합니다."

#: ../../library/email.utils.rst:158
msgid "Returns a date string as per :rfc:`2822`, e.g.::"
msgstr ":rfc:`2822`\\에 따르는 날짜 문자열을 반환합니다, 예를 들어::"

#: ../../library/email.utils.rst:160
msgid "Fri, 09 Nov 2001 01:08:47 -0000"
msgstr "Fri, 09 Nov 2001 01:08:47 -0000"

#: ../../library/email.utils.rst:162
msgid ""
"Optional *timeval* if given is a floating-point time value as accepted by"
" :func:`time.gmtime` and :func:`time.localtime`, otherwise the current "
"time is used."
msgstr ""
"선택적 *timeval*\\이 주어지면 :func:`time.gmtime`\\과 :func:`time.localtime`\\이 "
"받아들이는 부동 소수점 시간 값입니다, 그렇지 않으면 현재 시각이 사용됩니다."

#: ../../library/email.utils.rst:166
msgid ""
"Optional *localtime* is a flag that when ``True``, interprets *timeval*, "
"and returns a date relative to the local timezone instead of UTC, "
"properly taking daylight savings time into account. The default is "
"``False`` meaning UTC is used."
msgstr ""
"선택적 *localtime* 은, ``True``\\일 때, *timeval*\\을 해석하고, UTC 대신 일광 절약 시간을 적절히"
" 고려하는 지역 시간대에 상대적인 날짜를 반환토록 하는 플래그입니다. 기본값은 UTC가 사용된다는 뜻인 ``False``\\입니다."

#: ../../library/email.utils.rst:171
msgid ""
"Optional *usegmt* is a flag that when ``True``, outputs a  date string "
"with the timezone as an ascii string ``GMT``, rather than a numeric "
"``-0000``. This is needed for some protocols (such as HTTP). This only "
"applies when *localtime* is ``False``.  The default is ``False``."
msgstr ""
"선택적 *usegmt*\\는, ``True``\\일 때, 날짜 문자열의 시간대를 숫자 ``-0000`` 대신 ASCII 문자열 "
"``GMT``\\로 출력하도록 하는 플래그입니다. 일부 프로토콜(가령 HTTP)에 필요합니다. 이것은 *localtime* 이 "
"``False``\\일 때만 적용됩니다. 기본값은 ``False``\\입니다."

#: ../../library/email.utils.rst:179
msgid ""
"Like ``formatdate``, but the input is a :mod:`datetime` instance.  If it "
"is a naive datetime, it is assumed to be \"UTC with no information about "
"the source timezone\", and the conventional ``-0000`` is used for the "
"timezone. If it is an aware ``datetime``, then the numeric timezone "
"offset is used. If it is an aware timezone with offset zero, then "
"*usegmt* may be set to ``True``, in which case the string ``GMT`` is used"
" instead of the numeric timezone offset.  This provides a way to generate"
" standards conformant HTTP date headers."
msgstr ""
"``formatdate``\\와 같지만, 입력이 :mod:`datetime` 인스턴스입니다. 나이브 datetime이면, \"소스 "
"시간대에 대한 정보가 없는 UTC\"로 간주하며, 관습적으로 ``-0000``\\이 시간대로 사용됩니다. 어웨어 "
"``datetime``\\이면, 숫자 시간대 오프셋이 사용됩니다. 오프셋이 0인 어웨어 시간대면, *usegmt*\\를 "
"``True``\\로 설정해서 ``GMT`` 문자열을 숫자 시간대 오프셋 대신 사용할 수 있습니다. 이것은 표준을 준수하는 HTTP"
" date 헤더를 생성하는 방법을 제공합니다."

#: ../../library/email.utils.rst:193
msgid "Decode the string *s* according to :rfc:`2231`."
msgstr ":rfc:`2231`\\에 따라 *s* 문자열을 디코드합니다."

#: ../../library/email.utils.rst:198
msgid ""
"Encode the string *s* according to :rfc:`2231`.  Optional *charset* and "
"*language*, if given is the character set name and language name to use."
"  If neither is given, *s* is returned as-is.  If *charset* is given but "
"*language* is not, the string is encoded using the empty string for "
"*language*."
msgstr ""
":rfc:`2231`\\에 따라 *s* 문자열을 인코드합니다. 선택적인 *charset*\\과 *language*\\가 주어지면, "
"사용할 문자 집합 이름과 언어 이름입니다. 둘 다 지정되지 않으면, *s*\\가 그대로 반환됩니다. *charset*\\이 "
"주어졌지만, *language*\\가 지정되지 않으면, 문자열은 *language*\\에 대해 빈 문자열을 사용하여 인코딩됩니다."

#: ../../library/email.utils.rst:206
msgid ""
"When a header parameter is encoded in :rfc:`2231` format, "
":meth:`Message.get_param <email.message.Message.get_param>` may return a "
"3-tuple containing the character set, language, and value.  "
":func:`collapse_rfc2231_value` turns this into a unicode string.  "
"Optional *errors* is passed to the *errors* argument of :class:`str`'s "
":func:`~str.encode` method; it defaults to ``'replace'``.  Optional "
"*fallback_charset* specifies the character set to use if the one in the "
":rfc:`2231` header is not known by Python; it defaults to ``'us-ascii'``."
msgstr ""
"header 매개 변수가 :rfc:`2231`\\로 인코딩되었을 때, :meth:`Message.get_param "
"<email.message.Message.get_param>`\\은 문자 집합, 언어 및 값이 포함된 3-튜플을 반환할 수 "
"있습니다. :func:`collapse_rfc2231_value`\\는 이것을 유니코드 문자열로 변환합니다. 선택적 "
"*errors*\\는 :class:`str`\\의 :func:`~str.encode` 메서드의 *errors* 인자로 전달됩니다; "
"기본값은 ``'replace'``\\입니다. 선택적 *fallback_charset*\\은 :rfc:`2231` 헤더에 있는 것이 "
"파이썬에 알려지지 않았을 때 사용할 문자 집합을 지정합니다; 기본값은 ``'us-ascii'``\\입니다."

#: ../../library/email.utils.rst:215
msgid ""
"For convenience, if the *value* passed to :func:`collapse_rfc2231_value` "
"is not a tuple, it should be a string and it is returned unquoted."
msgstr ""
"편의상, :func:`collapse_rfc2231_value`\\에 전달된 *value*\\가 튜플이 아니면, 문자열이어야 하고 "
"unquote 되어 반환됩니다."

#: ../../library/email.utils.rst:221
msgid ""
"Decode parameters list according to :rfc:`2231`.  *params* is a sequence "
"of 2-tuples containing elements of the form ``(content-type, string-"
"value)``."
msgstr ""
":rfc:`2231`\\에 따라 매개 변수 리스트를 디코드합니다. *params*\\는 ``(content-type, string-"
"value)`` 형식의 요소를 포함하는 2-튜플의 시퀀스입니다."

#: ../../library/email.utils.rst:226
msgid "Footnotes"
msgstr "각주"

#: ../../library/email.utils.rst:227
msgid ""
"Note that the sign of the timezone offset is the opposite of the sign of "
"the ``time.timezone`` variable for the same timezone; the latter variable"
" follows the POSIX standard while this module follows :rfc:`2822`."
msgstr ""
"시간대 오프셋의 부호는 같은 시간대에 대한 ``time.timezone`` 변수의 부호와 반대임에 유의하십시오; 이 모듈이 "
":rfc:`2822`\\를 따르지만, 후자의 변수는 POSIX 표준을 따릅니다."


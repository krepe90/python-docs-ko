# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/site.rst:2
#, fuzzy
msgid ":mod:`!site` --- Site-specific configuration hook"
msgstr ":mod:`site` --- 사이트별 구성 훅"

#: ../../library/site.rst:7
msgid "**Source code:** :source:`Lib/site.py`"
msgstr "**소스 코드:** :source:`Lib/site.py`"

#: ../../library/site.rst:13
msgid ""
"**This module is automatically imported during initialization.** The "
"automatic import can be suppressed using the interpreter's :option:`-S` "
"option."
msgstr ""
"**이 모듈은 초기화 중에 자동으로 임포트 됩니다.** 인터프리터의 :option:`-S` 옵션을 사용하여 자동 임포트를 억제할 수"
" 있습니다."

#: ../../library/site.rst:18
#, fuzzy
msgid ""
"Importing this module normally appends site-specific paths to the module "
"search path and adds :ref:`callables <site-consts>`, including "
":func:`help` to the built-in namespace. However, Python startup option "
":option:`-S` blocks this and this module can be safely imported with no "
"automatic modifications to the module search path or additions to the "
"builtins.  To explicitly trigger the usual site-specific additions, call "
"the :func:`main` function."
msgstr ""
":option:`-S`\\를 사용하지 않는 한, 이 모듈의 임포트는 사이트별 경로를 모듈 검색 경로에 추가하고 몇 가지 "
"내장(builtins)을 추가합니다. 사용되었다면, 이 모듈은 모듈 검색 경로를 자동으로 수정하거나 내장을 추가하지 않고도 안전하게"
" 임포트 할 수 있습니다. 일반적인 사이트별 추가를 명시적으로 트리거 하려면, :func:`site.main` 함수를 호출하십시오."

#: ../../library/site.rst:25
msgid ""
"Importing the module used to trigger paths manipulation even when using "
":option:`-S`."
msgstr ":option:`-S`\\를 사용하는 경우에도 모듈을 임포트 하면 경로 조작을 트리거 했습니다."

#: ../../library/site.rst:32
#, fuzzy, python-brace-format
msgid ""
"It starts by constructing up to four directories from a head and a tail "
"part. For the head part, it uses ``sys.prefix`` and ``sys.exec_prefix``; "
"empty heads are skipped.  For the tail part, it uses the empty string and"
" then :file:`lib/site-packages` (on Windows) or :file:`lib/python{X.Y[t"
"]}/site-packages` (on Unix and macOS). (The optional suffix \"t\" "
"indicates the :term:`free threading` build, and is appended if ``\"t\"`` "
"is present in the :data:`sys.abiflags` constant.) For each of the "
"distinct head-tail combinations, it sees if it refers to an existing "
"directory, and if so, adds it to ``sys.path`` and also inspects the newly"
" added path for configuration files."
msgstr ""
"머리와 꼬리 부분에서 최대 4개의 디렉터리를 구성하는 것으로 시작합니다. 머리 부분에는, ``sys.prefix``\\와 "
"``sys.exec_prefix``\\를 사용합니다; 빈 머리는 건너뜁니다. 꼬리 부분에는, 빈 문자열을 사용하고 "
":file:`lib/site-packages`\\(윈도우에서)나 :file:`lib/python{X.Y}/site-"
"packages`\\(유닉스와 맥에서)를 사용합니다. 각 머리-꼬리 조합마다, 존재하는 디렉터리를 참조하는지 확인하고, 그렇다면 "
"디렉터리를 ``sys.path``\\에 추가하고 새로 추가된 경로에서 구성 파일을 검사합니다."

#: ../../library/site.rst:44
msgid "Support for the \"site-python\" directory has been removed."
msgstr "\"site-python\" 디렉터리에 대한 지원이 제거되었습니다."

#: ../../library/site.rst:47
msgid ""
"On Unix, :term:`Free threading <free threading>` Python installations are"
" identified by the \"t\" suffix in the version-specific directory name, "
"such as :file:`lib/python3.13t/`."
msgstr ""

#: ../../library/site.rst:52
msgid ""
"If a file named \"pyvenv.cfg\" exists one directory above sys.executable,"
" sys.prefix and sys.exec_prefix are set to that directory and it is also "
"checked for site-packages (sys.base_prefix and sys.base_exec_prefix will "
"always be the \"real\" prefixes of the Python installation). If "
"\"pyvenv.cfg\" (a bootstrap configuration file) contains the key "
"\"include-system-site-packages\" set to anything other than \"true\" "
"(case-insensitive), the system-level prefixes will not be searched for "
"site-packages; otherwise they will."
msgstr ""
"\"pyvenv.cfg\"라는 파일이 sys.executable의 한 디렉터리 위에 있으면, sys.prefix와 "
"sys.exec_prefix가 그 디렉터리로 설정되고, site-packages도 검사됩니다 (sys.base_prefix와 "
"sys.base_exec_prefix는 항상 파이썬 설치의 \"실제\" 접두사가 됩니다). \"pyvenv.cfg\"(부트스트랩 "
"구성 파일)에 \"true\"(대소 문자 구분하지 않습니다) 이외의 다른 값으로 설정된 \"include-system-site-"
"packages\" 키가 있으면, 시스템 수준 접두사에서는 site-packages를 검색하지 않습니다; 그렇지 않으면 검사합니다."

#: ../../library/site.rst:65
#, python-brace-format
msgid ""
"A path configuration file is a file whose name has the form "
":file:`{name}.pth` and exists in one of the four directories mentioned "
"above; its contents are additional items (one per line) to be added to "
"``sys.path``.  Non-existing items are never added to ``sys.path``, and no"
" check is made that the item refers to a directory rather than a file.  "
"No item is added to ``sys.path`` more than once.  Blank lines and lines "
"beginning with ``#`` are skipped.  Lines starting with ``import`` "
"(followed by space or tab) are executed."
msgstr ""
"경로 구성 파일은 이름이 :file:`{name}.pth` 인 파일이며, 위에서 언급한 4개의 디렉터리 중 하나에 존재합니다; "
"내용은 ``sys.path``\\에 추가될 추가 항목(한 줄에 하나씩)입니다. 존재하지 않는 항목은 ``sys.path``\\에 "
"추가되지 않으며, 항목이 파일이 아닌 디렉터리를 참조하는지 확인하지 않습니다. 어떤 항목도 ``sys.path``\\에 두 번 "
"추가되지 않습니다. 빈 줄과 ``#``\\으로 시작하는 줄은 건너뜁니다. ``import``\\로 시작하는 (공백이나 탭이 "
"뒤따르는) 줄은 실행됩니다."

#: ../../library/site.rst:75
msgid ""
"An executable line in a :file:`.pth` file is run at every Python startup,"
" regardless of whether a particular module is actually going to be used. "
"Its impact should thus be kept to a minimum. The primary intended purpose"
" of executable lines is to make the corresponding module(s) importable "
"(load 3rd-party import hooks, adjust :envvar:`PATH` etc). Any other "
"initialization is supposed to be done upon a module's actual import, if "
"and when it happens. Limiting a code chunk to a single line is a "
"deliberate measure to discourage putting anything more complex here."
msgstr ""
":file:`.pth` 파일의 실행 줄은 특정 모듈이 실제 사용될지에 관계없이 모든 파이썬 시작 시에 실행됩니다. 따라서 영향을 "
"최소화해야 합니다. 실행 줄의 주요 목적은 해당 모듈을 임포트 가능하게 만드는 것입니다 (제삼자 임포트 훅 로드, "
":envvar:`PATH` 조정 등). 다른 초기화는 모듈의 실제 임포트에서 수행된다고 간주합니다, (임포트 한다면 그리고 임포트 "
"할 때). 코드 청크를 한 줄로 제한하는 것은 여기에 더 복잡한 것을 넣지 않도록 하려는 의도입니다."

#: ../../library/site.rst:86
msgid ""
"The :file:`.pth` files are now decoded by UTF-8 at first and then by the "
":term:`locale encoding` if it fails."
msgstr ""

#: ../../library/site.rst:94
#, python-brace-format
msgid ""
"For example, suppose ``sys.prefix`` and ``sys.exec_prefix`` are set to "
":file:`/usr/local`.  The Python X.Y library is then installed in "
":file:`/usr/local/lib/python{X.Y}`.  Suppose this has a subdirectory "
":file:`/usr/local/lib/python{X.Y}/site-packages` with three "
"subsubdirectories, :file:`foo`, :file:`bar` and :file:`spam`, and two "
"path configuration files, :file:`foo.pth` and :file:`bar.pth`.  Assume "
":file:`foo.pth` contains the following::"
msgstr ""
"예를 들어, ``sys.prefix``\\와 ``sys.exec_prefix``\\가 :file:`/usr/local`\\로 "
"설정되었다고 가정하십시오. 그러면 파이썬 X.Y 라이브러리는 :file:`/usr/local/lib/python{X.Y}`\\에 "
"설치되어 있습니다. 여기에 :file:`foo`, :file:`bar` 및 :file:`spam`\\이라는 세 개의 서브 "
"디렉터리와, :file:`foo.pth`\\와 :file:`bar.pth`\\라는 두 개의 경로 구성 파일이 있는 서브 디렉터리 "
":file:`/usr/local/lib/python{X.Y}/site-packages`\\가 있다고 가정하십시오. "
":file:`foo.pth`\\에 다음이 포함되어 있고::"

#: ../../library/site.rst:102
msgid ""
"# foo package configuration\n"
"\n"
"foo\n"
"bar\n"
"bletch"
msgstr ""

#: ../../library/site.rst:108
msgid "and :file:`bar.pth` contains::"
msgstr ":file:`bar.pth`\\는 다음을 포함한다고 가정하십시오::"

#: ../../library/site.rst:110
#, fuzzy
msgid ""
"# bar package configuration\n"
"\n"
"bar"
msgstr "Readline 구성"

#: ../../library/site.rst:114
msgid ""
"Then the following version-specific directories are added to "
"``sys.path``, in this order::"
msgstr "그러면 다음과 같은 버전 별 디렉터리가 이 순서대로 ``sys.path``\\에 추가됩니다::"

#: ../../library/site.rst:117
msgid ""
"/usr/local/lib/pythonX.Y/site-packages/bar\n"
"/usr/local/lib/pythonX.Y/site-packages/foo"
msgstr ""

#: ../../library/site.rst:120
msgid ""
"Note that :file:`bletch` is omitted because it doesn't exist; the "
":file:`bar` directory precedes the :file:`foo` directory because "
":file:`bar.pth` comes alphabetically before :file:`foo.pth`; and "
":file:`spam` is omitted because it is not mentioned in either path "
"configuration file."
msgstr ""
":file:`bletch`\\가 존재하지 않기 때문에 생략되었음에 유의하십시오; :file:`bar.pth`\\가 알파벳순으로 "
":file:`foo.pth` 앞에 오기 때문에 :file:`bar` 디렉터리가 :file:`foo` 디렉터리보다 앞에 옵니다; "
":file:`spam`\\은 경로 구성 파일에 언급되어 있지 않기 때문에 생략되었습니다."

#: ../../library/site.rst:126
msgid ":mod:`sitecustomize`"
msgstr ""

#: ../../library/site.rst:130
#, fuzzy
msgid ""
"After these path manipulations, an attempt is made to import a module "
"named :mod:`sitecustomize`, which can perform arbitrary site-specific "
"customizations. It is typically created by a system administrator in the "
"site-packages directory.  If this import fails with an :exc:`ImportError`"
" or its subclass exception, and the exception's :attr:`~ImportError.name`"
" attribute equals to ``'sitecustomize'``, it is silently ignored.  If "
"Python is started without output streams available, as with "
":file:`pythonw.exe` on Windows (which is used by default to start IDLE), "
"attempted output from :mod:`sitecustomize` is ignored.  Any other "
"exception causes a silent and perhaps mysterious failure of the process."
msgstr ""
"이러한 경로 조작 후, 임의의 사이트별 사용자 정의를 수행할 수 있는 :mod:`sitecustomize`\\라는 모듈을 임포트 "
"하려고 시도합니다. 일반적으로 시스템 관리자가 site-packages 디렉터리에 만듭니다. 이 임포트가 "
":exc:`ImportError`\\나 이것의 서브 클래스 예외로 실패하고, 예외의 :attr:`name` 어트리뷰트가 "
"``'sitecustomize'``\\와 같으면, 조용히 무시됩니다. 윈도우에서 :file:`pythonw.exe`\\(IDLE을 "
"시작하는 데 기본적으로 사용됩니다)처럼, 사용 가능한 출력 스트림 없이 파이썬을 시작하면, "
":mod:`sitecustomize`\\의 출력 시도는 무시됩니다. 다른 예외는 절차의 조용한 그리고 아마도 정체불명의 실패로 "
"이어집니다."

#: ../../library/site.rst:142
msgid ":mod:`usercustomize`"
msgstr ""

#: ../../library/site.rst:146
#, fuzzy
msgid ""
"After this, an attempt is made to import a module named "
":mod:`usercustomize`, which can perform arbitrary user-specific "
"customizations, if :data:`~site.ENABLE_USER_SITE` is true.  This file is "
"intended to be created in the user site-packages directory (see below), "
"which is part of ``sys.path`` unless disabled by :option:`-s`.  If this "
"import fails with an :exc:`ImportError` or its subclass exception, and "
"the exception's :attr:`~ImportError.name` attribute equals to "
"``'usercustomize'``, it is silently ignored."
msgstr ""
"그런 다음, :data:`ENABLE_USER_SITE`\\가 참이면, 임의의 사용자별 사용자 정의를 수행할 수 있는 "
":mod:`usercustomize`\\라는 모듈을 임포트 하려고 시도합니다. 이 파일은 사용자 site-packages "
"디렉터리(아래를 보십시오)에 만들어지는 것이 관례입니다, :option:`-s`\\에 의해 비활성화되지 않는 한 "
"``sys.path``\\의 일부입니다. 이 임포트가 :exc:`ImportError`\\나 이것의 서브 클래스 예외로 실패하고, "
"예외의 :attr:`name` 어트리뷰트가 ``'usercustomize'``\\와 같으면, 조용히 무시됩니다."

#: ../../library/site.rst:154
msgid ""
"Note that for some non-Unix systems, ``sys.prefix`` and "
"``sys.exec_prefix`` are empty, and the path manipulations are skipped; "
"however the import of :mod:`sitecustomize` and :mod:`usercustomize` is "
"still attempted."
msgstr ""
"유닉스가 아닌 일부 시스템에서는, ``sys.prefix``\\와 ``sys.exec_prefix``\\가 비어 있고, 경로 조작을"
" 건너뜀에 유의하십시오; 하지만 :mod:`sitecustomize`\\와 :mod:`usercustomize` 임포트는 여전히 "
"시도됩니다."

#: ../../library/site.rst:163
msgid "Readline configuration"
msgstr "Readline 구성"

#: ../../library/site.rst:165
msgid ""
"On systems that support :mod:`readline`, this module will also import and"
" configure the :mod:`rlcompleter` module, if Python is started in "
":ref:`interactive mode <tut-interactive>` and without the :option:`-S` "
"option. The default behavior is enable tab-completion and to use "
":file:`~/.python_history` as the history save file.  To disable it, "
"delete (or override) the :data:`sys.__interactivehook__` attribute in "
"your :mod:`sitecustomize` or :mod:`usercustomize` module or your "
":envvar:`PYTHONSTARTUP` file."
msgstr ""
":mod:`readline`\\을 지원하는 시스템에서, 파이썬이 :ref:`대화형 모드 <tut-interactive>`\\로 "
":option:`-S` 옵션 없이 시작되면, 이 모듈은 :mod:`rlcompleter` 모듈을 임포트하고 구성합니다. 기본 동작은"
" 탭 완성을 활성화하고 :file:`~/.python_history`\\를 히스토리 저장 파일로 사용하는 것입니다. 이를 "
"비활성화하려면, :mod:`sitecustomize`\\나 :mod:`usercustomize` 모듈 또는 "
":envvar:`PYTHONSTARTUP` 파일에서 :data:`sys.__interactivehook__` 어트리뷰트를 삭제(또는"
" 재정의)하십시오."

#: ../../library/site.rst:174
msgid "Activation of rlcompleter and history was made automatic."
msgstr "rlcompleter와 히스토리 활성화가 자동으로 이루어졌습니다."

#: ../../library/site.rst:179
msgid "Module contents"
msgstr "모듈 내용"

#: ../../library/site.rst:183
msgid "A list of prefixes for site-packages directories."
msgstr "site-packages 디렉터리의 접두사 리스트."

#: ../../library/site.rst:188
msgid ""
"Flag showing the status of the user site-packages directory.  ``True`` "
"means that it is enabled and was added to ``sys.path``.  ``False`` means "
"that it was disabled by user request (with :option:`-s` or "
":envvar:`PYTHONNOUSERSITE`).  ``None`` means it was disabled for security"
" reasons (mismatch between user or group id and effective id) or by an "
"administrator."
msgstr ""
"사용자 site-packages 디렉터리의 상태를 나타내는 플래그. ``True``\\는 활성화되어 ``sys.path``\\에 "
"추가되었음을 의미합니다. ``False``\\는 사용자 요청(:option:`-s`\\나 "
":envvar:`PYTHONNOUSERSITE`\\로)에 의해 비활성화되었음을 의미합니다. ``None``\\은 보안상의 "
"이유(사용자나 그룹 id와 유효(effective) id가 일치하지 않음)로 또는 관리자에 의해 비활성화되었음을 의미합니다."

#: ../../library/site.rst:198
#, fuzzy, python-brace-format
msgid ""
"Path to the user site-packages for the running Python.  Can be ``None`` "
"if :func:`getusersitepackages` hasn't been called yet.  Default value is "
":file:`~/.local/lib/python{X.Y}[t]/site-packages` for UNIX and non-"
"framework macOS builds, :file:`~/Library/Python/{X.Y}/lib/python/site-"
"packages` for macOS framework builds, and "
":file:`{%APPDATA%}\\\\Python\\\\Python{XY}\\\\site-packages` on Windows."
"  The optional \"t\" indicates the free-threaded build.  This directory "
"is a site directory, which means that :file:`.pth` files in it will be "
"processed."
msgstr ""
"실행 중인 파이썬의 사용자 site-packages 경로. :func:`getusersitepackages`\\가 아직 호출되지 "
"않았으면 ``None``\\일 수 있습니다. 기본값은 유닉스와 비 프레임워크 맥 OS X 빌드의 경우 "
":file:`~/.local/lib/python{X.Y}/site-packages`, 맥 프레임워크 빌드의 경우 "
":file:`~/Library/Python/{X.Y}/lib/python/site-packages`, 윈도우의 경우 "
":file:`{%APPDATA%}\\\\Python\\\\Python{XY}\\\\site-packages`\\입니다. 이 "
"디렉터리는 사이트 디렉터리이며, 이는 그 안에 있는 :file:`.pth` 파일이 처리됨을 의미합니다."

#: ../../library/site.rst:210
#, fuzzy, python-brace-format
msgid ""
"Path to the base directory for the user site-packages.  Can be ``None`` "
"if :func:`getuserbase` hasn't been called yet.  Default value is "
":file:`~/.local` for UNIX and macOS non-framework builds, "
":file:`~/Library/Python/{X.Y}` for macOS framework builds, and "
":file:`{%APPDATA%}\\\\Python` for Windows.  This value is used to compute"
" the installation directories for scripts, data files, Python modules, "
"etc. for the :ref:`user installation scheme <sysconfig-user-scheme>`. See"
" also :envvar:`PYTHONUSERBASE`."
msgstr ""
"사용자 site-packages의 베이스 디렉터리에 대한 경로. :func:`getuserbase`\\가 아직 호출되지 않았으면 "
"``None``\\일 수 있습니다. 기본값은 유닉스와 맥 OS X 비 프레임워크 빌드의 경우 :file:`~/.local`, 맥 "
"프레임워크 빌드의 경우 :file:`~/Library/Python/{X.Y}`, 윈도우의 경우 "
":file:`{%APPDATA%}\\\\Python`\\입니다. 이 값은 Distutils에서 :ref:`사용자 설치 스킴 "
"<inst-alt-install-user>`\\의 스크립트, 데이터 파일, 파이썬 모듈 등의 설치 디렉터리를 계산하는 데 "
"사용됩니다. :envvar:`PYTHONUSERBASE` 도 참조하십시오."

#: ../../library/site.rst:222
msgid ""
"Adds all the standard site-specific directories to the module search "
"path.  This function is called automatically when this module is "
"imported, unless the Python interpreter was started with the :option:`-S`"
" flag."
msgstr ""
"모든 표준 사이트별 디렉터리를 모듈 검색 경로에 추가합니다. 파이썬 인터프리터가 :option:`-S` 플래그로 시작되지 않았으면,"
" 이 모듈이 임포트 될 때 이 함수가 자동으로 호출됩니다."

#: ../../library/site.rst:226
msgid "This function used to be called unconditionally."
msgstr "이 함수는 무조건 호출되었습니다."

#: ../../library/site.rst:232
msgid ""
"Add a directory to sys.path and process its :file:`.pth` files.  "
"Typically used in :mod:`sitecustomize` or :mod:`usercustomize` (see "
"above)."
msgstr ""
"sys.path에 디렉터리를 추가하고 :file:`.pth` 파일을 처리합니다. 일반적으로 "
":mod:`sitecustomize`\\나 :mod:`usercustomize`\\에서 사용됩니다 (위를 참조하십시오)."

#: ../../library/site.rst:238
msgid "Return a list containing all global site-packages directories."
msgstr "모든 전역 site-packages 디렉터리를 포함하는 리스트를 반환합니다."

#: ../../library/site.rst:245
msgid ""
"Return the path of the user base directory, :data:`USER_BASE`.  If it is "
"not initialized yet, this function will also set it, respecting "
":envvar:`PYTHONUSERBASE`."
msgstr ""
"사용자 베이스 디렉터리 :data:`USER_BASE`\\의 경로를 반환합니다. 아직 초기화되지 않았으면, 이 함수는 "
":envvar:`PYTHONUSERBASE`\\를 따라 설정합니다."

#: ../../library/site.rst:254
msgid ""
"Return the path of the user-specific site-packages directory, "
":data:`USER_SITE`.  If it is not initialized yet, this function will also"
" set it, respecting :data:`USER_BASE`.  To determine if the user-specific"
" site-packages was added to ``sys.path`` :data:`ENABLE_USER_SITE` should "
"be used."
msgstr ""
"사용자별 site-packages 디렉터리 :data:`USER_SITE`\\의 경로를 반환합니다. 아직 초기화되지 않았으면, 이 "
"함수는 :data:`USER_BASE`\\를 따라 설정합니다. 사용자별 site-packages가 ``sys.path``\\에 "
"추가되었는지 확인하려면 :data:`ENABLE_USER_SITE`\\를 사용해야 합니다."

#: ../../library/site.rst:266
msgid "Command Line Interface"
msgstr "명령 줄 인터페이스"

#: ../../library/site.rst:270
msgid ""
"The :mod:`site` module also provides a way to get the user directories "
"from the command line:"
msgstr ":mod:`site` 모듈은 명령 줄에서 사용자 디렉터리를 얻는 방법도 제공합니다:"

#: ../../library/site.rst:273
msgid ""
"$ python -m site --user-site\n"
"/home/user/.local/lib/python3.11/site-packages"
msgstr ""

#: ../../library/site.rst:278
msgid ""
"If it is called without arguments, it will print the contents of "
":data:`sys.path` on the standard output, followed by the value of "
":data:`USER_BASE` and whether the directory exists, then the same thing "
"for :data:`USER_SITE`, and finally the value of :data:`ENABLE_USER_SITE`."
msgstr ""
"인자 없이 호출되면, 표준 출력에 :data:`sys.path`\\의 내용을 인쇄한 다음, :data:`USER_BASE`\\의 "
"값과 디렉터리가 존재하는지를 인쇄하고, :data:`USER_SITE`\\에 대해 같은 것을 인쇄하고, 마지막으로 "
":data:`ENABLE_USER_SITE`\\의 값을 인쇄합니다."

#: ../../library/site.rst:285
msgid "Print the path to the user base directory."
msgstr "사용자 베이스 디렉터리의 경로를 인쇄합니다."

#: ../../library/site.rst:289
msgid "Print the path to the user site-packages directory."
msgstr "사용자 site-packages 디렉터리의 경로를 인쇄합니다."

#: ../../library/site.rst:291
msgid ""
"If both options are given, user base and user site will be printed "
"(always in this order), separated by :data:`os.pathsep`."
msgstr ""
"두 옵션이 모두 제공되면, :data:`os.pathsep`\\으로 구분하여, 사용자 베이스와 사용자 사이트를 (항상 이 순서대로)"
" 인쇄합니다."

#: ../../library/site.rst:294
msgid ""
"If any option is given, the script will exit with one of these values: "
"``0`` if the user site-packages directory is enabled, ``1`` if it was "
"disabled by the user, ``2`` if it is disabled for security reasons or by "
"an administrator, and a value greater than 2 if there is an error."
msgstr ""
"어떤 옵션이건 제공되면, 스크립트는 다음 값 중 하나로 종료됩니다: 사용자 site-packages 디렉터리가 활성화되었으면 "
"``0``, 사용자에 의해 비활성화되었으면 ``1``, 보안상의 이유나 관리자에 의해 비활성화되었으면 ``2``, 그리고 에러가 "
"있으면 2보다 큰 값."

#: ../../library/site.rst:301
msgid ":pep:`370` -- Per user site-packages directory"
msgstr ":pep:`370` -- 사용자별 site-packages 디렉터리"

#: ../../library/site.rst:302
msgid ":ref:`sys-path-init` -- The initialization of :data:`sys.path`."
msgstr ""

#: ../../library/site.rst:16
msgid "module"
msgstr ""

#: ../../library/site.rst:16
msgid "search"
msgstr ""

#: ../../library/site.rst:16 ../../library/site.rst:90
msgid "path"
msgstr ""

#: ../../library/site.rst:29
msgid "site-packages"
msgstr ""

#: ../../library/site.rst:29
msgid "directory"
msgstr ""

#: ../../library/site.rst:61
msgid "# (hash)"
msgstr ""

#: ../../library/site.rst:61
msgid "comment"
msgstr ""

#: ../../library/site.rst:61
msgid "statement"
msgstr ""

#: ../../library/site.rst:61
msgid "import"
msgstr ""

#: ../../library/site.rst:90
msgid "package"
msgstr ""

#: ../../library/site.rst:90
#, fuzzy
msgid "configuration"
msgstr "Readline 구성"

#: ../../library/site.rst:90
msgid "file"
msgstr ""


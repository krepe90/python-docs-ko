# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/xml.rst:4
msgid "XML Processing Modules"
msgstr "XML 처리 모듈"

#: ../../library/xml.rst:12
msgid "**Source code:** :source:`Lib/xml/`"
msgstr "**소스 코드:** :source:`Lib/xml/`"

#: ../../library/xml.rst:16
msgid "Python's interfaces for processing XML are grouped in the ``xml`` package."
msgstr "XML 처리를 위한 파이썬의 인터페이스는 ``xml`` 패키지로 묶여있습니다."

#: ../../library/xml.rst:20
msgid ""
"The XML modules are not secure against erroneous or maliciously "
"constructed data.  If you need to parse untrusted or unauthenticated data"
" see the :ref:`xml-vulnerabilities` and :ref:`defusedxml-package` "
"sections."
msgstr ""
"XML 모듈은 잘못되었거나 악의적으로 구성된 데이터로부터 안전하지 않습니다. 신뢰할 수 없거나 인증되지 않은 데이터를 구문 분석해야"
" 하면 :ref:`xml-vulnerabilities`\\과 :ref:`defusedxml-package` 절을 참조하십시오."

#: ../../library/xml.rst:25
msgid ""
"It is important to note that modules in the :mod:`xml` package require "
"that there be at least one SAX-compliant XML parser available. The Expat "
"parser is included with Python, so the :mod:`xml.parsers.expat` module "
"will always be available."
msgstr ""
":mod:`xml` 패키지의 모듈들은 최소한 하나의 SAX 호환 XML 구문 분석기가 있도록 요구함에 유의해야 합니다. Expat "
"구문 분석기가 파이썬에 포함되어 있으므로, :mod:`xml.parsers.expat` 모듈을 항상 사용할 수 있습니다."

#: ../../library/xml.rst:30
msgid ""
"The documentation for the :mod:`xml.dom` and :mod:`xml.sax` packages are "
"the definition of the Python bindings for the DOM and SAX interfaces."
msgstr ""
":mod:`xml.dom` 과 :mod:`xml.sax` 패키지에 대한 설명서는 DOM과 SAX 인터페이스에 대한 파이썬 바인딩의 "
"정의입니다."

#: ../../library/xml.rst:33
msgid "The XML handling submodules are:"
msgstr "XML 처리 서브 모듈은 다음과 같습니다:"

#: ../../library/xml.rst:35
msgid ""
":mod:`xml.etree.ElementTree`: the ElementTree API, a simple and "
"lightweight XML processor"
msgstr ":mod:`xml.etree.ElementTree`: ElementTree API, 간단하고 가벼운 XML 프로세서"

#: ../../library/xml.rst:40
msgid ":mod:`xml.dom`: the DOM API definition"
msgstr ":mod:`xml.dom`: DOM API 정의"

#: ../../library/xml.rst:41
msgid ":mod:`xml.dom.minidom`: a minimal DOM implementation"
msgstr ":mod:`xml.dom.minidom`: 최소 DOM 구현"

#: ../../library/xml.rst:42
msgid ":mod:`xml.dom.pulldom`: support for building partial DOM trees"
msgstr ":mod:`xml.dom.pulldom`: 부분 DOM 트리 구축 지원"

#: ../../library/xml.rst:46
msgid ":mod:`xml.sax`: SAX2 base classes and convenience functions"
msgstr ":mod:`xml.sax`: SAX2 베이스 클래스와 편리 함수"

#: ../../library/xml.rst:47
msgid ":mod:`xml.parsers.expat`: the Expat parser binding"
msgstr ":mod:`xml.parsers.expat`: Expat 구문 분석기 바인딩"

#: ../../library/xml.rst:53
msgid "XML vulnerabilities"
msgstr "XML 취약점"

#: ../../library/xml.rst:55
msgid ""
"The XML processing modules are not secure against maliciously constructed"
" data. An attacker can abuse XML features to carry out denial of service "
"attacks, access local files, generate network connections to other "
"machines, or circumvent firewalls."
msgstr ""
"XML 처리 모듈은 악의적으로 구성된 데이터로부터 안전하지 않습니다. 공격자는 XML 기능을 악용하여 서비스 거부 공격을 "
"수행하거나, 로컬 파일에 액세스하거나, 다른 기계로 네트워크 연결을 만들거나, 방화벽을 우회할 수 있습니다."

#: ../../library/xml.rst:60
msgid ""
"The following table gives an overview of the known attacks and whether "
"the various modules are vulnerable to them."
msgstr "다음 표는 알려진 공격의 개요와 다양한 모듈이 취약한지를 보여줍니다."

#: ../../library/xml.rst:64
msgid "kind"
msgstr "종류"

#: ../../library/xml.rst:64
msgid "sax"
msgstr "sax"

#: ../../library/xml.rst:64
msgid "etree"
msgstr "etree"

#: ../../library/xml.rst:64
msgid "minidom"
msgstr "minidom"

#: ../../library/xml.rst:64
msgid "pulldom"
msgstr "pulldom"

#: ../../library/xml.rst:64
msgid "xmlrpc"
msgstr "xmlrpc"

#: ../../library/xml.rst:66
msgid "billion laughs"
msgstr "billion laughs(억만 웃음)"

#: ../../library/xml.rst:66 ../../library/xml.rst:67
msgid "**Vulnerable** (1)"
msgstr "**취약** (1)"

#: ../../library/xml.rst:67
msgid "quadratic blowup"
msgstr "quadratic blowup(이차 폭발)"

#: ../../library/xml.rst:68 ../../library/xml.rst:106
msgid "external entity expansion"
msgstr "external entity expansion(외부 엔티티 확장)"

#: ../../library/xml.rst:68 ../../library/xml.rst:69
msgid "Safe (5)"
msgstr "안전 (5)"

#: ../../library/xml.rst:68
msgid "Safe (2)"
msgstr "안전 (2)"

#: ../../library/xml.rst:68
msgid "Safe (3)"
msgstr "안전 (3)"

#: ../../library/xml.rst:68
msgid "Safe (4)"
msgstr "안전 (4)"

#: ../../library/xml.rst:69 ../../library/xml.rst:111
msgid "`DTD`_ retrieval"
msgstr "`DTD`_ retrieval(DTD 조회)"

#: ../../library/xml.rst:69 ../../library/xml.rst:70
msgid "Safe"
msgstr "안전"

#: ../../library/xml.rst:70 ../../library/xml.rst:116
msgid "decompression bomb"
msgstr "decompression bomb(압축해제 폭탄)"

#: ../../library/xml.rst:70
msgid "**Vulnerable**"
msgstr "**취약**"

#: ../../library/xml.rst:71 ../../library/xml.rst:123
msgid "large tokens"
msgstr "large tokens(대형 토큰)"

#: ../../library/xml.rst:71
msgid "**Vulnerable** (6)"
msgstr "**취약** (6)"

#: ../../library/xml.rst:74
msgid ""
"Expat 2.4.1 and newer is not vulnerable to the \"billion laughs\" and "
"\"quadratic blowup\" vulnerabilities. Items still listed as vulnerable "
"due to potential reliance on system-provided libraries. Check "
":const:`!pyexpat.EXPAT_VERSION`."
msgstr ""

#: ../../library/xml.rst:78
msgid ""
":mod:`xml.etree.ElementTree` doesn't expand external entities and raises "
"a :exc:`~xml.etree.ElementTree.ParseError` when an entity occurs."
msgstr ""
":mod:`xml.etree.ElementTree`\\는 외부 엔티티를 확장하지 않고 엔티티가 있으면 "
":exc:`~xml.etree.ElementTree.ParserError`\\를 발생시킵니다."

#: ../../library/xml.rst:80
msgid ""
":mod:`xml.dom.minidom` doesn't expand external entities and simply "
"returns the unexpanded entity verbatim."
msgstr ":mod:`xml.dom.minidom`\\은 외부 엔티티를 확장하지 않고 확장되지 않은 엔티티를 그대로 반환합니다."

#: ../../library/xml.rst:82
msgid ":mod:`xmlrpc.client` doesn't expand external entities and omits them."
msgstr ":mod:`xmlrpc.client`\\는 외부 엔티티를 확장하지 않고 생략합니다."

#: ../../library/xml.rst:83
msgid ""
"Since Python 3.7.1, external general entities are no longer processed by "
"default."
msgstr "파이썬 3.7.1부터, 외부 일반 엔티티는 더는 기본적으로 처리되지 않습니다."

#: ../../library/xml.rst:85
msgid ""
"Expat 2.6.0 and newer is not vulnerable to denial of service through "
"quadratic runtime caused by parsing large tokens. Items still listed as "
"vulnerable due to potential reliance on system-provided libraries. Check "
":const:`!pyexpat.EXPAT_VERSION`."
msgstr ""

#: ../../library/xml.rst:92
msgid "billion laughs / exponential entity expansion"
msgstr "billion laughs(억만 웃음) / exponential entity expansion(지수적 엔티티 확장)"

#: ../../library/xml.rst:93
msgid ""
"The `Billion Laughs`_ attack -- also known as exponential entity "
"expansion -- uses multiple levels of nested entities. Each entity refers "
"to another entity several times, and the final entity definition contains"
" a small string. The exponential expansion results in several gigabytes "
"of text and consumes lots of memory and CPU time."
msgstr ""
"지수적 엔티티 확장으로도 알려진, `Billion Laughs`_ 공격은 여러 수준의 중첩된 엔티티를 사용합니다. 각 엔티티는 다른"
" 엔티티를 여러 번 참조하며, 최종 엔티티 정의에는 작은 문자열이 포함됩니다. 지수적인 확장으로 수 기가바이트의 텍스트가 생성되고 "
"많은 메모리와 CPU 시간이 소모됩니다."

#: ../../library/xml.rst:99
msgid "quadratic blowup entity expansion"
msgstr "quadratic blowup entity expansion(이차 폭발 엔티티 확장)"

#: ../../library/xml.rst:100
msgid ""
"A quadratic blowup attack is similar to a `Billion Laughs`_ attack; it "
"abuses entity expansion, too. Instead of nested entities it repeats one "
"large entity with a couple of thousand chars over and over again. The "
"attack isn't as efficient as the exponential case but it avoids "
"triggering parser countermeasures that forbid deeply nested entities."
msgstr ""
"이차 폭발 공격은 `Billion Laughs`_ 공격과 유사합니다; 이 역시 엔티티 확장을 남용합니다. 중첩된 엔티티 대신 2천 "
"개 이상의 문자를 갖는 커다란 엔티티 하나를 계속 반복합니다. 공격은 지수적인 경우만큼 효율적이지 않지만 깊이 중첩된 엔티티를 "
"금지하는 구문 분석기 대응책을 우회합니다."

#: ../../library/xml.rst:107
msgid ""
"Entity declarations can contain more than just text for replacement. They"
" can also point to external resources or local files. The XML parser "
"accesses the resource and embeds the content into the XML document."
msgstr ""
"엔티티 선언은 대체 텍스트 이상의 것을 포함할 수 있습니다. 외부 자원이나 지역 파일을 가리킬 수도 있습니다. XML 구문 분석기는"
" 자원에 액세스하고 그 내용을 XML 문서에 포함합니다."

#: ../../library/xml.rst:112
msgid ""
"Some XML libraries like Python's :mod:`xml.dom.pulldom` retrieve document"
" type definitions from remote or local locations. The feature has similar"
" implications as the external entity expansion issue."
msgstr ""
"파이썬의 :mod:`xml.dom.pulldom` 같은 일부 XML 라이브러리는 원격이나 지역 위치에서 문서 유형 정의(DTD)를 "
"조회합니다. 이 기능은 외부 엔티티 확장 문제와 비슷한 결과를 줍니다."

#: ../../library/xml.rst:117
msgid ""
"Decompression bombs (aka `ZIP bomb`_) apply to all XML libraries that can"
" parse compressed XML streams such as gzipped HTTP streams or LZMA-"
"compressed files. For an attacker it can reduce the amount of transmitted"
" data by three magnitudes or more."
msgstr ""
"압축 해제 폭탄(일명 `ZIP bomb`_)은 gzip 압축된 HTTP 스트림이나 LZMA 압축 파일과 같은, 압축된 XML "
"스트림을 구문 분석할 수 있는 모든 XML 라이브러리에 적용됩니다. 공격자는 전송된 데이터의 양을 3배 이상 줄일 수 있습니다."

#: ../../library/xml.rst:124
msgid ""
"Expat needs to re-parse unfinished tokens; without the protection "
"introduced in Expat 2.6.0, this can lead to quadratic runtime that can be"
" used to cause denial of service in the application parsing XML. The "
"issue is known as :cve:`2023-52425`."
msgstr ""

#: ../../library/xml.rst:129
msgid ""
"The documentation for :pypi:`defusedxml` on PyPI has further information "
"about all known attack vectors with examples and references."
msgstr "PyPI의 :pypi:`defusedxml` 설명서에는 모든 알려진 공격 벡터에 대한 추가 정보가 예제와 레퍼런스와 함께 제공됩니다."

#: ../../library/xml.rst:135
msgid "The :mod:`!defusedxml` Package"
msgstr ":mod:`!defusedxml` 패키지"

#: ../../library/xml.rst:137
msgid ""
":pypi:`defusedxml` is a pure Python package with modified subclasses of "
"all stdlib XML parsers that prevent any potentially malicious operation. "
"Use of this package is recommended for any server code that parses "
"untrusted XML data. The package also ships with example exploits and "
"extended documentation on more XML exploits such as XPath injection."
msgstr ""
":pypi:`defusedxml`\\은 순수한 파이썬 패키지인데, 모든 악의적인 조작을 방지하도록 수정된, 모든 표준 라이브러리 "
"XML 구문 분석기의 서브 클래스를 제공합니다. 신뢰할 수 없는 XML 데이터를 구문 분석하는 서버 코드에는 이 패키지를 사용하는 "
"것이 좋습니다. 이 패키지에는 XPath 주입과 같은 XML 공격(exploit)에 대한 예제 공격과 확장된 설명서가 함께 "
"제공됩니다."


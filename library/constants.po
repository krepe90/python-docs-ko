# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/constants.rst:4
msgid "Built-in Constants"
msgstr "내장 상수"

#: ../../library/constants.rst:6
msgid "A small number of constants live in the built-in namespace.  They are:"
msgstr "작은 개수의 상수가 내장 이름 공간에 있습니다. 그것들은:"

#: ../../library/constants.rst:10
msgid ""
"The false value of the :class:`bool` type. Assignments to ``False`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ":class:`bool` 형의 거짓 값. ``False`` 에 대입할 수 없고 :exc:`SyntaxError` 를 일으킵니다."

#: ../../library/constants.rst:16
msgid ""
"The true value of the :class:`bool` type. Assignments to ``True`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ":class:`bool` 형의 참값. ``True`` 에 대입할 수 없고 :exc:`SyntaxError` 를 일으킵니다."

#: ../../library/constants.rst:22
msgid ""
"An object frequently used to represent the absence of a value, as when "
"default arguments are not passed to a function. Assignments to ``None`` "
"are illegal and raise a :exc:`SyntaxError`. ``None`` is the sole instance"
" of the :data:`~types.NoneType` type."
msgstr ""
"기본 인자가 함수에 전달되지 않을 때처럼, 값의 부재를 나타내는 데 자주 사용되는 객체. ``None`` 으로의 대입은 허락되지 "
"않고 :exc:`SyntaxError` 를 일으킵니다. ``None``\\은 :data:`~types.NoneType` 형의 유일한"
" 인스턴스입니다."

#: ../../library/constants.rst:30
msgid ""
"A special value which should be returned by the binary special methods "
"(e.g. :meth:`~object.__eq__`, :meth:`~object.__lt__`, "
":meth:`~object.__add__`, :meth:`~object.__rsub__`, etc.) to indicate that"
" the operation is not implemented with respect to the other type; may be "
"returned by the in-place binary special methods (e.g. "
":meth:`~object.__imul__`, :meth:`~object.__iand__`, etc.) for the same "
"purpose. It should not be evaluated in a boolean context. "
":data:`!NotImplemented` is the sole instance of the "
":data:`types.NotImplementedType` type."
msgstr ""
"연산이 다른 형에 대해 구현되지 않았음을 나타내기 위해, 이 항 특수 메서드(예를 들어, :meth:`~object.__eq__`,"
" :meth:`~object.__lt__`, :meth:`~object.__add__`, "
":meth:`~object.__rsub__` 등)가 돌려줘야 하는 특별한 값; 같은 목적으로 증분 이 항 특수 메서드(예를 들어, "
":meth:`~object.__imul__`, :meth:`~object.__iand__` 등)가 반환할 수 있습니다. 불리언 "
"문맥에서 평가해서는 안됩니다. :data:`!NotImplemented`\\는 "
":data:`types.NotImplementedType` 형의 유일한 인스턴스입니다."

#: ../../library/constants.rst:40
msgid ""
"When a binary (or in-place) method returns :data:`!NotImplemented` the "
"interpreter will try the reflected operation on the other type (or some "
"other fallback, depending on the operator).  If all attempts return "
":data:`!NotImplemented`, the interpreter will raise an appropriate "
"exception. Incorrectly returning :data:`!NotImplemented` will result in a"
" misleading error message or the :data:`!NotImplemented` value being "
"returned to Python code."
msgstr ""
"이 항 (또는 증분) 메서드가 :data:`!NotImplemented` 를 반환하면 인터프리터는 다른 형(또는 연산자에 따라 다른"
" 폴백)에서 뒤집힌 연산을 시도합니다. 모든 시도가 :data:`!NotImplemented` 를 반환하면, 인터프리터는 적절한 "
"예외를 발생시킵니다. 부정확하게 :data:`!NotImplemented` 를 반환하면 오해의 소지가 있는 에러 메시지가 나오거나 "
"파이썬 코드에 :data:`!NotImplemented` 값이 반환됩니다."

#: ../../library/constants.rst:47
msgid "See :ref:`implementing-the-arithmetic-operations` for examples."
msgstr "예는 :ref:`implementing-the-arithmetic-operations`\\을 보세요."

#: ../../library/constants.rst:51
msgid ""
":data:`!NotImplemented` and :exc:`!NotImplementedError` are not "
"interchangeable. This constant should only be used as described above; "
"see :exc:`NotImplementedError` for details on correct usage of the "
"exception."
msgstr ""
"``NotImplementedError`` 와 ``NotImplemented`` 는 바꿔쓸 수 없습니다. 이 상수는 위에서 설명한 "
"대로만 사용해야 합니다; 이 예외의 올바른 사용법에 대한 자세한 내용은 :exc:`NotImplementedError`\\를 "
"참조하세요."

#: ../../library/constants.rst:56
msgid ""
"Evaluating :data:`!NotImplemented` in a boolean context is deprecated. "
"While it currently evaluates as true, it will emit a "
":exc:`DeprecationWarning`. It will raise a :exc:`TypeError` in a future "
"version of Python."
msgstr ""
"불리언 문맥에서 :data:`!NotImplemented`\\를 평가하는 것은 폐지되었습니다. 현재는 참으로 평가되지만, "
":exc:`DeprecationWarning`\\를 방출합니다. 향후 버전의 파이썬에서는 :exc:`TypeError`\\를 "
"발생시킬 것입니다."

#: ../../library/constants.rst:65
msgid ""
"The same as the ellipsis literal \"``...``\". Special value used mostly "
"in conjunction with extended slicing syntax for user-defined container "
"data types. ``Ellipsis`` is the sole instance of the "
":data:`types.EllipsisType` type."
msgstr ""
"줄임표 리터럴 \"``...``\" 와 같습니다. 주로 사용자 정의 컨테이너 데이터형에 대한 확장 슬라이스 문법과 함께 사용되는 "
"특수 값. ``Ellipsis``\\는 :data:`types.EllipsisType` 형의 유일한 인스턴스입니다."

#: ../../library/constants.rst:72
msgid ""
"This constant is true if Python was not started with an :option:`-O` "
"option. See also the :keyword:`assert` statement."
msgstr ""
"이 상수는 파이썬이 :option:`-O` 옵션으로 시작되지 않았다면 참이 됩니다. :keyword:`assert` 문도 볼 필요가"
" 있습니다."

#: ../../library/constants.rst:78
msgid ""
"The names :data:`None`, :data:`False`, :data:`True` and :data:`__debug__`"
" cannot be reassigned (assignments to them, even as an attribute name, "
"raise :exc:`SyntaxError`), so they can be considered \"true\" constants."
msgstr ""
":data:`None`, :data:`False`, :data:`True` 그리고 :data:`__debug__` 은 다시 대입할 "
"수 없습니다 (이것들을 대입하면, 설사 어트리뷰트 이름으로 사용해도, :exc:`SyntaxError` 를 일으킵니다). 그래서 "
"이것들은 \"진짜\" 상수로 간주 될 수 있습니다."

#: ../../library/constants.rst:86
msgid "Constants added by the :mod:`site` module"
msgstr ":mod:`site` 모듈에 의해 추가된 상수들"

#: ../../library/constants.rst:88
msgid ""
"The :mod:`site` module (which is imported automatically during startup, "
"except if the :option:`-S` command-line option is given) adds several "
"constants to the built-in namespace.  They are useful for the interactive"
" interpreter shell and should not be used in programs."
msgstr ""
":mod:`site` 모듈(:option:`-S` 명령행 옵션이 주어진 경우를 제외하고는, 시작할 때 자동으로 임포트 됩니다)은 "
"내장 이름 공간에 여러 상수를 추가합니다. 대화형 인터프리터 셸에 유용하고 프로그램에서 사용해서는 안 됩니다."

#: ../../library/constants.rst:96
msgid ""
"Objects that when printed, print a message like \"Use quit() or Ctrl-D "
"(i.e. EOF) to exit\", and when called, raise :exc:`SystemExit` with the "
"specified exit code."
msgstr ""
"인쇄될 때, \"Use quit() or Ctrl-D (i.e. EOF) to exit\"과 같은 메시지를 인쇄하고, 호출될 때, "
"지정된 종료 코드로 :exc:`SystemExit` 를 일으키는 객체."

#: ../../library/constants.rst:103
msgid ""
"Object that when printed, prints the message \"Type help() for "
"interactive help, or help(object) for help about object.\", and when "
"called, acts as described :func:`elsewhere <help>`."
msgstr ""

#: ../../library/constants.rst:110
msgid ""
"Objects that when printed or called, print the text of copyright or "
"credits, respectively."
msgstr "인쇄하거나 호출할 때, 각각 저작권 또는 크레딧 텍스트를 인쇄하는 객체입니다."

#: ../../library/constants.rst:115
msgid ""
"Object that when printed, prints the message \"Type license() to see the "
"full license text\", and when called, displays the full license text in a"
" pager-like fashion (one screen at a time)."
msgstr ""
"인쇄될 때 \"Type license() to see the full license text\"와 같은 메시지를 인쇄하고, 호출될 "
"때 전체 라이센스 텍스트를 페이지 생성기와 같은 방식(한 번에 한 화면씩)으로 표시하는 객체입니다."

#: ../../library/constants.rst:62
msgid "..."
msgstr "..."

#: ../../library/constants.rst:62
msgid "ellipsis literal"
msgstr "줄임표 리터럴"


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/pydoc.rst:2
#, fuzzy
msgid ":mod:`!pydoc` --- Documentation generator and online help system"
msgstr ":mod:`pydoc` --- 설명서 생성과 온라인 도움말 시스템"

#: ../../library/pydoc.rst:10
msgid "**Source code:** :source:`Lib/pydoc.py`"
msgstr "**소스 코드:** :source:`Lib/pydoc.py`"

#: ../../library/pydoc.rst:19
#, fuzzy
msgid ""
"The :mod:`!pydoc` module automatically generates documentation from "
"Python modules.  The documentation can be presented as pages of text on "
"the console, served to a web browser, or saved to HTML files."
msgstr ""
":mod:`pydoc` 모듈은 파이썬 모듈로부터 자동으로 설명서를 생성합니다. 설명서는 콘솔에 텍스트 페이지로 표시하거나, 웹 "
"브라우저로 제공하거나, HTML 파일에 저장할 수 있습니다."

#: ../../library/pydoc.rst:23
#, fuzzy
msgid ""
"For modules, classes, functions and methods, the displayed documentation "
"is derived from the docstring (i.e. the :attr:`~definition.__doc__` "
"attribute) of the object, and recursively of its documentable members.  "
"If there is no docstring, :mod:`!pydoc` tries to obtain a description "
"from the block of comment lines just above the definition of the class, "
"function or method in the source file, or at the top of the module (see "
":func:`inspect.getcomments`)."
msgstr ""
"모듈, 클래스, 함수 및 메서드의 경우, 표시된 설명서는 객체와 재귀적으로 그것의 설명 가능한 멤버들의 독스트링(즉, "
":attr:`__doc__` 어트리뷰트)에서 파생됩니다. 독스트링이 없으면, :mod:`pydoc`\\은 소스 파일의 클래스, 함수"
" 또는 메서드의 정의 바로 위나 모듈의 맨 위에 있는 주석 줄 블록에서 설명을 얻으려고 합니다 "
"(:func:`inspect.getcomments`\\를 참조하십시오)."

#: ../../library/pydoc.rst:30
#, fuzzy
msgid ""
"The built-in function :func:`help` invokes the online help system in the "
"interactive interpreter, which uses :mod:`!pydoc` to generate its "
"documentation as text on the console.  The same text documentation can "
"also be viewed from outside the Python interpreter by running "
":program:`pydoc` as a script at the operating system's command prompt. "
"For example, running ::"
msgstr ""
"내장 함수 :func:`help`\\는 대화형 인터프리터에서 온라인 도움말 시스템을 호출합니다. 이 시스템은 "
":mod:`pydoc`\\을 사용하여 설명서를 콘솔에 텍스트로 생성합니다. 같은 텍스트 설명서는 운영 체제의 명령 프롬프트에서 "
":program:`pydoc`\\을 스크립트로 실행하여 파이썬 인터프리터 외부에서도 볼 수 있습니다. 예를 들어, ::"

#: ../../library/pydoc.rst:36
msgid "python -m pydoc sys"
msgstr ""

#: ../../library/pydoc.rst:38
msgid ""
"at a shell prompt will display documentation on the :mod:`sys` module, in"
" a style similar to the manual pages shown by the Unix :program:`man` "
"command.  The argument to :program:`pydoc` can be the name of a function,"
" module, or package, or a dotted reference to a class, method, or "
"function within a module or module in a package.  If the argument to "
":program:`pydoc` looks like a path (that is, it contains the path "
"separator for your operating system, such as a slash in Unix), and refers"
" to an existing Python source file, then documentation is produced for "
"that file."
msgstr ""
"를 셸 프롬프트에서 실행하면, :mod:`sys` 모듈의 설명서를 유닉스 :program:`man` 명령으로 표시되는 매뉴얼 "
"페이지와 비슷한 스타일로 표시합니다. :program:`pydoc`\\의 인자는 함수, 모듈 또는 패키지의 이름이거나 모듈이나 "
"패키지의 모듈 내의 클래스, 메서드 또는 함수에 대한 점으로 구분된 참조일 수 있습니다. :program:`pydoc`\\에 대한 "
"인자가 경로처럼 보이고 (즉, 유닉스의 슬래시와 같이 운영 체제의 경로 구분 기호가 포함되어 있으면), 기존 파이썬 소스 파일을 "
"가리키면, 해당 파일에 대한 설명서가 생성됩니다."

#: ../../library/pydoc.rst:49
#, fuzzy
msgid ""
"In order to find objects and their documentation, :mod:`!pydoc` imports "
"the module(s) to be documented.  Therefore, any code on module level will"
" be executed on that occasion.  Use an ``if __name__ == '__main__':`` "
"guard to only execute code when a file is invoked as a script and not "
"just imported."
msgstr ""
"객체와 그들의 설명을 찾기 위해, :mod:`pydoc`\\은 설명할 모듈을 임포트 합니다. 따라서, 모듈 수준의 모든 코드는 이때"
" 실행됩니다. 파일이 임포트될 때가 아니라 스크립트로 호출할 때만 실행되도록 코드를 보호하려면 ``if __name__ == "
"'__main__':``\\를 사용하십시오."

#: ../../library/pydoc.rst:54
#, fuzzy
msgid ""
"When printing output to the console, :program:`pydoc` attempts to "
"paginate the output for easier reading.  If either the :envvar:`MANPAGER`"
" or the :envvar:`PAGER` environment variable is set, :program:`pydoc` "
"will use its value as a pagination program. When both are set, "
":envvar:`MANPAGER` is used."
msgstr ""
"출력을 콘솔에 인쇄할 때, :program:`pydoc`\\은 읽기 쉽도록 출력을 페이지로 나누려고 합니다. "
":envvar:`PAGER` 환경 변수가 설정되면, :program:`pydoc`\\은 그 값을 페이지 매김 프로그램으로 "
"사용합니다."

#: ../../library/pydoc.rst:59
msgid ""
"Specifying a ``-w`` flag before the argument will cause HTML "
"documentation to be written out to a file in the current directory, "
"instead of displaying text on the console."
msgstr "인자 앞에 ``-w`` 플래그를 지정하면 콘솔에 텍스트를 표시하는 대신, HTML 설명서가 현재 디렉터리에 파일로 기록됩니다."

#: ../../library/pydoc.rst:63
msgid ""
"Specifying a ``-k`` flag before the argument will search the synopsis "
"lines of all available modules for the keyword given as the argument, "
"again in a manner similar to the Unix :program:`man` command.  The "
"synopsis line of a module is the first line of its documentation string."
msgstr ""
"인자 앞에 ``-k`` 플래그를 지정하면 인자로 주어진 키워드에 대해 사용 가능한 모든 모듈의 개요 행을 검색할 수 있습니다. 역시"
" 유닉스 :program:`man` 명령과 유사한 방식입니다. 모듈의 개요 행은 설명서 문자열의 첫 행입니다."

#: ../../library/pydoc.rst:68
#, fuzzy
msgid ""
"You can also use :program:`pydoc` to start an HTTP server on the local "
"machine that will serve documentation to visiting web browsers.  "
":program:`python -m pydoc -p 1234` will start a HTTP server on port 1234,"
" allowing you to browse the documentation at ``http://localhost:1234/`` "
"in your preferred web browser. Specifying ``0`` as the port number will "
"select an arbitrary unused port."
msgstr ""
":program:`pydoc`\\을 사용하여 방문하는 웹 브라우저에 설명서를 제공하는 HTTP 서버를 로컬 시스템에서 시작할 수도 "
"있습니다. :program:`pydoc -p 1234`\\는 포트 1234에서 HTTP 서버를 시작해서, 여러분이 선호하는 웹 "
"브라우저에서 ``http://localhost:1234/``\\의 설명서를 볼 수 있도록 합니다. 포트 번호로 ``0``\\을 "
"지정하면 사용되지 않는 임의의 포트가 선택됩니다."

#: ../../library/pydoc.rst:74
#, fuzzy
msgid ""
":program:`python -m pydoc -n <hostname>` will start the server listening "
"at the given hostname.  By default the hostname is 'localhost' but if you"
" want the server to be reached from other machines, you may want to "
"change the host name that the server responds to.  During development "
"this is especially useful if you want to run pydoc from within a "
"container."
msgstr ""
":program:`pydoc -n <hostname>`\\은 주어진 호스트 이름에서 리스닝하는 서버를 시작합니다. 기본적으로 호스트"
" 이름은 'localhost' 이지만 다른 컴퓨터에서 서버에 도달하도록 하고 싶으면 서버가 응답하는 호스트 이름을 변경해야 할 수 "
"있습니다. 개발 중에 컨테이너 내에서 pydoc을 실행하려는 경우 특히 유용합니다."

#: ../../library/pydoc.rst:80
#, fuzzy
msgid ""
":program:`python -m pydoc -b` will start the server and additionally open"
" a web browser to a module index page.  Each served page has a navigation"
" bar at the top where you can *Get* help on an individual item, *Search* "
"all modules with a keyword in their synopsis line, and go to the *Module "
"index*, *Topics* and *Keywords* pages."
msgstr ""
":program:`pydoc -b`\\는 서버를 시작하고 모듈 색인 페이지로 웹 브라우저를 추가로 엽니다. 제공되는 각 페이지에는 "
"상단에 탐색 바가 있어, 개별 항목에 대한 도움말을 *조회(Get)*\\하고, 개요 행에 키워드가 있는 모든 모듈을 "
"*검색(Search)*\\하고, *모듈 색인(Module index)*, *주제(Topics)* 및 *키워드(Keywords)* "
"페이지로 이동할 수 있습니다."

#: ../../library/pydoc.rst:86
msgid ""
"When :program:`pydoc` generates documentation, it uses the current "
"environment and path to locate modules.  Thus, invoking :program:`pydoc "
"spam` documents precisely the version of the module you would get if you "
"started the Python interpreter and typed ``import spam``."
msgstr ""
":program:`pydoc`\\이 설명서를 생성할 때, 현재 환경과 경로를 사용하여 모듈을 찾습니다. 따라서, "
":program:`pydoc spam`\\을 호출하면 정확히 파이썬 인터프리터를 시작하고 ``import spam``\\을 입력할 "
"때 얻는 모듈의 버전을 설명합니다."

#: ../../library/pydoc.rst:91
#, fuzzy
msgid ""
"Module docs for core modules are assumed to reside in "
"``https://docs.python.org/X.Y/library/`` where ``X`` and ``Y`` are the "
"major and minor version numbers of the Python interpreter.  This can be "
"overridden by setting the :envvar:`!PYTHONDOCS` environment variable to a"
" different URL or to a local directory containing the Library Reference "
"Manual pages."
msgstr ""
"코어 모듈에 대한 모듈 설명은 ``https://docs.python.org/X.Y/library/``\\에 있다고 가정합니다. "
"여기서 ``X``\\와 ``Y``\\는 파이썬 인터프리터의 주 버전 번호와 부 버전 번호입니다. 이는 "
":envvar:`PYTHONDOCS` 환경 변수를 다른 URL로 설정하거나 라이브러리 레퍼런스 매뉴얼 페이지가 있는 로컬 디렉터리로"
" 설정하여 재정의할 수 있습니다."

#: ../../library/pydoc.rst:98
msgid "Added the ``-b`` option."
msgstr "``-b`` 옵션이 추가되었습니다."

#: ../../library/pydoc.rst:101
msgid "The ``-g`` command line option was removed."
msgstr "``-g`` 명령 줄 옵션이 제거되었습니다."

#: ../../library/pydoc.rst:104
#, fuzzy
msgid ""
":mod:`!pydoc` now uses :func:`inspect.signature` rather than "
":func:`inspect.getfullargspec` to extract signature information from "
"callables."
msgstr ""
"이제 :mod:`pydoc`\\은 :func:`inspect.getfullargspec` 대신 "
":func:`inspect.signature`\\를 사용하여 콜러블에서 서명 정보를 추출합니다."

#: ../../library/pydoc.rst:109
msgid "Added the ``-n`` option."
msgstr "``-n`` 옵션이 추가되었습니다."

#: ../../library/pydoc.rst:12
msgid "documentation"
msgstr ""

#: ../../library/pydoc.rst:12
msgid "generation"
msgstr ""

#: ../../library/pydoc.rst:12
msgid "online"
msgstr ""

#: ../../library/pydoc.rst:12
msgid "help"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/pprint.rst:2
msgid ":mod:`!pprint` --- Data pretty printer"
msgstr ":mod:`!pprint` --- 예쁜 데이터 인쇄기"

#: ../../library/pprint.rst:10
msgid "**Source code:** :source:`Lib/pprint.py`"
msgstr "**소스 코드:** :source:`Lib/pprint.py`"

#: ../../library/pprint.rst:14
msgid ""
"The :mod:`pprint` module provides a capability to \"pretty-print\" "
"arbitrary Python data structures in a form which can be used as input to "
"the interpreter. If the formatted structures include objects which are "
"not fundamental Python types, the representation may not be loadable.  "
"This may be the case if objects such as files, sockets or classes are "
"included, as well as many other objects which are not representable as "
"Python literals."
msgstr ""
":mod:`pprint` 모듈은 임의의 파이썬 데이터 구조를 인터프리터의 입력으로 사용할 수 있는 형태로 \"예쁘게 인쇄\"할 수 "
"있는 기능을 제공합니다. 포맷된 구조에 기본 파이썬 형이 아닌 객체가 포함되면, 표현은 로드되지 않을 수 있습니다. 파일, 소켓 "
"또는 클래스와 같은 객체뿐만 아니라 파이썬 리터럴로 표현할 수 없는 다른 많은 객체가 포함된 경우입니다."

#: ../../library/pprint.rst:21
msgid ""
"The formatted representation keeps objects on a single line if it can, "
"and breaks them onto multiple lines if they don't fit within the allowed "
"width, adjustable by the *width* parameter defaulting to 80 characters."
msgstr ""
"포맷된 표현은 할 수 있다면 객체를 한 줄에 유지하고, 허용된 너비에 맞지 않으면 여러 줄로 나눕니다. 허용된 너비는 *width*"
" 매개 변수로 조정할 수 있고, 기본 값은 80 자 입니다."

#: ../../library/pprint.rst:25
msgid "Dictionaries are sorted by key before the display is computed."
msgstr "딕셔너리는 디스플레이를 계산하기 전에 키로 정렬됩니다."

#: ../../library/pprint.rst:27
msgid "Added support for pretty-printing :class:`types.SimpleNamespace`."
msgstr ":class:`types.SimpleNamespace`\\를 예쁘게 인쇄하는 지원이 추가되었습니다."

#: ../../library/pprint.rst:30
msgid "Added support for pretty-printing :class:`dataclasses.dataclass`."
msgstr ":class:`dataclasses.dataclass`\\를 예쁘게 인쇄하는 지원이 추가되었습니다."

#: ../../library/pprint.rst:36
msgid "Functions"
msgstr "함수"

#: ../../library/pprint.rst:41
msgid ""
"Prints the formatted representation of *object*, followed by a newline. "
"This function may be used in the interactive interpreter instead of the "
":func:`print` function for inspecting values. Tip: you can reassign "
"``print = pprint.pp`` for use within a scope."
msgstr ""
"*object*\\의 포맷된 표현에 줄 바꿈을 추가해서 인쇄합니다. 이 함수는 :func:`print` 함수 대신 대화형 "
"인터프리터에서 값을 검사하는 데 사용할 수 있습니다. 팁: 스코프 내에서 사용하기 위해 ``print = pprint.pp``\\를"
" 다시 대입할 수도 있습니다."

#: ../../library/pprint.rst
msgid "Parameters"
msgstr "매개 변수"

#: ../../library/pprint.rst:46
msgid "The object to be printed."
msgstr ""

#: ../../library/pprint.rst:49
msgid ""
"A file-like object to which the output will be written by calling its "
":meth:`!write` method. If ``None`` (the default), :data:`sys.stdout` is "
"used."
msgstr ""

#: ../../library/pprint.rst:55
msgid "The amount of indentation added for each nesting level."
msgstr "각 중첩 수준에 대해 추가되는 들여쓰기 양."

#: ../../library/pprint.rst:58
msgid ""
"The desired maximum number of characters per line in the output. If a "
"structure cannot be formatted within the width constraint, a best effort "
"will be made."
msgstr ""

#: ../../library/pprint.rst:63
msgid ""
"The number of nesting levels which may be printed. If the data structure "
"being printed is too deep, the next contained level is replaced by "
"``...``. If ``None`` (the default), there is no constraint on the depth "
"of the objects being formatted."
msgstr ""

#: ../../library/pprint.rst:71
msgid ""
"Control the way long :term:`sequences <sequence>` are formatted. If "
"``False`` (the default), each item of a sequence will be formatted on a "
"separate line, otherwise as many items as will fit within the *width* "
"will be formatted on each output line."
msgstr ""

#: ../../library/pprint.rst:78
msgid ""
"If ``True``, dictionaries will be formatted with their keys sorted, "
"otherwise they will be displayed in insertion order (the default)."
msgstr ""

#: ../../library/pprint.rst:83
msgid ""
"If ``True``, integers will be formatted with the ``_`` character for a "
"thousands separator, otherwise underscores are not displayed (the "
"default)."
msgstr ""

#: ../../library/pprint.rst:105
msgid ""
"Alias for :func:`~pprint.pp` with *sort_dicts* set to ``True`` by "
"default, which would automatically sort the dictionaries' keys, you might"
" want to use :func:`~pprint.pp` instead where it is ``False`` by default."
msgstr ""

#: ../../library/pprint.rst:113
msgid ""
"Return the formatted representation of *object* as a string.  *indent*, "
"*width*, *depth*, *compact*, *sort_dicts* and *underscore_numbers* are "
"passed to the :class:`PrettyPrinter` constructor as formatting parameters"
" and their meanings are as described in the documentation above."
msgstr ""
"*object*\\의 포맷된 표현을 문자열로 반환합니다. *indent*, *width*, *depth*, *compact*, "
"*sort_dicts* 및 *underscore_numbers*\\는 포매팅 매개 변수로 :class:`PrettyPrinter` "
"생성자에 전달되고, 그 의미는 위 설명서에서 기술된 대입니다."

#: ../../library/pprint.rst:123
msgid ""
"Determine if the formatted representation of *object* is \"readable\", or"
" can be used to reconstruct the value using :func:`eval`.  This always "
"returns ``False`` for recursive objects."
msgstr ""
"*object*\\의 포맷된 표현이 \"읽을 수 있는\"지, 즉 :func:`eval`\\을 사용하여 값을 재구성하는 데 사용할 수"
" 있는지 판단합니다. 재귀적 객체에 대해서는 항상 ``False``\\를 반환합니다."

#: ../../library/pprint.rst:133
msgid ""
"Determine if *object* requires a recursive representation.  This function"
" is subject to the same limitations as noted in :func:`saferepr` below "
"and may raise an :exc:`RecursionError` if it fails to detect a recursive "
"object."
msgstr ""

#: ../../library/pprint.rst:140
msgid ""
"Return a string representation of *object*, protected against recursion "
"in some common data structures, namely instances of :class:`dict`, "
":class:`list` and :class:`tuple` or subclasses whose ``__repr__`` has not"
" been overridden.  If the representation of object exposes a recursive "
"entry, the recursive reference will be represented as ``<Recursion on "
"typename with id=number>``.  The representation is not otherwise "
"formatted."
msgstr ""
"일부 일반적인 자료 구조(:class:`dict`, :class:`list`, :class:`tuple` 과 "
"``__repr__``\\이 재정의되지 않은 서브클래스의 인스턴스)에서의 재귀에 대해 보호되는, *object*\\의 문자열 표현을"
" 반환합니다. 객체의 표현이 재귀적 항목을 노출하면, 재귀적 참조는 ``<Recursion on typename with "
"id=number>``\\로 표시됩니다. 표현에는 이외의 다른 포매팅이 적용되지 않습니다."

#: ../../library/pprint.rst:153
msgid "PrettyPrinter Objects"
msgstr "PrettyPrinter 객체"

#: ../../library/pprint.rst:160
msgid "Construct a :class:`PrettyPrinter` instance."
msgstr ":class:`PrettyPrinter` 인스턴스를 만듭니다."

#: ../../library/pprint.rst:162
msgid ""
"Arguments have the same meaning as for :func:`~pprint.pp`. Note that they"
" are in a different order, and that *sort_dicts* defaults to ``True``."
msgstr ""

#: ../../library/pprint.rst:189
msgid "Added the *compact* parameter."
msgstr "*compact* 매개 변수가 추가되었습니다."

#: ../../library/pprint.rst:192
msgid "Added the *sort_dicts* parameter."
msgstr "*sort_dicts* 매개 변수가 추가되었습니다."

#: ../../library/pprint.rst:195
msgid "Added the *underscore_numbers* parameter."
msgstr "*underscore_numbers* 매개 변수가 추가되었습니다."

#: ../../library/pprint.rst:198
msgid "No longer attempts to write to :data:`!sys.stdout` if it is ``None``."
msgstr ""

#: ../../library/pprint.rst:202
msgid ":class:`PrettyPrinter` instances have the following methods:"
msgstr ":class:`PrettyPrinter` 인스턴스에는 다음과 같은 메서드가 있습니다:"

#: ../../library/pprint.rst:207
msgid ""
"Return the formatted representation of *object*.  This takes into account"
" the options passed to the :class:`PrettyPrinter` constructor."
msgstr "*object*\\의 포맷된 표현을 반환합니다. :class:`PrettyPrinter` 생성자에 전달된 옵션을 고려합니다."

#: ../../library/pprint.rst:213
msgid ""
"Print the formatted representation of *object* on the configured stream, "
"followed by a newline."
msgstr "구성된 스트림에 *object*\\의 포맷된 표현과 불 넘김을 인쇄합니다."

#: ../../library/pprint.rst:216
msgid ""
"The following methods provide the implementations for the corresponding "
"functions of the same names.  Using these methods on an instance is "
"slightly more efficient since new :class:`PrettyPrinter` objects don't "
"need to be created."
msgstr ""
"다음 메서드는 같은 이름의 해당 함수에 대한 구현을 제공합니다. 새로운 :class:`PrettyPrinter` 객체를 만들 필요가"
" 없으므로, 인스턴스에서 이러한 메서드를 사용하는 것이 약간 더 효율적입니다."

#: ../../library/pprint.rst:226
msgid ""
"Determine if the formatted representation of the object is \"readable,\" "
"or can be used to reconstruct the value using :func:`eval`.  Note that "
"this returns ``False`` for recursive objects.  If the *depth* parameter "
"of the :class:`PrettyPrinter` is set and the object is deeper than "
"allowed, this returns ``False``."
msgstr ""
"object의 포맷된 표현이 \"읽을 수 있는\"지, 즉 :func:`eval`\\을 사용하여 값을 재구성하는 데 사용할 수 있는지"
" 판단합니다. 재귀 객체에 대해 ``False``\\를 반환함에 유의하십시오. :class:`PrettyPrinter`\\의 "
"*depth* 매개 변수가 설정되고 객체가 허용된 것보다 더 깊으면, ``False``\\를 반환합니다."

#: ../../library/pprint.rst:235
msgid "Determine if the object requires a recursive representation."
msgstr "object가 재귀적 표현을 요구하는지 판단합니다."

#: ../../library/pprint.rst:237
msgid ""
"This method is provided as a hook to allow subclasses to modify the way "
"objects are converted to strings.  The default implementation uses the "
"internals of the :func:`saferepr` implementation."
msgstr ""
"이 메서드는 서브 클래스가 객체가 문자열로 변환되는 방식을 수정할 수 있도록 하는 훅으로 제공됩니다. 기본 구현은 "
":func:`saferepr` 구현의 내부를 사용합니다."

#: ../../library/pprint.rst:244
msgid ""
"Returns three values: the formatted version of *object* as a string, a "
"flag indicating whether the result is readable, and a flag indicating "
"whether recursion was detected.  The first argument is the object to be "
"presented.  The second is a dictionary which contains the :func:`id` of "
"objects that are part of the current presentation context (direct and "
"indirect containers for *object* that are affecting the presentation) as "
"the keys; if an object needs to be presented which is already represented"
" in *context*, the third return value should be ``True``.  Recursive "
"calls to the :meth:`.format` method should add additional entries for "
"containers to this dictionary.  The third argument, *maxlevels*, gives "
"the requested limit to recursion; this will be ``0`` if there is no "
"requested limit.  This argument should be passed unmodified to recursive "
"calls. The fourth argument, *level*, gives the current level; recursive "
"calls should be passed a value less than that of the current call."
msgstr ""
"세 가지 값을 반환합니다: 포맷된 버전의 *object*\\를 문자열로, 결과가 읽을 수 있는지를 나타내는 플래그와 재귀가 "
"감지되었는지를 나타내는 플래그. 첫 번째 인자는 표시할 객체입니다. 두 번째는 현재 표현 컨텍스트(표현에 영향을 주는 "
"*object*\\의 직접 및 간접 컨테이너)의 일부인 객체의 :func:`id`\\를 키로 포함하는 딕셔너리입니다; 이미 "
"*context*\\에 표현된 객체가 표현되어야 할 필요가 있으면, 세 번째 반환 값은 ``True``\\이어야 합니다. "
":meth:`.format` 메서드에 대한 재귀 호출은 컨테이너에 대한 추가 항목을 이 딕셔너리에 추가해야 합니다. 세 번째 인자 "
"*maxlevels*\\는 재귀에 요청된 제한을 줍니다; 요청된 제한이 없으면 ``0``\\입니다. 이 인자는 재귀 호출에 수정되지"
" 않은 채 전달되어야 합니다. 네 번째 인자 *level*\\은 현재 수준을 제공합니다; 재귀 호출은 현재 호출보다 작은 값으로 "
"전달되어야 합니다."

#: ../../library/pprint.rst:262
msgid "Example"
msgstr "예제"

#: ../../library/pprint.rst:264
msgid ""
"To demonstrate several uses of the :func:`~pprint.pp` function and its "
"parameters, let's fetch information about a project from `PyPI "
"<https://pypi.org>`_::"
msgstr ""
":func:`~pprint.pp` 함수와 매개 변수의 여러 용도를 예시하기 위해, `PyPI "
"<https://pypi.org>`_\\에서 프로젝트에 대한 정보를 가져옵시다::"

#: ../../library/pprint.rst:267
msgid ""
">>> import json\n"
">>> import pprint\n"
">>> from urllib.request import urlopen\n"
">>> with urlopen('https://pypi.org/pypi/sampleproject/1.2.0/json') as "
"resp:\n"
"...     project_info = json.load(resp)['info']"
msgstr ""
">>> import json\n"
">>> import pprint\n"
">>> from urllib.request import urlopen\n"
">>> with urlopen('https://pypi.org/pypi/sampleproject/1.2.0/json') as "
"resp:\n"
"...     project_info = json.load(resp)['info']"

#: ../../library/pprint.rst:273
msgid "In its basic form, :func:`~pprint.pp` shows the whole object::"
msgstr "기본적인 형태에서, :func:`~pprint.pp`\\는 전체 객체를 보여줍니다::"

#: ../../library/pprint.rst:275
#, python-brace-format
msgid ""
">>> pprint.pp(project_info)\n"
"{'author': 'The Python Packaging Authority',\n"
" 'author_email': 'pypa-dev@googlegroups.com',\n"
" 'bugtrack_url': None,\n"
" 'classifiers': ['Development Status :: 3 - Alpha',\n"
"                 'Intended Audience :: Developers',\n"
"                 'License :: OSI Approved :: MIT License',\n"
"                 'Programming Language :: Python :: 2',\n"
"                 'Programming Language :: Python :: 2.6',\n"
"                 'Programming Language :: Python :: 2.7',\n"
"                 'Programming Language :: Python :: 3',\n"
"                 'Programming Language :: Python :: 3.2',\n"
"                 'Programming Language :: Python :: 3.3',\n"
"                 'Programming Language :: Python :: 3.4',\n"
"                 'Topic :: Software Development :: Build Tools'],\n"
" 'description': 'A sample Python project\\n'\n"
"                '=======================\\n'\n"
"                '\\n'\n"
"                'This is the description file for the project.\\n'\n"
"                '\\n'\n"
"                'The file should use UTF-8 encoding and be written using "
"'\n"
"                'ReStructured Text. It\\n'\n"
"                'will be used to generate the project webpage on PyPI, "
"and '\n"
"                'should be written for\\n'\n"
"                'that purpose.\\n'\n"
"                '\\n'\n"
"                'Typical contents for this file would include an overview"
" of '\n"
"                'the project, basic\\n'\n"
"                'usage examples, etc. Generally, including the project '\n"
"                'changelog in here is not\\n'\n"
"                'a good idea, although a simple \"What\\'s New\" section "
"for the '\n"
"                'most recent version\\n'\n"
"                'may be appropriate.',\n"
" 'description_content_type': None,\n"
" 'docs_url': None,\n"
" 'download_url': 'UNKNOWN',\n"
" 'downloads': {'last_day': -1, 'last_month': -1, 'last_week': -1},\n"
" 'home_page': 'https://github.com/pypa/sampleproject',\n"
" 'keywords': 'sample setuptools development',\n"
" 'license': 'MIT',\n"
" 'maintainer': None,\n"
" 'maintainer_email': None,\n"
" 'name': 'sampleproject',\n"
" 'package_url': 'https://pypi.org/project/sampleproject/',\n"
" 'platform': 'UNKNOWN',\n"
" 'project_url': 'https://pypi.org/project/sampleproject/',\n"
" 'project_urls': {'Download': 'UNKNOWN',\n"
"                  'Homepage': 'https://github.com/pypa/sampleproject'},\n"
" 'release_url': 'https://pypi.org/project/sampleproject/1.2.0/',\n"
" 'requires_dist': None,\n"
" 'requires_python': None,\n"
" 'summary': 'A sample Python project',\n"
" 'version': '1.2.0'}"
msgstr ""
">>> pprint.pp(project_info)\n"
"{'author': 'The Python Packaging Authority',\n"
" 'author_email': 'pypa-dev@googlegroups.com',\n"
" 'bugtrack_url': None,\n"
" 'classifiers': ['Development Status :: 3 - Alpha',\n"
"                 'Intended Audience :: Developers',\n"
"                 'License :: OSI Approved :: MIT License',\n"
"                 'Programming Language :: Python :: 2',\n"
"                 'Programming Language :: Python :: 2.6',\n"
"                 'Programming Language :: Python :: 2.7',\n"
"                 'Programming Language :: Python :: 3',\n"
"                 'Programming Language :: Python :: 3.2',\n"
"                 'Programming Language :: Python :: 3.3',\n"
"                 'Programming Language :: Python :: 3.4',\n"
"                 'Topic :: Software Development :: Build Tools'],\n"
" 'description': 'A sample Python project\\n'\n"
"                '=======================\\n'\n"
"                '\\n'\n"
"                'This is the description file for the project.\\n'\n"
"                '\\n'\n"
"                'The file should use UTF-8 encoding and be written using "
"'\n"
"                'ReStructured Text. It\\n'\n"
"                'will be used to generate the project webpage on PyPI, "
"and '\n"
"                'should be written for\\n'\n"
"                'that purpose.\\n'\n"
"                '\\n'\n"
"                'Typical contents for this file would include an overview"
" of '\n"
"                'the project, basic\\n'\n"
"                'usage examples, etc. Generally, including the project '\n"
"                'changelog in here is not\\n'\n"
"                'a good idea, although a simple \"What\\'s New\" section "
"for the '\n"
"                'most recent version\\n'\n"
"                'may be appropriate.',\n"
" 'description_content_type': None,\n"
" 'docs_url': None,\n"
" 'download_url': 'UNKNOWN',\n"
" 'downloads': {'last_day': -1, 'last_month': -1, 'last_week': -1},\n"
" 'home_page': 'https://github.com/pypa/sampleproject',\n"
" 'keywords': 'sample setuptools development',\n"
" 'license': 'MIT',\n"
" 'maintainer': None,\n"
" 'maintainer_email': None,\n"
" 'name': 'sampleproject',\n"
" 'package_url': 'https://pypi.org/project/sampleproject/',\n"
" 'platform': 'UNKNOWN',\n"
" 'project_url': 'https://pypi.org/project/sampleproject/',\n"
" 'project_urls': {'Download': 'UNKNOWN',\n"
"                  'Homepage': 'https://github.com/pypa/sampleproject'},\n"
" 'release_url': 'https://pypi.org/project/sampleproject/1.2.0/',\n"
" 'requires_dist': None,\n"
" 'requires_python': None,\n"
" 'summary': 'A sample Python project',\n"
" 'version': '1.2.0'}"

#: ../../library/pprint.rst:329
msgid ""
"The result can be limited to a certain *depth* (ellipsis is used for "
"deeper contents)::"
msgstr "결과는 특정 *depth*\\로 제한될 수 있습니다 (더 깊은 내용에는 줄임표가 사용됩니다)::"

#: ../../library/pprint.rst:332
#, python-brace-format
msgid ""
">>> pprint.pp(project_info, depth=1)\n"
"{'author': 'The Python Packaging Authority',\n"
" 'author_email': 'pypa-dev@googlegroups.com',\n"
" 'bugtrack_url': None,\n"
" 'classifiers': [...],\n"
" 'description': 'A sample Python project\\n'\n"
"                '=======================\\n'\n"
"                '\\n'\n"
"                'This is the description file for the project.\\n'\n"
"                '\\n'\n"
"                'The file should use UTF-8 encoding and be written using "
"'\n"
"                'ReStructured Text. It\\n'\n"
"                'will be used to generate the project webpage on PyPI, "
"and '\n"
"                'should be written for\\n'\n"
"                'that purpose.\\n'\n"
"                '\\n'\n"
"                'Typical contents for this file would include an overview"
" of '\n"
"                'the project, basic\\n'\n"
"                'usage examples, etc. Generally, including the project '\n"
"                'changelog in here is not\\n'\n"
"                'a good idea, although a simple \"What\\'s New\" section "
"for the '\n"
"                'most recent version\\n'\n"
"                'may be appropriate.',\n"
" 'description_content_type': None,\n"
" 'docs_url': None,\n"
" 'download_url': 'UNKNOWN',\n"
" 'downloads': {...},\n"
" 'home_page': 'https://github.com/pypa/sampleproject',\n"
" 'keywords': 'sample setuptools development',\n"
" 'license': 'MIT',\n"
" 'maintainer': None,\n"
" 'maintainer_email': None,\n"
" 'name': 'sampleproject',\n"
" 'package_url': 'https://pypi.org/project/sampleproject/',\n"
" 'platform': 'UNKNOWN',\n"
" 'project_url': 'https://pypi.org/project/sampleproject/',\n"
" 'project_urls': {...},\n"
" 'release_url': 'https://pypi.org/project/sampleproject/1.2.0/',\n"
" 'requires_dist': None,\n"
" 'requires_python': None,\n"
" 'summary': 'A sample Python project',\n"
" 'version': '1.2.0'}"
msgstr ""
">>> pprint.pp(project_info, depth=1)\n"
"{'author': 'The Python Packaging Authority',\n"
" 'author_email': 'pypa-dev@googlegroups.com',\n"
" 'bugtrack_url': None,\n"
" 'classifiers': [...],\n"
" 'description': 'A sample Python project\\n'\n"
"                '=======================\\n'\n"
"                '\\n'\n"
"                'This is the description file for the project.\\n'\n"
"                '\\n'\n"
"                'The file should use UTF-8 encoding and be written using "
"'\n"
"                'ReStructured Text. It\\n'\n"
"                'will be used to generate the project webpage on PyPI, "
"and '\n"
"                'should be written for\\n'\n"
"                'that purpose.\\n'\n"
"                '\\n'\n"
"                'Typical contents for this file would include an overview"
" of '\n"
"                'the project, basic\\n'\n"
"                'usage examples, etc. Generally, including the project '\n"
"                'changelog in here is not\\n'\n"
"                'a good idea, although a simple \"What\\'s New\" section "
"for the '\n"
"                'most recent version\\n'\n"
"                'may be appropriate.',\n"
" 'description_content_type': None,\n"
" 'docs_url': None,\n"
" 'download_url': 'UNKNOWN',\n"
" 'downloads': {...},\n"
" 'home_page': 'https://github.com/pypa/sampleproject',\n"
" 'keywords': 'sample setuptools development',\n"
" 'license': 'MIT',\n"
" 'maintainer': None,\n"
" 'maintainer_email': None,\n"
" 'name': 'sampleproject',\n"
" 'package_url': 'https://pypi.org/project/sampleproject/',\n"
" 'platform': 'UNKNOWN',\n"
" 'project_url': 'https://pypi.org/project/sampleproject/',\n"
" 'project_urls': {...},\n"
" 'release_url': 'https://pypi.org/project/sampleproject/1.2.0/',\n"
" 'requires_dist': None,\n"
" 'requires_python': None,\n"
" 'summary': 'A sample Python project',\n"
" 'version': '1.2.0'}"

#: ../../library/pprint.rst:375
msgid ""
"Additionally, maximum character *width* can be suggested. If a long "
"object cannot be split, the specified width will be exceeded::"
msgstr "또한, 최대 문자 *width*\\를 제안할 수 있습니다. 긴 객체를 분할 할 수 없으면, 지정된 너비를 초과합니다::"

#: ../../library/pprint.rst:378
#, python-brace-format
msgid ""
">>> pprint.pp(project_info, depth=1, width=60)\n"
"{'author': 'The Python Packaging Authority',\n"
" 'author_email': 'pypa-dev@googlegroups.com',\n"
" 'bugtrack_url': None,\n"
" 'classifiers': [...],\n"
" 'description': 'A sample Python project\\n'\n"
"                '=======================\\n'\n"
"                '\\n'\n"
"                'This is the description file for the '\n"
"                'project.\\n'\n"
"                '\\n'\n"
"                'The file should use UTF-8 encoding and be '\n"
"                'written using ReStructured Text. It\\n'\n"
"                'will be used to generate the project '\n"
"                'webpage on PyPI, and should be written '\n"
"                'for\\n'\n"
"                'that purpose.\\n'\n"
"                '\\n'\n"
"                'Typical contents for this file would '\n"
"                'include an overview of the project, '\n"
"                'basic\\n'\n"
"                'usage examples, etc. Generally, including '\n"
"                'the project changelog in here is not\\n'\n"
"                'a good idea, although a simple \"What\\'s '\n"
"                'New\" section for the most recent version\\n'\n"
"                'may be appropriate.',\n"
" 'description_content_type': None,\n"
" 'docs_url': None,\n"
" 'download_url': 'UNKNOWN',\n"
" 'downloads': {...},\n"
" 'home_page': 'https://github.com/pypa/sampleproject',\n"
" 'keywords': 'sample setuptools development',\n"
" 'license': 'MIT',\n"
" 'maintainer': None,\n"
" 'maintainer_email': None,\n"
" 'name': 'sampleproject',\n"
" 'package_url': 'https://pypi.org/project/sampleproject/',\n"
" 'platform': 'UNKNOWN',\n"
" 'project_url': 'https://pypi.org/project/sampleproject/',\n"
" 'project_urls': {...},\n"
" 'release_url': 'https://pypi.org/project/sampleproject/1.2.0/',\n"
" 'requires_dist': None,\n"
" 'requires_python': None,\n"
" 'summary': 'A sample Python project',\n"
" 'version': '1.2.0'}"
msgstr ""
">>> pprint.pp(project_info, depth=1, width=60)\n"
"{'author': 'The Python Packaging Authority',\n"
" 'author_email': 'pypa-dev@googlegroups.com',\n"
" 'bugtrack_url': None,\n"
" 'classifiers': [...],\n"
" 'description': 'A sample Python project\\n'\n"
"                '=======================\\n'\n"
"                '\\n'\n"
"                'This is the description file for the '\n"
"                'project.\\n'\n"
"                '\\n'\n"
"                'The file should use UTF-8 encoding and be '\n"
"                'written using ReStructured Text. It\\n'\n"
"                'will be used to generate the project '\n"
"                'webpage on PyPI, and should be written '\n"
"                'for\\n'\n"
"                'that purpose.\\n'\n"
"                '\\n'\n"
"                'Typical contents for this file would '\n"
"                'include an overview of the project, '\n"
"                'basic\\n'\n"
"                'usage examples, etc. Generally, including '\n"
"                'the project changelog in here is not\\n'\n"
"                'a good idea, although a simple \"What\\'s '\n"
"                'New\" section for the most recent version\\n'\n"
"                'may be appropriate.',\n"
" 'description_content_type': None,\n"
" 'docs_url': None,\n"
" 'download_url': 'UNKNOWN',\n"
" 'downloads': {...},\n"
" 'home_page': 'https://github.com/pypa/sampleproject',\n"
" 'keywords': 'sample setuptools development',\n"
" 'license': 'MIT',\n"
" 'maintainer': None,\n"
" 'maintainer_email': None,\n"
" 'name': 'sampleproject',\n"
" 'package_url': 'https://pypi.org/project/sampleproject/',\n"
" 'platform': 'UNKNOWN',\n"
" 'project_url': 'https://pypi.org/project/sampleproject/',\n"
" 'project_urls': {...},\n"
" 'release_url': 'https://pypi.org/project/sampleproject/1.2.0/',\n"
" 'requires_dist': None,\n"
" 'requires_python': None,\n"
" 'summary': 'A sample Python project',\n"
" 'version': '1.2.0'}"

#: ../../library/pprint.rst:121 ../../library/pprint.rst:224
msgid "built-in function"
msgstr "내장 함수"

#: ../../library/pprint.rst:121 ../../library/pprint.rst:224
msgid "eval"
msgstr "eval"

#: ../../library/pprint.rst:155
msgid "..."
msgstr "..."

#: ../../library/pprint.rst:155
msgid "placeholder"
msgstr "자리 표시자"

#~ msgid "The :mod:`pprint` module defines one class:"
#~ msgstr ":mod:`pprint` 모듈은 하나의 클래스를 정의합니다:"

#~ msgid ""
#~ "Construct a :class:`PrettyPrinter` instance.  "
#~ "This constructor understands several keyword"
#~ " parameters.  An output stream may be"
#~ " set using the *stream* keyword; the"
#~ " only method used on the stream "
#~ "object is the file protocol's "
#~ ":meth:`write` method.  If not specified, "
#~ "the :class:`PrettyPrinter` adopts ``sys.stdout``."
#~ "  The amount of indentation added for"
#~ " each recursive level is specified by"
#~ " *indent*; the default is one.  Other"
#~ " values can cause output to look "
#~ "a little odd, but can make nesting"
#~ " easier to spot.  The number of "
#~ "levels which may be printed is "
#~ "controlled by *depth*; if the data "
#~ "structure being printed is too deep, "
#~ "the next contained level is replaced "
#~ "by ``...``.  By default, there is "
#~ "no constraint on the depth of the"
#~ " objects being formatted.  The desired "
#~ "output width is constrained using the"
#~ " *width* parameter; the default is 80"
#~ " characters.  If a structure cannot "
#~ "be formatted within the constrained "
#~ "width, a best effort will be made."
#~ "  If *compact* is false (the default)"
#~ " each item of a long sequence "
#~ "will be formatted on a separate "
#~ "line.  If *compact* is true, as "
#~ "many items as will fit within the"
#~ " *width* will be formatted on each"
#~ " output line. If *sort_dicts* is true"
#~ " (the default), dictionaries will be "
#~ "formatted with their keys sorted, "
#~ "otherwise they will display in insertion"
#~ " order."
#~ msgstr ""
#~ ":class:`PrettyPrinter` 인스턴스를 만듭니다. 이 생성자는 "
#~ "여러 키워드 매개 변수를 인식합니다. 출력 스트림은 "
#~ "*stream* 키워드를 사용하여 설정할 수 있습니다; 스트림"
#~ " 객체에서 사용되는 유일한 메서드는 파일 프로토콜의 "
#~ ":meth:`write` 메서드입니다. 지정하지 않으면, "
#~ ":class:`PrettyPrinter`\\는 ``sys.stdout``\\을 사용합니다. 각"
#~ " 재귀 수준에 대해 들여쓰기하는 양은 *indent*\\로 "
#~ "지정합니다; 기본값은 1입니다. 다른 값은 출력이 약간 "
#~ "이상하게 보일 수 있지만, 중첩을 쉽게 알아낼 수"
#~ " 있습니다. 인쇄될 수 있는 수준의 수는 "
#~ "*depth*\\로 제어합니다; 인쇄 중인 데이터 구조가 너무"
#~ " 깊으면, 다음에 포함된 수준은 ``...``\\로 대체됩니다."
#~ " 기본적으로, 포맷되는 객체의 깊이에는 제한이 없습니다. "
#~ "원하는 출력 폭은 *width* 매개 변수를 사용하여 "
#~ "제한합니다; 기본값은 80자입니다. 제한된 너비 내에서 구조를"
#~ " 포맷할 수 없으면, 최선의 노력을 기울입니다. "
#~ "*compact*\\가 거짓(기본값)이면, 긴 시퀀스의 각 항목이 "
#~ "별도의 줄로 포맷됩니다. *compact*\\가 참이면 *width*"
#~ " 내에 들어갈 수 있는 최대한 많은 항목을 각"
#~ " 출력할 줄에 포맷합니다. *sort_dicts*\\가 참(기본값)이면,"
#~ " 딕셔너리는 키가 정렬되어 포맷합니다, 그렇지 않으면 "
#~ "삽입 순서로 표시됩니다."

#~ msgid "The :mod:`pprint` module also provides several shortcut functions:"
#~ msgstr ":mod:`pprint` 모듈은 몇 가지 단축 함수도 제공합니다:"

#~ msgid ""
#~ "Prints the formatted representation of "
#~ "*object* followed by a newline. If "
#~ "*sort_dicts* is false (the default), "
#~ "dictionaries will be displayed with "
#~ "their keys in insertion order, otherwise"
#~ " the dict keys will be sorted. "
#~ "*args* and *kwargs* will be passed "
#~ "to :func:`pprint` as formatting parameters."
#~ msgstr ""
#~ "*object*\\의 포맷된 표현을 인쇄하고 줄 넘김을 "
#~ "붙입니다. *sort_dicts*\\가 거짓(기본값)이면, 딕셔너리는 키가 "
#~ "삽입된 순서대로 표시됩니다, 그렇지 않으면 딕셔너리 키가"
#~ " 정렬됩니다. *args*\\와 *kwargs*\\는 포매팅 매개 "
#~ "변수로 :func:`pprint`\\로 전달됩니다."

#~ msgid "Determine if *object* requires a recursive representation."
#~ msgstr "*object*\\가 재귀적 표현을 요구하는지 판단합니다."

#~ msgid "One more support function is also defined:"
#~ msgstr "또 하나의 지원 함수가 정의됩니다:"


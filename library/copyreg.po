# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/copyreg.rst:2
#, fuzzy
msgid ":mod:`!copyreg` --- Register :mod:`!pickle` support functions"
msgstr ":mod:`copyreg` --- :mod:`pickle` 지원 함수 등록"

#: ../../library/copyreg.rst:7
msgid "**Source code:** :source:`Lib/copyreg.py`"
msgstr "**소스 코드:** :source:`Lib/copyreg.py`"

#: ../../library/copyreg.rst:15
msgid ""
"The :mod:`copyreg` module offers a way to define functions used while "
"pickling specific objects.  The :mod:`pickle` and :mod:`copy` modules use"
" those functions when pickling/copying those objects.  The module "
"provides configuration information about object constructors which are "
"not classes. Such constructors may be factory functions or class "
"instances."
msgstr ""
":mod:`copyreg` 모듈은 특정 객체를 피클 하는 동안 사용되는 함수를 정의하는 방법을 제공합니다. "
":mod:`pickle`\\과 :mod:`copy` 모듈은 해당 객체를 피클/복사할 때 이 함수를 사용합니다. 이 모듈은 클래스가 "
"아닌 객체 생성자에 대한 구성 정보를 제공합니다. 이러한 생성자는 팩토리 함수나 클래스 인스턴스일 수 있습니다."

#: ../../library/copyreg.rst:24
msgid ""
"Declares *object* to be a valid constructor.  If *object* is not callable"
" (and hence not valid as a constructor), raises :exc:`TypeError`."
msgstr ""
"*object*\\를 유효한 생성자로 선언합니다. *object*\\가 콜러블이 아니면 (따라서 생성자로 유효하지 않으면), "
":exc:`TypeError`\\가 발생합니다."

#: ../../library/copyreg.rst:30
#, fuzzy
msgid ""
"Declares that *function* should be used as a \"reduction\" function for "
"objects of type *type*.  *function* must return either a string or a "
"tuple containing between two and six elements. See the "
":attr:`~pickle.Pickler.dispatch_table` for more details on the interface "
"of *function*."
msgstr ""
"*function*\\이 *type* 형의 객체에 대한 \"환원\" 함수로 사용되어야 한다고 선언합니다. *function*\\는 "
"문자열이나 두 개 또는 세 개의 요소를 포함하는 튜플을 반환해야 합니다."

#: ../../library/copyreg.rst:35
msgid ""
"The *constructor_ob* parameter is a legacy feature and is now ignored, "
"but if passed it must be a callable."
msgstr ""

#: ../../library/copyreg.rst:38
#, fuzzy
msgid ""
"Note that the :attr:`~pickle.Pickler.dispatch_table` attribute of a "
"pickler object or subclass of :class:`pickle.Pickler` can also be used "
"for declaring reduction functions."
msgstr ""
"*function* 과 *constructor*\\에서 기대되는 인터페이스에 대한 자세한 내용은 :mod:`pickle` 모듈을 "
"참조하십시오. 피클러 객체나 :class:`pickle.Pickler`\\의 서브 클래스의 "
":attr:`~pickle.Pickler.dispatch_table` 어트리뷰트도 환원 함수를 선언하는 데 사용될 수 있습니다."

#: ../../library/copyreg.rst:43
msgid "Example"
msgstr "예제"

#: ../../library/copyreg.rst:45
msgid ""
"The example below would like to show how to register a pickle function "
"and how it will be used:"
msgstr "아래 예제는 피클 함수를 등록하는 방법과 사용법을 보여줍니다.:"

#: ../../library/copyreg.rst:9
msgid "module"
msgstr ""

#: ../../library/copyreg.rst:9
msgid "pickle"
msgstr ""

#: ../../library/copyreg.rst:9
msgid "copy"
msgstr ""

#~ msgid ""
#~ "The optional *constructor* parameter, if "
#~ "provided, is a callable object which "
#~ "can be used to reconstruct the "
#~ "object when called with the tuple "
#~ "of arguments returned by *function* at"
#~ " pickling time.  :exc:`TypeError` will be"
#~ " raised if *object* is a class "
#~ "or *constructor* is not callable."
#~ msgstr ""
#~ "선택적 *constructor* 매개 변수가 제공되면, 콜러블 "
#~ "객체이며, 피클 할 때 *function*\\에 의해 반환된"
#~ " 인자의 튜플로 호출될 때 객체를 재구성하는 데 "
#~ "사용할 수 있습니다. *object*\\가 클래스이거나 "
#~ "*constructor*\\가 콜러블이 아니면 :exc:`TypeError`\\가 "
#~ "발생합니다."


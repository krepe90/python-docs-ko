# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/reprlib.rst:2
#, fuzzy
msgid ":mod:`!reprlib` --- Alternate :func:`repr` implementation"
msgstr ":mod:`reprlib` --- 대안 :func:`repr` 구현"

#: ../../library/reprlib.rst:9
msgid "**Source code:** :source:`Lib/reprlib.py`"
msgstr "**소스 코드:** :source:`Lib/reprlib.py`"

#: ../../library/reprlib.rst:13
#, fuzzy
msgid ""
"The :mod:`!reprlib` module provides a means for producing object "
"representations with limits on the size of the resulting strings. This is"
" used in the Python debugger and may be useful in other contexts as well."
msgstr ""
":mod:`reprlib` 모듈은 결과 문자열의 크기에 제한이 있는 객체 표현을 생성하는 수단을 제공합니다. 파이썬 디버거에서 "
"사용되며 다른 문맥에서도 유용할 수 있습니다."

#: ../../library/reprlib.rst:17
msgid "This module provides a class, an instance, and a function:"
msgstr "이 모듈은 클래스, 인스턴스 및 함수를 제공합니다.:"

#: ../../library/reprlib.rst:24
msgid ""
"Class which provides formatting services useful in implementing functions"
" similar to the built-in :func:`repr`; size limits for  different object "
"types are added to avoid the generation of representations which are "
"excessively long."
msgstr ""
"내장 :func:`repr`\\과 유사한 함수를 구현하는 데 유용한 포매팅 서비스를 제공하는 클래스; 과도하게 긴 표현의 생성을 "
"피하고자 객체 형별로 크기 제한이 추가됩니다."

#: ../../library/reprlib.rst:28
msgid ""
"The keyword arguments of the constructor can be used as a shortcut to set"
" the attributes of the :class:`Repr` instance. Which means that the "
"following initialization::"
msgstr ""

#: ../../library/reprlib.rst:32
msgid "aRepr = reprlib.Repr(maxlevel=3)"
msgstr ""

#: ../../library/reprlib.rst:34
msgid "Is equivalent to::"
msgstr ""

#: ../../library/reprlib.rst:36
msgid ""
"aRepr = reprlib.Repr()\n"
"aRepr.maxlevel = 3"
msgstr ""

#: ../../library/reprlib.rst:39
msgid ""
"See section `Repr Objects`_ for more information about :class:`Repr` "
"attributes."
msgstr ""

#: ../../library/reprlib.rst:42
msgid "Allow attributes to be set via keyword arguments."
msgstr ""

#: ../../library/reprlib.rst:48
msgid ""
"This is an instance of :class:`Repr` which is used to provide the "
":func:`.repr` function described below.  Changing the attributes of this "
"object will affect the size limits used by :func:`.repr` and the Python "
"debugger."
msgstr ""
"아래에 설명된 :func:`.repr`\\로 함수를 제공하는 데 사용되는 :class:`Repr`\\의 인스턴스입니다. 이 객체의 "
"어트리뷰트를 변경하면 :func:`.repr`\\과 파이썬 디버거에서 사용되는 크기 제한에 영향을 줍니다."

#: ../../library/reprlib.rst:56
msgid ""
"This is the :meth:`~Repr.repr` method of ``aRepr``.  It returns a string "
"similar to that returned by the built-in function of the same name, but "
"with limits on most sizes."
msgstr ""
"``aRepr``\\의 :meth:`~Repr.repr` 메서드입니다. 같은 이름의 내장 함수에 의해 반환된 것과 비슷한 문자열을 "
"반환하지만, 대부분의 크기에는 제한이 있습니다."

#: ../../library/reprlib.rst:60
#, fuzzy
msgid ""
"In addition to size-limiting tools, the module also provides a decorator "
"for detecting recursive calls to :meth:`~object.__repr__` and "
"substituting a placeholder string instead."
msgstr ""
"크기 제한 도구 외에도, 모듈은 :meth:`__repr__`\\에 대한 재귀 호출을 감지하고 대신 자리 표시자 문자열을 치환하는 "
"데코레이터를 제공합니다."

#: ../../library/reprlib.rst:69
#, fuzzy
msgid ""
"Decorator for :meth:`~object.__repr__` methods to detect recursive calls "
"within the same thread.  If a recursive call is made, the *fillvalue* is "
"returned, otherwise, the usual :meth:`!__repr__` call is made.  For "
"example:"
msgstr ""
"같은 스레드 내에서의 재귀 호출을 감지하는 :meth:`__repr__` 메서드용 데코레이터. 재귀 호출이 이루어지면, "
"*fillvalue*\\가 반환되고, 그렇지 않으면 평상시의 :meth:`__repr__` 호출이 수행됩니다. 예를 들어:"

#: ../../library/reprlib.rst:73
msgid ""
">>> from reprlib import recursive_repr\n"
">>> class MyList(list):\n"
"...     @recursive_repr()\n"
"...     def __repr__(self):\n"
"...         return '<' + '|'.join(map(repr, self)) + '>'\n"
"...\n"
">>> m = MyList('abc')\n"
">>> m.append(m)\n"
">>> m.append('x')\n"
">>> print(m)\n"
"<'a'|'b'|'c'|...|'x'>"
msgstr ""

#: ../../library/reprlib.rst:93
msgid "Repr Objects"
msgstr "Repr 객체"

#: ../../library/reprlib.rst:95
msgid ""
":class:`Repr` instances provide several attributes which can be used to "
"provide size limits for the representations of different object types,  "
"and methods which format specific object types."
msgstr ""
":class:`Repr` 인스턴스는 여러 객체 형의 표현에 대한 크기 제한과 특정 객체 형을 포맷하는 메서드를 제공하는데 사용될 수"
" 있습니다."

#: ../../library/reprlib.rst:102
msgid "This string is displayed for recursive references. It defaults to ``...``."
msgstr ""

#: ../../library/reprlib.rst:110
msgid ""
"Depth limit on the creation of recursive representations.  The default is"
" ``6``."
msgstr "재귀적 표현의 생성에 대한 심도 한계. 기본값은 ``6``\\입니다."

#: ../../library/reprlib.rst:121
msgid ""
"Limits on the number of entries represented for the named object type.  "
"The default is ``4`` for :attr:`maxdict`, ``5`` for :attr:`maxarray`, and"
"  ``6`` for the others."
msgstr ""
"명명된 객체 형을 표현하는 항목 수 제한. 기본값은 :attr:`maxdict`\\은 ``4``, "
":attr:`maxarray`\\는 ``5`` 이고 그 외는 ``6``\\입니다."

#: ../../library/reprlib.rst:128
msgid ""
"Maximum number of characters in the representation for an integer.  "
"Digits are dropped from the middle.  The default is ``40``."
msgstr "정수 표현의 최대 문자 수입니다. 숫자는 가운데에서 삭제됩니다. 기본값은 ``40``\\입니다."

#: ../../library/reprlib.rst:134
msgid ""
"Limit on the number of characters in the representation of the string.  "
"Note that the \"normal\" representation of the string is used as the "
"character source: if escape sequences are needed in the representation, "
"these may be mangled when the representation is shortened.  The default "
"is ``30``."
msgstr ""
"문자열 표현의 문자 수 제한. 문자열의 \"통상\" 표현이 문자 소스로써 사용되는 것에 주의해 주세요: 표현에 이스케이프 시퀀스가 "
"필요하면, 표현이 짧아질 때 이것이 망가질 수 있습니다. 기본값은 ``30``\\입니다."

#: ../../library/reprlib.rst:142
msgid ""
"This limit is used to control the size of object types for which no "
"specific formatting method is available on the :class:`Repr` object. It "
"is applied in a similar manner as :attr:`maxstring`.  The default is "
"``20``."
msgstr ""
"이 제한은 :class:`Repr` 객체에서 구체적인 포맷 메서드를 사용할 수 없는 객체 형의 크기를 제어하는 데 사용됩니다. "
":attr:`maxstring`\\과 비슷한 방식으로 적용됩니다. 기본값은 ``20``\\입니다."

#: ../../library/reprlib.rst:149
msgid ""
"If this attribute is set to ``None`` (the default), the output is "
"formatted with no line breaks or indentation, like the standard "
":func:`repr`. For example:"
msgstr ""

#: ../../library/reprlib.rst:153
#, python-brace-format
msgid ""
">>> example = [\n"
"...     1, 'spam', {'a': 2, 'b': 'spam eggs', 'c': {3: 4.5, 6: []}}, "
"'ham']\n"
">>> import reprlib\n"
">>> aRepr = reprlib.Repr()\n"
">>> print(aRepr.repr(example))\n"
"[1, 'spam', {'a': 2, 'b': 'spam eggs', 'c': {3: 4.5, 6: []}}, 'ham']"
msgstr ""

#: ../../library/reprlib.rst:162
msgid ""
"If :attr:`~Repr.indent` is set to a string, each recursion level is "
"placed on its own line, indented by that string:"
msgstr ""

#: ../../library/reprlib.rst:165
#, python-brace-format
msgid ""
">>> aRepr.indent = '-->'\n"
">>> print(aRepr.repr(example))\n"
"[\n"
"-->1,\n"
"-->'spam',\n"
"-->{\n"
"-->-->'a': 2,\n"
"-->-->'b': 'spam eggs',\n"
"-->-->'c': {\n"
"-->-->-->3: 4.5,\n"
"-->-->-->6: [],\n"
"-->-->},\n"
"-->},\n"
"-->'ham',\n"
"]"
msgstr ""

#: ../../library/reprlib.rst:183
msgid ""
"Setting :attr:`~Repr.indent` to a positive integer value behaves as if it"
" was set to a string with that number of spaces:"
msgstr ""

#: ../../library/reprlib.rst:186
#, python-brace-format
msgid ""
">>> aRepr.indent = 4\n"
">>> print(aRepr.repr(example))\n"
"[\n"
"    1,\n"
"    'spam',\n"
"    {\n"
"        'a': 2,\n"
"        'b': 'spam eggs',\n"
"        'c': {\n"
"            3: 4.5,\n"
"            6: [],\n"
"        },\n"
"    },\n"
"    'ham',\n"
"]"
msgstr ""

#: ../../library/reprlib.rst:209
msgid ""
"The equivalent to the built-in :func:`repr` that uses the formatting "
"imposed by the instance."
msgstr "인스턴스에 의해 부과된 포매팅을 사용하는 내장 :func:`repr`\\와 등등합니다."

#: ../../library/reprlib.rst:215
msgid ""
"Recursive implementation used by :meth:`.repr`.  This uses the type of "
"*obj* to determine which formatting method to call, passing it *obj* and "
"*level*.  The type-specific methods should call :meth:`repr1` to perform "
"recursive formatting, with ``level - 1`` for the value of *level* in the "
"recursive  call."
msgstr ""
":meth:`.repr`\\에서 사용되는 재귀적 구현. *obj*\\의 형을 사용하여 호출할 포매팅 메서드를 결정하고, *obj* "
"와 *level*\\을 전달합니다. 형별 메서드는 재귀적 포매팅을 수행하기 위해 :meth:`repr1`\\을 호출해야 하는데, "
"재귀 호출에서 *level* 값으로 ``level - 1``\\을 사용합니다."

#: ../../library/reprlib.rst:224
msgid ""
"Formatting methods for specific types are implemented as methods with a "
"name based on the type name.  In the method name, **TYPE** is replaced by"
" ``'_'.join(type(obj).__name__.split())``. Dispatch to these methods is "
"handled by :meth:`repr1`. Type-specific methods which need to recursively"
" format a value should call ``self.repr1(subobj, level - 1)``."
msgstr ""
"특정 형의 포매팅 메서드는 형 이름에 기반하는 이름의 메서드로 구현됩니다. 메서드 이름에서, **TYPE** 은 "
"``'_'.join(type(obj).__name__.split())``\\으로 치환됩니다. 이 메서드로의 디스패치는 "
":meth:`repr1`\\에 의해 처리됩니다. 재귀적으로 값을 포맷해야 하는 형별 메서드는 ``self.repr1(subobj, "
"level - 1)``\\을 호출해야 합니다."

#: ../../library/reprlib.rst:234
msgid "Subclassing Repr Objects"
msgstr "Repr 객체 서브 클래싱"

#: ../../library/reprlib.rst:236
#, fuzzy
msgid ""
"The use of dynamic dispatching by :meth:`Repr.repr1` allows subclasses of"
" :class:`Repr` to add support for additional built-in object types or to "
"modify the handling of types already supported. This example shows how "
"special support for file objects could be added:"
msgstr ""
":meth:`Repr.repr1`\\에 의한 동적 디스패치의 사용은 :class:`Repr`\\의 서브 클래스가 추가 내장 객체 "
"형에 대한 지원을 추가하거나 이미 지원되는 형의 처리를 수정할 수 있도록 합니다. 이 예제는 파일 객체에 대한 특별한 지원이 어떻게"
" 추가될 수 있는지 보여줍니다::"

#: ../../library/reprlib.rst:241
#, python-brace-format
msgid ""
"import reprlib\n"
"import sys\n"
"\n"
"class MyRepr(reprlib.Repr):\n"
"\n"
"    def repr_TextIOWrapper(self, obj, level):\n"
"        if obj.name in {'<stdin>', '<stdout>', '<stderr>'}:\n"
"            return obj.name\n"
"        return repr(obj)\n"
"\n"
"aRepr = MyRepr()\n"
"print(aRepr.repr(sys.stdin))         # prints '<stdin>'"
msgstr ""

#: ../../library/reprlib.rst:256
msgid "<stdin>"
msgstr ""

#: ../../library/reprlib.rst:65
msgid "..."
msgstr ""

#: ../../library/reprlib.rst:65
msgid "placeholder"
msgstr ""


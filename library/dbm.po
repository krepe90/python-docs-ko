# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/dbm.rst:2
#, fuzzy
msgid ":mod:`!dbm` --- Interfaces to Unix \"databases\""
msgstr ":mod:`dbm` --- 유닉스 \"데이터베이스\" 인터페이스"

#: ../../library/dbm.rst:7
msgid "**Source code:** :source:`Lib/dbm/__init__.py`"
msgstr "**소스 코드:** :source:`Lib/dbm/__init__.py`"

#: ../../library/dbm.rst:11
#, fuzzy
msgid ":mod:`dbm` is a generic interface to variants of the DBM database:"
msgstr ":mod:`dbm` --- 유닉스 \"데이터베이스\" 인터페이스"

#: ../../library/dbm.rst:13
msgid ":mod:`dbm.sqlite3`"
msgstr ""

#: ../../library/dbm.rst:14
msgid ":mod:`dbm.gnu`"
msgstr ""

#: ../../library/dbm.rst:15
msgid ":mod:`dbm.ndbm`"
msgstr ""

#: ../../library/dbm.rst:17
#, fuzzy
msgid ""
"If none of these modules are installed, the slow-but-simple "
"implementation in module :mod:`dbm.dumb` will be used.  There is a `third"
" party interface <https://www.jcea.es/programacion/pybsddb.htm>`_ to the "
"Oracle Berkeley DB."
msgstr ""
":mod:`dbm`\\은 DBM 데이터베이스 변형에 대한 일반 인터페이스입니다 --- :mod:`dbm.gnu` 또는 "
":mod:`dbm.ndbm`. 이러한 모듈이 설치되어 있지 않으면, :mod:`dbm.dumb` 모듈에 있는 느리지만 간단한 구현이"
" 사용됩니다. 오라클 Berkeley DB에 대한 `제삼자 인터페이스 "
"<https://www.jcea.es/programacion/pybsddb.htm>`_\\가 있습니다."

#: ../../library/dbm.rst:24
msgid ""
"A tuple containing the exceptions that can be raised by each of the "
"supported modules, with a unique exception also named :exc:`dbm.error` as"
" the first item --- the latter is used when :exc:`dbm.error` is raised."
msgstr ""
"지원되는 각 모듈에 의해 발생할 수 있는 예외를 포함하는 튜플. 역시 :exc:`dbm.error`\\라고 이름 붙인 고유한 예외를"
" 첫 번째 항목으로 갖고 있습니다 --- :exc:`dbm.error`\\가 발생할 때 이것이 사용됩니다."

#: ../../library/dbm.rst:31
#, fuzzy
msgid ""
"This function attempts to guess which of the several simple database "
"modules available --- :mod:`dbm.sqlite3`, :mod:`dbm.gnu`, "
":mod:`dbm.ndbm`, or :mod:`dbm.dumb` --- should be used to open a given "
"file."
msgstr ""
"이 함수는 사용 가능한 몇 가지 간단한 데이터베이스 모듈 --- :mod:`dbm.gnu`, :mod:`dbm.ndbm` 또는 "
":mod:`dbm.dumb` --- 중 어느 것을 사용하여 주어진 파일을 열어야 하는지 추측합니다."

#: ../../library/dbm.rst:35
msgid "Return one of the following values:"
msgstr ""

#: ../../library/dbm.rst:37
msgid ""
"``None`` if the file can't be opened because it's unreadable or doesn't "
"exist"
msgstr ""

#: ../../library/dbm.rst:38
msgid "the empty string (``''``) if the file's format can't be guessed"
msgstr ""

#: ../../library/dbm.rst:39
msgid ""
"a string containing the required module name, such as ``'dbm.ndbm'`` or "
"``'dbm.gnu'``"
msgstr ""

#: ../../library/dbm.rst:41 ../../library/dbm.rst:250 ../../library/dbm.rst:448
msgid "*filename* accepts a :term:`path-like object`."
msgstr ""

#: ../../library/dbm.rst:65
#, fuzzy
msgid "Open a database and return the corresponding database object."
msgstr "데이터베이스 파일 *file*\\을 열고 해당 객체를 반환합니다."

#: ../../library/dbm.rst
msgid "Parameters"
msgstr ""

#: ../../library/dbm.rst:67
#, fuzzy
msgid ""
"The database file to open.  If the database file already exists, the "
":func:`whichdb` function is used to determine its type and the "
"appropriate module is used; if it does not exist, the first submodule "
"listed above that can be imported is used."
msgstr ""
"데이터베이스 파일이 이미 존재하면, :func:`whichdb` 함수를 사용하여 유형을 판별하고 적절한 모듈이 사용됩니다; 존재하지"
" 않으면, 위에 나열된 것 중 임포트 할 수 있는 첫 번째 모듈이 사용됩니다."

#: ../../library/dbm.rst:68 ../../library/dbm.rst:222
msgid "The database file to open."
msgstr ""

#: ../../library/dbm.rst:70
#, fuzzy
msgid ""
"If the database file already exists, the :func:`whichdb` function is used"
" to determine its type and the appropriate module is used; if it does not"
" exist, the first submodule listed above that can be imported is used."
msgstr ""
"데이터베이스 파일이 이미 존재하면, :func:`whichdb` 함수를 사용하여 유형을 판별하고 적절한 모듈이 사용됩니다; 존재하지"
" 않으면, 위에 나열된 것 중 임포트 할 수 있는 첫 번째 모듈이 사용됩니다."

#: ../../library/dbm.rst:75 ../../library/dbm.rst:178 ../../library/dbm.rst:353
msgid ""
"* ``'r'`` (default): |flag_r| * ``'w'``: |flag_w| * ``'c'``: |flag_c| * "
"``'n'``: |flag_n|"
msgstr ""

#: ../../library/dbm.rst:76 ../../library/dbm.rst:180 ../../library/dbm.rst:227
#: ../../library/dbm.rst:354
msgid "``'r'`` (default): |flag_r|"
msgstr ""

#: ../../library/dbm.rst:77 ../../library/dbm.rst:181 ../../library/dbm.rst:228
#: ../../library/dbm.rst:355 ../../library/dbm.rst:429
msgid "``'w'``: |flag_w|"
msgstr ""

#: ../../library/dbm.rst:78 ../../library/dbm.rst:182 ../../library/dbm.rst:229
#: ../../library/dbm.rst:356
msgid "``'c'``: |flag_c|"
msgstr ""

#: ../../library/dbm.rst:79 ../../library/dbm.rst:183 ../../library/dbm.rst:230
#: ../../library/dbm.rst:357 ../../library/dbm.rst:431
msgid "``'n'``: |flag_n|"
msgstr ""

#: ../../library/dbm.rst:81 ../../library/dbm.rst:244 ../../library/dbm.rst:359
#: ../../library/dbm.rst:433
msgid "|mode_param_doc|"
msgstr ""

#: ../../library/dbm.rst:84
msgid "*file* accepts a :term:`path-like object`."
msgstr ""

#: ../../library/dbm.rst:87
#, fuzzy
msgid ""
"The object returned by :func:`~dbm.open` supports the same basic "
"functionality as a :class:`dict`; keys and their corresponding values can"
" be stored, retrieved, and deleted, and the :keyword:`in` operator and "
"the :meth:`!keys` method are available, as well as :meth:`!get` and "
":meth:`!setdefault` methods."
msgstr ""
":func:`.open`\\이 반환한 객체는 딕셔너리와 같은 기본 기능을 지원합니다; 키와 해당 값을 저장, 조회 및 삭제할 수 "
"있으며, :meth:`get`\\과 :meth:`setdefault`\\뿐만 아니라 :keyword:`in` 연산자와 "
":meth:`keys` 메서드도 사용할 수 있습니다."

#: ../../library/dbm.rst:92
#, fuzzy
msgid ""
"Key and values are always stored as :class:`bytes`. This means that when "
"strings are used they are implicitly converted to the default encoding "
"before being stored."
msgstr "키와 값은 항상 바이트열로 저장됩니다. 이는 문자열이 사용될 때 저장되기 전에 기본 인코딩으로 묵시적으로 변환됨을 의미합니다."

#: ../../library/dbm.rst:96
msgid ""
"These objects also support being used in a :keyword:`with` statement, "
"which will automatically close them when done."
msgstr "이 객체는 :keyword:`with` 문에서도 사용되도록 지원해서, 완료될 때 자동으로 닫힙니다."

#: ../../library/dbm.rst:99
#, fuzzy
msgid ""
":meth:`!get` and :meth:`!setdefault` methods are now available for all "
":mod:`dbm` backends."
msgstr "이제 모든 데이터베이스 모듈에서 :meth:`get`\\과 :meth:`setdefault`\\를 사용할 수 있습니다."

#: ../../library/dbm.rst:103
#, fuzzy
msgid ""
"Added native support for the context management protocol to the objects "
"returned by :func:`~dbm.open`."
msgstr ":func:`.open`\\이 반환한 객체에 컨텍스트 관리 프로토콜에 대한 기본 지원을 추가했습니다."

#: ../../library/dbm.rst:107
#, fuzzy
msgid ""
"Deleting a key from a read-only database raises a database module "
"specific exception instead of :exc:`KeyError`."
msgstr "읽기 전용 데이터베이스에서 키를 삭제하면 :exc:`KeyError` 대신 데이터베이스 모듈 특정 에러가 발생합니다."

#: ../../library/dbm.rst:111
msgid ""
"The following example records some hostnames and a corresponding title,  "
"and then prints out the contents of the database::"
msgstr "다음 예제는 일부 호스트 명과 해당 제목을 기록한 다음, 데이터베이스의 내용을 인쇄합니다::"

#: ../../library/dbm.rst:114
msgid ""
"import dbm\n"
"\n"
"# Open database, creating it if necessary.\n"
"with dbm.open('cache', 'c') as db:\n"
"\n"
"    # Record some values\n"
"    db[b'hello'] = b'there'\n"
"    db['www.python.org'] = 'Python Website'\n"
"    db['www.cnn.com'] = 'Cable News Network'\n"
"\n"
"    # Note that the keys are considered bytes now.\n"
"    assert db[b'www.python.org'] == b'Python Website'\n"
"    # Notice how the value is now in bytes.\n"
"    assert db['www.cnn.com'] == b'Cable News Network'\n"
"\n"
"    # Often-used methods of the dict interface work too.\n"
"    print(db.get('python.org', b'not present'))\n"
"\n"
"    # Storing a non-string key or value will raise an exception (most\n"
"    # likely a TypeError).\n"
"    db['www.yahoo.com'] = 4\n"
"\n"
"# db is automatically closed when leaving the with statement."
msgstr ""

#: ../../library/dbm.rst:141
msgid "Module :mod:`shelve`"
msgstr "모듈 :mod:`shelve`"

#: ../../library/dbm.rst:142
msgid "Persistence module which stores non-string data."
msgstr "문자열이 아닌 데이터를 저장하는 지속성 모듈."

#: ../../library/dbm.rst:145
msgid "The individual submodules are described in the following sections."
msgstr "개별 서브 모듈은 다음 섹션에서 설명합니다."

#: ../../library/dbm.rst:148
#, fuzzy
msgid ":mod:`dbm.sqlite3` --- SQLite backend for dbm"
msgstr ":mod:`dbm.ndbm` --- ndbm 기반 인터페이스"

#: ../../library/dbm.rst:156
#, fuzzy
msgid "**Source code:** :source:`Lib/dbm/sqlite3.py`"
msgstr "**소스 코드:** :source:`Lib/dbm/gnu.py`"

#: ../../library/dbm.rst:160
msgid ""
"This module uses the standard library :mod:`sqlite3` module to provide an"
" SQLite backend for the :mod:`dbm` module. The files created by "
":mod:`dbm.sqlite3` can thus be opened by :mod:`sqlite3`, or any other "
"SQLite browser, including the SQLite CLI."
msgstr ""

#: ../../includes/wasm-mobile-notavail.rst:3 ../../includes/wasm-notavail.rst:3
msgid "Availability"
msgstr ""

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly. See :ref"
":`wasm-availability` for more information."
msgstr ""

#: ../../library/dbm.rst:169
msgid ""
"Open an SQLite database. The returned object behaves like a "
":term:`mapping`, implements a :meth:`!close` method, and supports a "
"\"closing\" context manager via the :keyword:`with` keyword."
msgstr ""

#: ../../library/dbm.rst:174
msgid "The path to the database to be opened."
msgstr ""

#: ../../library/dbm.rst:185
msgid ""
"The Unix file access mode of the file (default: octal ``0o666``), used "
"only when the database has to be created."
msgstr ""

#: ../../library/dbm.rst:191
#, fuzzy
msgid ":mod:`dbm.gnu` --- GNU database manager"
msgstr ":mod:`dbm.ndbm` --- ndbm 기반 인터페이스"

#: ../../library/dbm.rst:197
msgid "**Source code:** :source:`Lib/dbm/gnu.py`"
msgstr "**소스 코드:** :source:`Lib/dbm/gnu.py`"

#: ../../library/dbm.rst:201
msgid ""
"The :mod:`dbm.gnu` module provides an interface to the :abbr:`GDBM (GNU "
"dbm)` library, similar to the :mod:`dbm.ndbm` module, but with additional"
" functionality like crash tolerance."
msgstr ""

#: ../../library/dbm.rst:207 ../../library/dbm.rst:321
msgid ""
"The file formats created by :mod:`dbm.gnu` and :mod:`dbm.ndbm` are "
"incompatible and can not be used interchangeably."
msgstr ""

#: ../../includes/wasm-mobile-notavail.rst:5
msgid ""
"This module is not supported on :ref:`mobile platforms <mobile-"
"availability>` or :ref:`WebAssembly platforms <wasm-availability>`."
msgstr ""

#: ../../library/dbm.rst:214
msgid ""
"Raised on :mod:`dbm.gnu`-specific errors, such as I/O errors. "
":exc:`KeyError` is raised for general mapping errors like specifying an "
"incorrect key."
msgstr ""
"I/O 에러와 같은 :mod:`dbm.gnu` 특정 에러에서 발생합니다. 잘못된 키 지정과 같은 일반적인 매핑 에러에 대해서는 "
":exc:`KeyError`\\가 발생합니다."

#: ../../library/dbm.rst:220
#, fuzzy
msgid "Open a GDBM database and return a :class:`!gdbm` object."
msgstr "데이터베이스 파일 *file*\\을 열고 해당 객체를 반환합니다."

#: ../../library/dbm.rst:226
msgid ""
"* ``'r'`` (default): |flag_r| * ``'w'``: |flag_w| * ``'c'``: |flag_c| * "
"``'n'``: |flag_n|  The following additional characters may be appended to"
" control how the database is opened:  * ``'f'``: Open the database in "
"fast mode.   Writes to the database will not be synchronized. * ``'s'``: "
"Synchronized mode.   Changes to the database will be written immediately "
"to the file. * ``'u'``: Do not lock database.  Not all flags are valid "
"for all versions of GDBM. See the :data:`open_flags` member for a list of"
" supported flag characters."
msgstr ""

#: ../../library/dbm.rst:232
#, fuzzy
msgid ""
"The following additional characters may be appended to control how the "
"database is opened:"
msgstr "데이터베이스를 여는 방법을 제어하기 위해 다음과 같은 추가 문자가 flag에 추가될 수 있습니다:"

#: ../../library/dbm.rst:235
#, fuzzy
msgid ""
"``'f'``: Open the database in fast mode. Writes to the database will not "
"be synchronized."
msgstr "데이터베이스를 빠른 모드로 엽니다. 데이터베이스로의 쓰기는 동기화되지 않습니다."

#: ../../library/dbm.rst:237
#, fuzzy
msgid ""
"``'s'``: Synchronized mode. Changes to the database will be written "
"immediately to the file."
msgstr "동기화 모드. 이것은 데이터베이스 변경 사항이 파일에 즉시 기록되도록 합니다."

#: ../../library/dbm.rst:239
#, fuzzy
msgid "``'u'``: Do not lock database."
msgstr "데이터베이스를 잠그지 않습니다."

#: ../../library/dbm.rst:241
#, fuzzy
msgid ""
"Not all flags are valid for all versions of GDBM. See the "
":data:`open_flags` member for a list of supported flag characters."
msgstr ""
"모든 플래그가 모든 버전의 ``gdbm``\\에서 유효한 것은 아닙니다. 모듈 상수 :const:`open_flags`\\는 "
"지원되는 플래그 문자의 문자열입니다. 유효하지 않은 플래그가 지정되면 :exc:`error` 예외가 발생합니다."

#: ../../library/dbm.rst
msgid "Raises"
msgstr ""

#: ../../library/dbm.rst:247
#, fuzzy
msgid "If an invalid *flag* argument is passed."
msgstr "선택적 *flag* 인자는 다음과 같은 것이 될 수 있습니다:"

#: ../../library/dbm.rst:255
msgid ""
"A string of characters the *flag* parameter of :meth:`~dbm.gnu.open` "
"supports."
msgstr ""

#: ../../library/dbm.rst:257
msgid ""
":class:`!gdbm` objects behave similar to :term:`mappings <mapping>`, but "
":meth:`!items` and :meth:`!values` methods are not supported. The "
"following methods are also provided:"
msgstr ""

#: ../../library/dbm.rst:263
#, fuzzy
msgid ""
"It's possible to loop over every key in the database using this method  "
"and the :meth:`nextkey` method.  The traversal is ordered by GDBM's "
"internal hash values, and won't be sorted by the key values.  This method"
" returns the starting key."
msgstr ""
"이 메서드와 :meth:`nextkey` 메서드를 사용하여 데이터베이스의 모든 키를 순회할 수 있습니다. 순회는 "
"``gdbm``\\의 내부 해시값 순이며, 키의 값으로 정렬되지 않습니다. 이 메서드는 시작 키를 반환합니다."

#: ../../library/dbm.rst:270
msgid ""
"Returns the key that follows *key* in the traversal.  The following code "
"prints every key in the database ``db``, without having to create a list "
"in memory that contains them all::"
msgstr ""
"순회에서 *key* 뒤에 오는 키를 반환합니다. 다음 코드는 메모리에 모든 키를 포함하는 리스트를 만들지 않고, 데이터베이스 "
"``db``\\의 모든 키를 인쇄합니다::"

#: ../../library/dbm.rst:274
msgid ""
"k = db.firstkey()\n"
"while k is not None:\n"
"    print(k)\n"
"    k = db.nextkey(k)"
msgstr ""

#: ../../library/dbm.rst:281
#, fuzzy
msgid ""
"If you have carried out a lot of deletions and would like to shrink the "
"space used by the GDBM file, this routine will reorganize the database.  "
":class:`!gdbm` objects will not shorten the length of a database file "
"except by using this reorganization; otherwise, deleted file space will "
"be kept and reused as new (key, value) pairs are added."
msgstr ""
"많은 삭제를 수행한 후에, ``gdbm`` 파일이 사용하는 공간을 줄이려면, 이 루틴이 데이터베이스를 재구성합니다. ``gdbm``"
" 객체는 이 재구성을 사용할 때 외에는 데이터베이스 파일의 길이를 줄이지 않습니다; 그렇지 않으면, 삭제된 파일 공간이 유지되고 새"
" (키, 값) 쌍이 추가될 때 재사용됩니다."

#: ../../library/dbm.rst:289
msgid ""
"When the database has been opened in fast mode, this method forces any "
"unwritten data to be written to the disk."
msgstr "데이터베이스가 빠른 모드로 열렸을 때, 이 메서드를 사용하면 기록되지 않은 데이터가 디스크에 기록됩니다."

#: ../../library/dbm.rst:294
#, fuzzy
msgid "Close the GDBM database."
msgstr "``gdbm`` 데이터베이스를 닫습니다."

#: ../../library/dbm.rst:298
#, fuzzy
msgid "Remove all items from the GDBM database."
msgstr "``gdbm`` 데이터베이스를 닫습니다."

#: ../../library/dbm.rst:304
#, fuzzy
msgid ":mod:`dbm.ndbm` --- New Database Manager"
msgstr ":mod:`dbm.ndbm` --- ndbm 기반 인터페이스"

#: ../../library/dbm.rst:310
msgid "**Source code:** :source:`Lib/dbm/ndbm.py`"
msgstr "**소스 코드:** :source:`Lib/dbm/ndbm.py`"

#: ../../library/dbm.rst:314
msgid ""
"The :mod:`dbm.ndbm` module provides an interface to the :abbr:`NDBM (New "
"Database Manager)` library. This module can be used with the \"classic\" "
"NDBM interface or the :abbr:`GDBM (GNU dbm)` compatibility interface."
msgstr ""

#: ../../library/dbm.rst:326
msgid ""
"The NDBM library shipped as part of macOS has an undocumented limitation "
"on the size of values, which can result in corrupted database files when "
"storing values larger than this limit. Reading such corrupted files can "
"result in a hard crash (segmentation fault)."
msgstr ""

#: ../../library/dbm.rst:335
msgid ""
"Raised on :mod:`dbm.ndbm`-specific errors, such as I/O errors. "
":exc:`KeyError` is raised for general mapping errors like specifying an "
"incorrect key."
msgstr ""
"I/O 에러와 같은 :mod:`dbm.ndbm` 특정 에러에서 발생합니다. 잘못된 키 지정과 같은 일반적인 매핑 에러에 대해서는 "
":exc:`KeyError`\\가 발생합니다."

#: ../../library/dbm.rst:341
#, fuzzy
msgid "Name of the NDBM implementation library used."
msgstr "사용된 ``ndbm`` 구현 라이브러리의 이름."

#: ../../library/dbm.rst:346
#, fuzzy
msgid "Open an NDBM database and return an :class:`!ndbm` object."
msgstr "데이터베이스 파일 *file*\\을 열고 해당 객체를 반환합니다."

#: ../../library/dbm.rst:348
#, fuzzy
msgid ""
"The basename of the database file (without the :file:`.dir` or "
":file:`.pag` extensions)."
msgstr ""
"dbm 데이터베이스를 열고 ``ndbm`` 객체를 반환합니다. *filename* 인자는 데이터베이스 파일의 이름입니다 "
"(:file:`.dir`\\이나 :file:`.pag` 확장자는 없습니다)."

#: ../../library/dbm.rst:362
msgid ""
":class:`!ndbm` objects behave similar to :term:`mappings <mapping>`, but "
":meth:`!items` and :meth:`!values` methods are not supported. The "
"following methods are also provided:"
msgstr ""

#: ../../library/dbm.rst:366
msgid "Accepts :term:`path-like object` for filename."
msgstr ""

#: ../../library/dbm.rst:371
#, fuzzy
msgid "Close the NDBM database."
msgstr "``ndbm`` 데이터베이스를 닫습니다."

#: ../../library/dbm.rst:375
#, fuzzy
msgid "Remove all items from the NDBM database."
msgstr "``ndbm`` 데이터베이스를 닫습니다."

#: ../../library/dbm.rst:381
msgid ":mod:`dbm.dumb` --- Portable DBM implementation"
msgstr ":mod:`dbm.dumb` --- 이식성 있는 DBM 구현"

#: ../../library/dbm.rst:386
msgid "**Source code:** :source:`Lib/dbm/dumb.py`"
msgstr "**소스 코드:** :source:`Lib/dbm/dumb.py`"

#: ../../library/dbm.rst:392
msgid ""
"The :mod:`dbm.dumb` module is intended as a last resort fallback for the "
":mod:`dbm` module when a more robust module is not available. The "
":mod:`dbm.dumb` module is not written for speed and is not nearly as "
"heavily used as the other database modules."
msgstr ""
":mod:`dbm.dumb` 모듈은 더욱 강인한 모듈을 사용할 수 없을 때 :mod:`dbm` 모듈에 대한 최후의 대체 폴백으로 "
"사용됩니다. :mod:`dbm.dumb` 모듈은 속도를 위해 작성되지 않았으며 다른 데이터베이스 모듈만큼 많이 사용되지는 않습니다."

#: ../../library/dbm.rst:399
#, fuzzy
msgid ""
"The :mod:`dbm.dumb` module provides a persistent :class:`dict`-like "
"interface which is written entirely in Python. Unlike other :mod:`dbm` "
"backends, such as :mod:`dbm.gnu`, no external library is required."
msgstr ""
":mod:`dbm.dumb` 모듈은 완전히 파이썬으로 작성된 지속적인(persistent) 딕셔너리와 유사한 인터페이스를 "
"제공합니다. :mod:`dbm.gnu`\\와 같은 다른 모듈과 달리, 외부 라이브러리가 필요하지 않습니다. 다른 지속성 매핑처럼, "
"키와 값은 항상 바이트열로 저장됩니다."

#: ../../library/dbm.rst:404
#, fuzzy
msgid "The :mod:`!dbm.dumb` module defines the following:"
msgstr "모듈은 다음과 같은 것들을 정의합니다:"

#: ../../library/dbm.rst:408
msgid ""
"Raised on :mod:`dbm.dumb`-specific errors, such as I/O errors.  "
":exc:`KeyError` is raised for general mapping errors like specifying an "
"incorrect key."
msgstr ""
"I/O 에러와 같은 :mod:`dbm.dumb` 특정 에러에서 발생합니다. 잘못된 키 지정과 같은 일반적인 매핑 에러에 대해서는 "
":exc:`KeyError`\\가 발생합니다."

#: ../../library/dbm.rst:414
msgid ""
"Open a :mod:`!dbm.dumb` database. The returned database object behaves "
"similar to a :term:`mapping`, in addition to providing "
":meth:`~dumbdbm.sync` and :meth:`~dumbdbm.close` methods."
msgstr ""

#: ../../library/dbm.rst:419
#, python-brace-format
msgid ""
"The basename of the database file (without extensions). A new database "
"creates the following files:  - :file:`{filename}.dat` - "
":file:`{filename}.dir`"
msgstr ""

#: ../../library/dbm.rst:420
msgid ""
"The basename of the database file (without extensions). A new database "
"creates the following files:"
msgstr ""

#: ../../library/dbm.rst:423
#, python-brace-format
msgid ":file:`{filename}.dat`"
msgstr ""

#: ../../library/dbm.rst:424
#, python-brace-format
msgid ":file:`{filename}.dir`"
msgstr ""

#: ../../library/dbm.rst:427
msgid ""
"* ``'r'``: |flag_r| * ``'w'``: |flag_w| * ``'c'`` (default): |flag_c| * "
"``'n'``: |flag_n|"
msgstr ""

#: ../../library/dbm.rst:428
msgid "``'r'``: |flag_r|"
msgstr ""

#: ../../library/dbm.rst:430
msgid "``'c'`` (default): |flag_c|"
msgstr ""

#: ../../library/dbm.rst:437
msgid ""
"It is possible to crash the Python interpreter when loading a database "
"with a sufficiently large/complex entry due to stack depth limitations in"
" Python's AST compiler."
msgstr ""
"파이썬 AST 컴파일러의 스택 깊이 제한으로 인해, 충분히 큰/복잡한 항목이 있는 데이터베이스를 로드할 때 파이썬 인터프리터가 "
"충돌할 수 있습니다."

#: ../../library/dbm.rst:441
#, fuzzy
msgid ""
":func:`~dbm.dumb.open` always creates a new database when *flag* is "
"``'n'``."
msgstr "flag에 ``'n'`` 값이 있으면, :func:`.open`\\은 항상 새 데이터베이스를 만듭니다."

#: ../../library/dbm.rst:444
msgid ""
"A database opened read-only if *flag* is ``'r'``. A database is not "
"created if it does not exist if *flag* is ``'r'`` or ``'w'``."
msgstr ""

#: ../../library/dbm.rst:451
#, fuzzy
msgid ""
"In addition to the methods provided by the "
":class:`collections.abc.MutableMapping` class, the following methods are "
"provided:"
msgstr ""
":class:`collections.abc.MutableMapping` 클래스가 제공하는 메서드 외에도, "
":class:`dumbdbm` 객체는 다음 메서드를 제공합니다:"

#: ../../library/dbm.rst:457
#, fuzzy
msgid ""
"Synchronize the on-disk directory and data files.  This method is called "
"by the :meth:`shelve.Shelf.sync` method."
msgstr "디스크 상의 디렉터리와 데이터 파일을 동기화합니다. 이 메서드는 :meth:`Shelve.sync` 메서드에 의해 호출됩니다."

#: ../../library/dbm.rst:462
#, fuzzy
msgid "Close the database."
msgstr "``ndbm`` 데이터베이스를 닫습니다."

#: ../../library/dbm.rst:388
msgid "databases"
msgstr ""

#~ msgid ""
#~ "Returns one of the following values: "
#~ "``None`` if the file can't be "
#~ "opened because it's unreadable or "
#~ "doesn't exist; the empty string (``''``)"
#~ " if the file's format can't be "
#~ "guessed; or a string containing the "
#~ "required module name, such as "
#~ "``'dbm.ndbm'`` or ``'dbm.gnu'``."
#~ msgstr ""
#~ "다음 값 중 하나를 반환합니다: 읽을 수 없거나"
#~ " 존재하지 않아 파일을 열 수 없으면 ``None``;"
#~ " 파일 형식을 추측할 수 없으면 빈 "
#~ "문자열(``''``); 또는 필요한 모듈 이름을 포함하는 "
#~ "문자열, 가령 ``'dbm.ndbm'``\\이나 ``'dbm.gnu'``."

#~ msgid "Value"
#~ msgstr "값"

#~ msgid "Meaning"
#~ msgstr "의미"

#~ msgid "``'r'``"
#~ msgstr "``'r'``"

#~ msgid "Open existing database for reading only (default)"
#~ msgstr "읽기 전용으로 기존 데이터베이스 열기 (기본값)"

#~ msgid "``'w'``"
#~ msgstr "``'w'``"

#~ msgid "Open existing database for reading and writing"
#~ msgstr "읽고 쓰기 위해 기존 데이터베이스 열기"

#~ msgid "``'c'``"
#~ msgstr "``'c'``"

#~ msgid "Open database for reading and writing, creating it if it doesn't exist"
#~ msgstr "읽고 쓰기 위해 데이터베이스를 열고, 존재하지 않으면 만들기"

#~ msgid "``'n'``"
#~ msgstr "``'n'``"

#~ msgid "Always create a new, empty database, open for reading and writing"
#~ msgstr "읽고 쓰기 위해 항상 새로운 빈 데이터베이스를 만들기"

#~ msgid ""
#~ "The optional *mode* argument is the "
#~ "Unix mode of the file, used only"
#~ " when the database has to be "
#~ "created.  It defaults to octal ``0o666``"
#~ " (and will be modified by the "
#~ "prevailing umask)."
#~ msgstr ""
#~ "선택적 *mode* 인자는 파일의 유닉스 모드이며, "
#~ "데이터베이스를 만들 때만 사용됩니다. 기본값은 8진수 "
#~ "``0o666``\\입니다 (그리고 현재 umask에 의해 수정됩니다)."

#~ msgid ":mod:`dbm.gnu` --- GNU's reinterpretation of dbm"
#~ msgstr ":mod:`dbm.gnu` --- GNU의 dbm 재해석"

#~ msgid ""
#~ "This module is quite similar to "
#~ "the :mod:`dbm` module, but uses the "
#~ "GNU library ``gdbm`` instead to provide"
#~ " some additional functionality.  Please "
#~ "note that the file formats created "
#~ "by :mod:`dbm.gnu` and :mod:`dbm.ndbm` are "
#~ "incompatible."
#~ msgstr ""
#~ "이 모듈은 :mod:`dbm` 모듈과 매우 유사하지만, GNU"
#~ " 라이브러리 ``gdbm``\\을 대신 사용하여 추가 기능을 "
#~ "제공합니다. :mod:`dbm.gnu`\\와 :mod:`dbm.ndbm`\\으로 만든 "
#~ "파일 형식은 서로 호환되지 않음에 유의하십시오."

#~ msgid ""
#~ "The :mod:`dbm.gnu` module provides an "
#~ "interface to the GNU DBM library. "
#~ "``dbm.gnu.gdbm`` objects behave like mappings"
#~ " (dictionaries), except that keys and "
#~ "values are always converted to bytes "
#~ "before storing.  Printing a ``gdbm`` "
#~ "object doesn't print the keys and "
#~ "values, and the :meth:`items` and "
#~ ":meth:`values` methods are not supported."
#~ msgstr ""
#~ ":mod:`dbm.gnu` 모듈은 GNU DBM 라이브러리에 대한 "
#~ "인터페이스를 제공합니다. ``dbm.gnu.gdbm`` 객체는 키와 값이"
#~ " 저장되기 전에 항상 바이트열로 변환된다는 점을 "
#~ "제외하고는 매핑(딕셔너리)처럼 동작합니다. ``gdbm`` 객체를 "
#~ "인쇄해도 키와 값이 인쇄되지 않으며, :meth:`items`\\와"
#~ " :meth:`values` 메서드는 지원되지 않습니다."

#~ msgid ""
#~ "Open a ``gdbm`` database and return "
#~ "a :class:`gdbm` object.  The *filename* "
#~ "argument is the name of the "
#~ "database file."
#~ msgstr ""
#~ "``gdbm`` 데이터베이스를 열고 :class:`gdbm` 객체를 "
#~ "반환합니다. *filename* 인자는 데이터베이스 파일의 이름입니다."

#~ msgid "``'f'``"
#~ msgstr "``'f'``"

#~ msgid "``'s'``"
#~ msgstr "``'s'``"

#~ msgid "``'u'``"
#~ msgstr "``'u'``"

#~ msgid ""
#~ "The optional *mode* argument is the "
#~ "Unix mode of the file, used only"
#~ " when the database has to be "
#~ "created.  It defaults to octal "
#~ "``0o666``."
#~ msgstr ""
#~ "선택적 *mode* 인자는 파일의 유닉스 모드이며, "
#~ "데이터베이스를 만들어야 할 때만 사용됩니다. 기본값은 8진수"
#~ " ``0o666``\\입니다."

#~ msgid ""
#~ "In addition to the dictionary-like "
#~ "methods, ``gdbm`` objects have the "
#~ "following methods:"
#~ msgstr "딕셔너리와 유사한 메서드 외에도, ``gdbm`` 객체에는 다음과 같은 메서드가 있습니다:"

#~ msgid ""
#~ "The :mod:`dbm.ndbm` module provides an "
#~ "interface to the Unix \"(n)dbm\" "
#~ "library. Dbm objects behave like "
#~ "mappings (dictionaries), except that keys "
#~ "and values are always stored as "
#~ "bytes. Printing a ``dbm`` object doesn't"
#~ " print the keys and values, and "
#~ "the :meth:`items` and :meth:`values` methods"
#~ " are not supported."
#~ msgstr ""
#~ ":mod:`dbm.ndbm` 모듈은 유닉스 \"(n) dbm\" "
#~ "라이브러리에 대한 인터페이스를 제공합니다. Dbm 객체는 키와"
#~ " 값이 항상 바이트열로 저장된다는 점을 제외하고는, "
#~ "매핑(딕셔너리)처럼 동작합니다. ``dbm`` 객체를 인쇄해도 키와"
#~ " 값이 인쇄되지 않으며, :meth:`items`\\와 "
#~ ":meth:`values` 메서드는 지원되지 않습니다."

#~ msgid ""
#~ "This module can be used with the"
#~ " \"classic\" ndbm interface or the "
#~ "GNU GDBM compatibility interface. On "
#~ "Unix, the :program:`configure` script will "
#~ "attempt to locate the appropriate header"
#~ " file to simplify building this "
#~ "module."
#~ msgstr ""
#~ "이 모듈은 \"고전적인\" ndbm 인터페이스나 GNU "
#~ "GDBM 호환 인터페이스로 사용할 수 있습니다. 유닉스에서,"
#~ " :program:`configure` 스크립트는 이 모듈 빌드를 "
#~ "단순화하기 위해 적절한 헤더 파일을 찾습니다."

#~ msgid "The optional *flag* argument must be one of these values:"
#~ msgstr "선택적 *flag* 인자는 다음 값 중 하나여야 합니다:"

#~ msgid ""
#~ "In addition to the dictionary-like "
#~ "methods, ``ndbm`` objects provide the "
#~ "following method:"
#~ msgstr "딕셔너리와 유사한 메서드 외에도, ``ndbm`` 객체는 다음 메서드를 제공합니다:"

#~ msgid ""
#~ "Open a ``dumbdbm`` database and return"
#~ " a dumbdbm object.  The *filename* "
#~ "argument is the basename of the "
#~ "database file (without any specific "
#~ "extensions).  When a dumbdbm database is"
#~ " created, files with :file:`.dat` and "
#~ ":file:`.dir` extensions are created."
#~ msgstr ""
#~ "``dumbdbm`` 데이터베이스를 열고 dumbdbm 객체를 "
#~ "반환합니다. *filename* 인자는 데이터베이스 파일의 베이스 "
#~ "이름입니다 (특정 확장자는 없습니다). dumbdbm 데이터베이스가"
#~ " 만들어질 때, :file:`.dat`\\와 :file:`.dir` 확장자를"
#~ " 가진 파일이 만들어집니다."

#~ msgid ""
#~ "A database opened with flags ``'r'`` "
#~ "is now read-only.  Opening with "
#~ "flags ``'r'`` and ``'w'`` no longer "
#~ "creates a database if it does not"
#~ " exist."
#~ msgstr ""
#~ "플래그 ``'r'``\\로 열린 데이터베이스는 이제 읽기 "
#~ "전용입니다. 플래그 ``'r'``\\과 ``'w'``\\로 열면 존재하지"
#~ " 않을 때 더는 데이터베이스를 만들지 않습니다."

#~ msgid "Close the ``dumbdbm`` database."
#~ msgstr "``dumbdbm`` 데이터베이스를 닫습니다."


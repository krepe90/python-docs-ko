# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/email.charset.rst:2
msgid ":mod:`!email.charset`: Representing character sets"
msgstr ":mod:`!email.charset`: 문자 집합 표현"

#: ../../library/email.charset.rst:7
msgid "**Source code:** :source:`Lib/email/charset.py`"
msgstr "**소스 코드:** :source:`Lib/email/charset.py`"

#: ../../library/email.charset.rst:11
msgid ""
"This module is part of the legacy (``Compat32``) email API.  In the new "
"API only the aliases table is used."
msgstr "이 모듈은 레거시 (``Compat32``) 이메일 API의 일부입니다. 새 API에서는 별칭 표만 사용됩니다."

#: ../../library/email.charset.rst:14
msgid ""
"The remaining text in this section is the original documentation of the "
"module."
msgstr "이 섹션의 나머지 텍스트는 모듈의 원본 설명서입니다."

#: ../../library/email.charset.rst:16
msgid ""
"This module provides a class :class:`Charset` for representing character "
"sets and character set conversions in email messages, as well as a "
"character set registry and several convenience methods for manipulating "
"this registry. Instances of :class:`Charset` are used in several other "
"modules within the :mod:`email` package."
msgstr ""
"이 모듈은 문자 집합 레지스트리와 이 레지스트리를 조작하기 위한 몇 가지 편의 메서드뿐만 아니라, 이메일 메시지의 문자 집합과 문자"
" 집합 변환을 나타내는 :class:`Charset` 클래스를 제공합니다. :class:`Charset` 인스턴스는 "
":mod:`email` 패키지 내의 다른 여러 모듈에서 사용됩니다."

#: ../../library/email.charset.rst:22
msgid "Import this class from the :mod:`email.charset` module."
msgstr ":mod:`email.charset` 모듈에서 이 클래스를 임포트 하십시오."

#: ../../library/email.charset.rst:27
msgid "Map character sets to their email properties."
msgstr "문자 집합을 이메일 속성으로 매핑합니다."

#: ../../library/email.charset.rst:29
msgid ""
"This class provides information about the requirements imposed on email "
"for a specific character set.  It also provides convenience routines for "
"converting between character sets, given the availability of the "
"applicable codecs.  Given a character set, it will do its best to provide"
" information on how to use that character set in an email message in an "
"RFC-compliant way."
msgstr ""
"이 클래스는 특정 문자 집합에 대해 이메일에 요구되는 요구 사항에 대한 정보를 제공합니다. 또한 해당 코덱을 사용할 수 있으면, "
"문자 집합 간 변환을 위한 편의 루틴을 제공합니다. 문자 집합이 주어지면, RFC 호환 방식으로 이메일 메시지에서 해당 문자 집합을"
" 사용하는 방법에 대한 정보를 제공하는 데 최선을 다합니다."

#: ../../library/email.charset.rst:35
msgid ""
"Certain character sets must be encoded with quoted-printable or base64 "
"when used in email headers or bodies.  Certain character sets must be "
"converted outright, and are not allowed in email."
msgstr ""
"이메일 헤더나 본문에 사용될 때 특정 문자 집합은 quoted-printable이나 base64로 인코딩해야 합니다. 특정 문자 "
"집합은 완전히 변환해야 하며, 이메일에서는 허용되지 않습니다."

#: ../../library/email.charset.rst:39
msgid ""
"Optional *input_charset* is as described below; it is always coerced to "
"lower case.  After being alias normalized it is also used as a lookup "
"into the registry of character sets to find out the header encoding, body"
" encoding, and output conversion codec to be used for the character set."
"  For example, if *input_charset* is ``iso-8859-1``, then headers and "
"bodies will be encoded using quoted-printable and no output conversion "
"codec is necessary.  If *input_charset* is ``euc-jp``, then headers will "
"be encoded with base64, bodies will not be encoded, but output text will "
"be converted from the ``euc-jp`` character set to the ``iso-2022-jp`` "
"character set."
msgstr ""
"선택적 *input_charset*\\은 아래에 설명된 것과 같습니다; 항상 소문자로 강제 변환됩니다. 별칭이 정규화된 후에는 문자"
" 집합 레지스트리에서 조회로 사용되어 문자 집합을 위해 사용할 헤더 인코딩, 본문 인코딩 및 출력 변환 코덱을 찾습니다. 예를 "
"들어, *input_charset*\\이 ``iso-8859-1``\\이면, 헤더와 본문은 quoted-printable을 사용하여"
" 인코딩되며 출력 변환 코덱은 필요하지 않습니다. *input_charset*\\이 ``euc-jp``\\면, 헤더는 base64로"
" 인코딩되고, 본문은 인코딩되지 않지만, 출력 텍스트는 ``euc-jp`` 문자 집합에서 ``iso-2022-jp`` 문자 집합으로"
" 변환됩니다."

#: ../../library/email.charset.rst:49
msgid ":class:`Charset` instances have the following data attributes:"
msgstr ":class:`Charset` 인스턴스에는 다음과 같은 데이터 어트리뷰트가 있습니다:"

#: ../../library/email.charset.rst:53
msgid ""
"The initial character set specified.  Common aliases are converted to "
"their *official* email names (e.g. ``latin_1`` is converted to "
"``iso-8859-1``).  Defaults to 7-bit ``us-ascii``."
msgstr ""
"지정된 초기 문자 집합. 일반적인 별칭은 *공식* 이메일 이름으로 변환됩니다 (예를 들어 ``latin_1``\\은 "
"``iso-8859-1``\\로 변환됩니다). 기본값은 7비트 ``us-ascii``\\입니다."

#: ../../library/email.charset.rst:60
msgid ""
"If the character set must be encoded before it can be used in an email "
"header, this attribute will be set to ``charset.QP`` (for quoted-"
"printable), ``charset.BASE64`` (for base64 encoding), or "
"``charset.SHORTEST`` for the shortest of QP or BASE64 encoding. "
"Otherwise, it will be ``None``."
msgstr ""
"문자 집합을 이메일 헤더에서 사용하기 전에 인코딩해야 하면, 이 어트리뷰트는 ``charset.QP`` (quoted-"
"printable), ``charset.BASE64`` (base64 인코딩) 또는 QP나 BASE64 인코딩 중 가장 짧은 것을 "
"뜻하는 ``charset.SHORTEST``\\로 설정됩니다. 그렇지 않으면, ``None``\\이 됩니다."

#: ../../library/email.charset.rst:69
msgid ""
"Same as *header_encoding*, but describes the encoding for the mail "
"message's body, which indeed may be different than the header encoding. "
"``charset.SHORTEST`` is not allowed for *body_encoding*."
msgstr ""
"*header_encoding*\\과 같지만, 메일 메시지 본문의 인코딩을 기술합니다. 헤더 인코딩과 다를 수 있습니다. "
"*body_encoding*\\에는 ``charset.SHORTEST``\\가 허용되지 않습니다."

#: ../../library/email.charset.rst:76
msgid ""
"Some character sets must be converted before they can be used in email "
"headers or bodies.  If the *input_charset* is one of them, this attribute"
" will contain the name of the character set output will be converted to. "
"Otherwise, it will be ``None``."
msgstr ""
"일부 문자 집합은 이메일 헤더나 본문에 사용하기 전에 변환해야 합니다. *input_charset*\\이 그중 하나이면, 이 "
"어트리뷰트에는 출력이 변환될 문자 집합의 이름이 포함됩니다. 그렇지 않으면 ``None``\\이 됩니다."

#: ../../library/email.charset.rst:84
msgid ""
"The name of the Python codec used to convert the *input_charset* to "
"Unicode.  If no conversion codec is necessary, this attribute will be "
"``None``."
msgstr ""
"*input_charset*\\을 유니코드로 변환하는 데 사용되는 파이썬 코덱의 이름. 변환 코덱이 필요하지 않으면, 이 "
"어트리뷰트는 ``None``\\입니다."

#: ../../library/email.charset.rst:91
msgid ""
"The name of the Python codec used to convert Unicode to the "
"*output_charset*.  If no conversion codec is necessary, this attribute "
"will have the same value as the *input_codec*."
msgstr ""
"유니코드를 *output_charset*\\으로 변환하는 데 사용되는 파이썬 코덱의 이름. 변환 코덱이 필요하지 않으면, 이 "
"어트리뷰트의 값은 *input_codec*\\과 같습니다."

#: ../../library/email.charset.rst:96
msgid ":class:`Charset` instances also have the following methods:"
msgstr ":class:`Charset` 인스턴스에는 다음과 같은 메서드도 있습니다:"

#: ../../library/email.charset.rst:100
msgid "Return the content transfer encoding used for body encoding."
msgstr "본문 인코딩에 사용된 콘텐츠 전송 인코딩(content transfer encoding)을 반환합니다."

#: ../../library/email.charset.rst:102
msgid ""
"This is either the string ``quoted-printable`` or ``base64`` depending on"
" the encoding used, or it is a function, in which case you should call "
"the function with a single argument, the Message object being encoded.  "
"The function should then set the :mailheader:`Content-Transfer-Encoding` "
"header itself to whatever is appropriate."
msgstr ""
"사용된 인코딩에 따라 문자열 ``quoted-printable``\\이나 ``base64``\\입니다. 또는 함수일 수 있는데, "
"이때는 인코딩되는 Message 객체를 단일 인자로 함수를 호출해야 합니다. 그러면 함수는 :mailheader:`Content-"
"Transfer-Encoding` 헤더 자체를 적절한 것으로 설정해야 합니다."

#: ../../library/email.charset.rst:108
msgid ""
"Returns the string ``quoted-printable`` if *body_encoding* is ``QP``, "
"returns the string ``base64`` if *body_encoding* is ``BASE64``, and "
"returns the string ``7bit`` otherwise."
msgstr ""
"*body_encoding*\\이 ``QP``\\이면 문자열 ``quoted-printable``\\을 반환하고, "
"*body_encoding*\\이 ``BASE64``\\이면 문자열 ``base64``\\를 반환하고, 그렇지 않으면 문자열 "
"``7bit``\\를 반환합니다."

#: ../../library/email.charset.rst:115
msgid "Return the output character set."
msgstr "출력 문자 집합을 반환합니다."

#: ../../library/email.charset.rst:117
msgid ""
"This is the *output_charset* attribute if that is not ``None``, otherwise"
" it is *input_charset*."
msgstr "``None``\\이 아니라면 *output_charset* 어트리뷰트이고, 그렇지 않으면 *input_charset*\\입니다."

#: ../../library/email.charset.rst:123
msgid "Header-encode the string *string*."
msgstr "문자열 *string*\\을 헤더 인코딩합니다."

#: ../../library/email.charset.rst:125
msgid ""
"The type of encoding (base64 or quoted-printable) will be based on the "
"*header_encoding* attribute."
msgstr "인코딩 유형(base64나 quoted-printable)은 *header_encoding* 어트리뷰트를 기반으로 합니다."

#: ../../library/email.charset.rst:131
msgid "Header-encode a *string* by converting it first to bytes."
msgstr "*string*\\을 먼저 바이트열로 변환하여 헤더 인코딩합니다."

#: ../../library/email.charset.rst:133
msgid ""
"This is similar to :meth:`header_encode` except that the string is fit "
"into maximum line lengths as given by the argument *maxlengths*, which "
"must be an iterator: each element returned from this iterator will "
"provide the next maximum line length."
msgstr ""
"이는 문자열이 인자 *maxlengths*\\에 의해 주어진 최대 줄 길이에 맞춰진다는 점을 제외하고는 "
":meth:`header_encode`\\와 유사합니다. *maxlengths*\\는 이터레이터여야 합니다: 이 이터레이터에서 "
"반환된 각 요소는 다음 최대 줄 길이를 제공합니다."

#: ../../library/email.charset.rst:141
msgid "Body-encode the string *string*."
msgstr "문자열 *string*\\을 본문 인코딩합니다."

#: ../../library/email.charset.rst:143
msgid ""
"The type of encoding (base64 or quoted-printable) will be based on the "
"*body_encoding* attribute."
msgstr "인코딩 유형(base64나 quoted-printable)은 *body_encoding* 어트리뷰트를 기반으로 합니다."

#: ../../library/email.charset.rst:146
msgid ""
"The :class:`Charset` class also provides a number of methods to support "
"standard operations and built-in functions."
msgstr ":class:`Charset` 클래스는 표준 연산과 내장 함수를 지원하는 여러 가지 메서드도 제공합니다."

#: ../../library/email.charset.rst:152
msgid ""
"Returns *input_charset* as a string coerced to lower case. "
":meth:`!__repr__` is an alias for :meth:`!__str__`."
msgstr ""
"*input_charset*\\을 소문자로 강제 변환된 문자열로 반환합니다. :meth:`!__repr__`\\은 "
":meth:`!__str__`\\의 별칭입니다."

#: ../../library/email.charset.rst:158
msgid ""
"This method allows you to compare two :class:`Charset` instances for "
"equality."
msgstr "이 메서드를 사용하면 두 개의 :class:`Charset` 인스턴스가 같은지 비교할 수 있습니다."

#: ../../library/email.charset.rst:164
msgid ""
"This method allows you to compare two :class:`Charset` instances for "
"inequality."
msgstr "이 메서드를 사용하면 두 :class:`Charset` 인스턴스가 다른지 비교할 수 있습니다."

#: ../../library/email.charset.rst:167
msgid ""
"The :mod:`email.charset` module also provides the following functions for"
" adding new entries to the global character set, alias, and codec "
"registries:"
msgstr ""
":mod:`email.charset` 모듈은 또한 전역 문자 집합, 별명 및 코덱 레지스트리에 새 항목을 추가하기 위해 다음 함수를"
" 제공합니다:"

#: ../../library/email.charset.rst:173
msgid "Add character properties to the global registry."
msgstr "전역 레지스트리에 문자 속성을 추가합니다."

#: ../../library/email.charset.rst:175
msgid ""
"*charset* is the input character set, and must be the canonical name of a"
" character set."
msgstr "*charset*\\은 입력 문자 집합이며, 문자 집합의 규범적 이름이어야 합니다."

#: ../../library/email.charset.rst:178
msgid ""
"Optional *header_enc* and *body_enc* is either ``charset.QP`` for quoted-"
"printable, ``charset.BASE64`` for base64 encoding, ``charset.SHORTEST`` "
"for the shortest of quoted-printable or base64 encoding, or ``None`` for "
"no encoding.  ``SHORTEST`` is only valid for *header_enc*. The default is"
" ``None`` for no encoding."
msgstr ""
"선택적 *header_enc*\\와 *body_enc*\\는 quoted-printable의 경우 ``charset.QP``, "
"base64 인코딩의 경우 ``charset.BASE64``, quoted-printable이나 base64 인코딩 중 가장 짧은 "
"것의 경우 ``charset.SHORTEST``, 또는 인코딩이 없으면 ``None``\\입니다. ``SHORTEST``\\는 "
"*header_enc*\\에만 유효합니다. 인코딩이 없으면 기본값은 ``None``\\입니다."

#: ../../library/email.charset.rst:184
msgid ""
"Optional *output_charset* is the character set that the output should be "
"in. Conversions will proceed from input charset, to Unicode, to the "
"output charset when the method :meth:`Charset.convert` is called.  The "
"default is to output in the same character set as the input."
msgstr ""
"선택적 *output_charset*\\은 출력에 적용되어야 하는 문자 집합입니다. :meth:`Charset.convert` "
"메서드가 호출될 때 입력 문자 집합에서 유니코드로, 다시 출력 문자 집합으로 변환이 진행됩니다. 기본값은 입력과 같은 문자 집합으로"
" 출력하는 것입니다."

#: ../../library/email.charset.rst:189
msgid ""
"Both *input_charset* and *output_charset* must have Unicode codec entries"
" in the module's character set-to-codec mapping; use :func:`add_codec` to"
" add codecs the module does not know about.  See the :mod:`codecs` "
"module's documentation for more information."
msgstr ""
"*input_charset*\\과 *output_charset*\\은 모두 모듈의 문자 집합에서 코덱으로의 매핑에 유니코드 코덱 "
"항목이 있어야 합니다; :func:`add_codec`\\을 사용하여 모듈이 모르는 코덱을 추가하십시오. 자세한 내용은 "
":mod:`codecs` 모듈 설명서를 참조하십시오."

#: ../../library/email.charset.rst:194
msgid ""
"The global character set registry is kept in the module global dictionary"
" ``CHARSETS``."
msgstr "전역 문자 집합 레지스트리는 모듈 전역 딕셔너리 ``CHARSETS``\\에 유지됩니다."

#: ../../library/email.charset.rst:200
msgid ""
"Add a character set alias.  *alias* is the alias name, e.g. ``latin-1``. "
"*canonical* is the character set's canonical name, e.g. ``iso-8859-1``."
msgstr ""
"문자 집합 별칭을 추가합니다. *alias*\\는 별칭 이름입니다, 예를 들어 ``latin-1``. *canonical*\\은 "
"문자 집합의 규범적 이름입니다, 예를 들어 ``iso-8859-1``."

#: ../../library/email.charset.rst:203
msgid ""
"The global charset alias registry is kept in the module global dictionary"
" ``ALIASES``."
msgstr "전역 문자 집합 별칭 레지스트리는 모듈 전역 딕셔너리 ``ALIASES``\\에 유지됩니다."

#: ../../library/email.charset.rst:209
msgid ""
"Add a codec that map characters in the given character set to and from "
"Unicode."
msgstr "주어진 문자 집합의 문자를 유니코드와 매핑하는 코덱을 추가합니다."

#: ../../library/email.charset.rst:211
msgid ""
"*charset* is the canonical name of a character set. *codecname* is the "
"name of a Python codec, as appropriate for the second argument to the "
":class:`str`'s :meth:`~str.encode` method."
msgstr ""
"*charset*\\은 문자 집합의 규범적 이름입니다. *codecname*\\은 :class:`str`\\의 "
":meth:`~str.encode` 메서드의 두 번째 인자에 적합한 파이썬 코덱의 이름입니다."


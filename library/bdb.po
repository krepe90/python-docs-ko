# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/bdb.rst:2
#, fuzzy
msgid ":mod:`!bdb` --- Debugger framework"
msgstr ":mod:`bdb` --- 디버거 프레임워크"

#: ../../library/bdb.rst:7
msgid "**Source code:** :source:`Lib/bdb.py`"
msgstr "**소스 코드:** :source:`Lib/bdb.py`"

#: ../../library/bdb.rst:11
msgid ""
"The :mod:`bdb` module handles basic debugger functions, like setting "
"breakpoints or managing execution via the debugger."
msgstr ":mod:`bdb` 모듈은 중단점 설정이나 디버거를 통한 실행 관리와 같은 기본 디버거 기능을 처리합니다."

#: ../../library/bdb.rst:14
msgid "The following exception is defined:"
msgstr "다음 예외가 정의됩니다:"

#: ../../library/bdb.rst:18
msgid "Exception raised by the :class:`Bdb` class for quitting the debugger."
msgstr "디버거를 종료하기 위해 :class:`Bdb` 클래스가 발생시키는 예외."

#: ../../library/bdb.rst:21
msgid "The :mod:`bdb` module also defines two classes:"
msgstr ":mod:`bdb` 모듈은 또한 두 가지 클래스를 정의합니다:"

#: ../../library/bdb.rst:25
msgid ""
"This class implements temporary breakpoints, ignore counts, disabling and"
" (re-)enabling, and conditionals."
msgstr "이 클래스는 임시 중단점, 무시 카운트, 비활성화와 (재) 활성화 및 조건을 구현합니다."

#: ../../library/bdb.rst:28
msgid ""
"Breakpoints are indexed by number through a list called "
":attr:`bpbynumber` and by ``(file, line)`` pairs through :attr:`bplist`."
"  The former points to a single instance of class :class:`Breakpoint`.  "
"The latter points to a list of such instances since there may be more "
"than one breakpoint per line."
msgstr ""
"중단점은 :attr:`bpbynumber`\\라는 리스트를 통해 번호로, :attr:`bplist`\\를 통해 ``(file, "
"line)`` 쌍으로 인덱싱됩니다. 전자는 :class:`Breakpoint` 클래스의 단일 인스턴스를 가리킵니다. 후자는 줄당 "
"하나 이상의 중단점이 있을 수 있어서 이러한 인스턴스의 리스트를 가리킵니다."

#: ../../library/bdb.rst:33
#, fuzzy
msgid ""
"When creating a breakpoint, its associated :attr:`file name <file>` "
"should be in canonical form.  If a :attr:`funcname` is defined, a "
"breakpoint :attr:`hit <hits>` will be counted when the first line of that"
" function is executed.  A :attr:`conditional <cond>` breakpoint always "
"counts a :attr:`hit <hits>`."
msgstr ""
"중단점을 만들 때, 연관된 파일명은 규범적 형식(canonical form)이어야 합니다. *funcname*\\이 정의되면, 해당"
" 함수의 첫 번째 줄이 실행될 때 중단점 적중이 카운트됩니다. 조건부 중단점은 항상 적중을 카운트합니다."

#: ../../library/bdb.rst:39
msgid ":class:`Breakpoint` instances have the following methods:"
msgstr ":class:`Breakpoint` 인스턴스에는 다음과 같은 메서드가 있습니다:"

#: ../../library/bdb.rst:43
msgid ""
"Delete the breakpoint from the list associated to a file/line.  If it is "
"the last breakpoint in that position, it also deletes the entry for the "
"file/line."
msgstr "file/line과 관련된 리스트에서 중단점을 삭제합니다. 해당 위치의 마지막 중단점이면, file/line의 항목도 삭제합니다."

#: ../../library/bdb.rst:50
msgid "Mark the breakpoint as enabled."
msgstr "중단점을 활성화된 것으로 표시합니다."

#: ../../library/bdb.rst:55
msgid "Mark the breakpoint as disabled."
msgstr "중단점을 비활성화된 것으로 표시합니다."

#: ../../library/bdb.rst:60
msgid ""
"Return a string with all the information about the breakpoint, nicely "
"formatted:"
msgstr "멋지게 포맷된, 중단점에 대한 모든 정보가 포함된 문자열을 반환합니다:"

#: ../../library/bdb.rst:63
#, fuzzy
msgid "Breakpoint number."
msgstr "중단점 번호"

#: ../../library/bdb.rst:64
msgid "Temporary status (del or keep)."
msgstr ""

#: ../../library/bdb.rst:65
#, fuzzy
msgid "File/line position."
msgstr "file,line 위치."

#: ../../library/bdb.rst:66
msgid "Break condition."
msgstr ""

#: ../../library/bdb.rst:67
msgid "Number of times to ignore."
msgstr ""

#: ../../library/bdb.rst:68
msgid "Number of times hit."
msgstr ""

#: ../../library/bdb.rst:74
msgid ""
"Print the output of :meth:`bpformat` to the file *out*, or if it is "
"``None``, to standard output."
msgstr ":meth:`bpformat`\\의 출력을 파일 *out*, 또는 ``None``\\이면 표준 출력으로 인쇄합니다."

#: ../../library/bdb.rst:77
#, fuzzy
msgid ":class:`Breakpoint` instances have the following attributes:"
msgstr ":class:`Breakpoint` 인스턴스에는 다음과 같은 메서드가 있습니다:"

#: ../../library/bdb.rst:81
msgid "File name of the :class:`Breakpoint`."
msgstr ""

#: ../../library/bdb.rst:85
msgid "Line number of the :class:`Breakpoint` within :attr:`file`."
msgstr ""

#: ../../library/bdb.rst:89
msgid "``True`` if a :class:`Breakpoint` at (file, line) is temporary."
msgstr ""

#: ../../library/bdb.rst:93
msgid "Condition for evaluating a :class:`Breakpoint` at (file, line)."
msgstr ""

#: ../../library/bdb.rst:97
msgid ""
"Function name that defines whether a :class:`Breakpoint` is hit upon "
"entering the function."
msgstr ""

#: ../../library/bdb.rst:102
msgid "``True`` if :class:`Breakpoint` is enabled."
msgstr ""

#: ../../library/bdb.rst:106
msgid "Numeric index for a single instance of a :class:`Breakpoint`."
msgstr ""

#: ../../library/bdb.rst:110
msgid ""
"Dictionary of :class:`Breakpoint` instances indexed by (:attr:`file`, "
":attr:`line`) tuples."
msgstr ""

#: ../../library/bdb.rst:115
msgid "Number of times to ignore a :class:`Breakpoint`."
msgstr ""

#: ../../library/bdb.rst:119
msgid "Count of the number of times a :class:`Breakpoint` has been hit."
msgstr ""

#: ../../library/bdb.rst:123
msgid "The :class:`Bdb` class acts as a generic Python debugger base class."
msgstr ":class:`Bdb` 클래스는 범용 파이썬 디버거 베이스 클래스 역할을 합니다."

#: ../../library/bdb.rst:125
msgid ""
"This class takes care of the details of the trace facility; a derived "
"class should implement user interaction.  The standard debugger class "
"(:class:`pdb.Pdb`) is an example."
msgstr ""
"이 클래스는 추적 기능의 세부 사항을 처리합니다; 파생 클래스는 사용자 상호 작용을 구현해야 합니다. 표준 디버거 클래스 "
"(:class:`pdb.Pdb`)가 예입니다."

#: ../../library/bdb.rst:129
msgid ""
"The *skip* argument, if given, must be an iterable of glob-style module "
"name patterns.  The debugger will not step into frames that originate in "
"a module that matches one of these patterns. Whether a frame is "
"considered to originate in a certain module is determined by the "
"``__name__`` in the frame globals."
msgstr ""
"*skip* 인자는, 주어지면, glob 스타일 모듈 이름 패턴의 이터러블 이어야 합니다. 디버거는 이러한 패턴 중 하나와 일치하는"
" 모듈에서 시작되는 프레임으로 들어가지 않습니다. 프레임을 특정 모듈에서 시작된 것으로 간주하는지는 프레임 전역의 "
"``__name__``\\에 의해 결정됩니다."

#: ../../library/bdb.rst:135
#, fuzzy
msgid "Added the *skip* parameter."
msgstr "*skip* 인자"

#: ../../library/bdb.rst:138
msgid ""
"The following methods of :class:`Bdb` normally don't need to be "
"overridden."
msgstr ":class:`Bdb`\\의 다음 메서드는 일반적으로 재정의할 필요가 없습니다."

#: ../../library/bdb.rst:142
#, fuzzy
msgid "Return canonical form of *filename*."
msgstr "프레임을 포함하는 파일명의 규범적 형식."

#: ../../library/bdb.rst:144
msgid ""
"For real file names, the canonical form is an operating-system-dependent,"
" :func:`case-normalized <os.path.normcase>` :func:`absolute path "
"<os.path.abspath>`. A *filename* with angle brackets, such as "
"``\"<stdin>\"`` generated in interactive mode, is returned unchanged."
msgstr ""

#: ../../library/bdb.rst:151
#, fuzzy
msgid ""
"Set the :attr:`!botframe`, :attr:`!stopframe`, :attr:`!returnframe` and "
":attr:`quitting <Bdb.set_quit>` attributes with values ready to start "
"debugging."
msgstr ""
"디버깅을 시작할 준비가 된 값으로 :attr:`botframe`, :attr:`stopframe`, "
":attr:`returnframe` 및 :attr:`quitting` 어트리뷰트를 설정합니다."

#: ../../library/bdb.rst:156
msgid ""
"This function is installed as the trace function of debugged frames.  Its"
" return value is the new trace function (in most cases, that is, itself)."
msgstr "이 함수는 디버그되는 프레임의 추적 함수(trace function)로 설치됩니다. 반환 값은 새로운 추적 함수(대부분 자체)입니다."

#: ../../library/bdb.rst:159
msgid ""
"The default implementation decides how to dispatch a frame, depending on "
"the type of event (passed as a string) that is about to be executed. "
"*event* can be one of the following:"
msgstr ""
"기본 구현은 실행되려고 하는 (문자열로 전달된) 이벤트의 유형에 따라 프레임을 디스패치 하는 방법을 결정합니다. *event*\\는"
" 다음 중 하나일 수 있습니다:"

#: ../../library/bdb.rst:163
msgid "``\"line\"``: A new line of code is going to be executed."
msgstr "``\"line\"``: 새로운 코드 줄이 실행되려고 합니다."

#: ../../library/bdb.rst:164
msgid ""
"``\"call\"``: A function is about to be called, or another code block "
"entered."
msgstr "``\"call\"``: 함수가 호출되거나, 다른 코드 블록에 진입하려고 합니다."

#: ../../library/bdb.rst:166
msgid "``\"return\"``: A function or other code block is about to return."
msgstr "``\"return\"``: 함수나 다른 코드 블록이 반환하려고 합니다."

#: ../../library/bdb.rst:167
msgid "``\"exception\"``: An exception has occurred."
msgstr "``\"exception\"``: 예외가 발생했습니다."

#: ../../library/bdb.rst:168
msgid "``\"c_call\"``: A C function is about to be called."
msgstr "``\"c_call\"``: C 함수가 호출되려고 합니다."

#: ../../library/bdb.rst:169
msgid "``\"c_return\"``: A C function has returned."
msgstr "``\"c_return\"``: C 함수가 반환했습니다."

#: ../../library/bdb.rst:170
msgid "``\"c_exception\"``: A C function has raised an exception."
msgstr "``\"c_exception\"``: C 함수가 예외를 발생시켰습니다."

#: ../../library/bdb.rst:172
msgid ""
"For the Python events, specialized functions (see below) are called.  For"
" the C events, no action is taken."
msgstr "파이썬 이벤트의 경우, 특수 함수(아래를 참조하세요)가 호출됩니다. C 이벤트의 경우, 아무런 액션도 취하지 않습니다."

#: ../../library/bdb.rst:175
msgid "The *arg* parameter depends on the previous event."
msgstr "*arg* 매개 변수는 앞의 이벤트에 따라 다릅니다."

#: ../../library/bdb.rst:177
msgid ""
"See the documentation for :func:`sys.settrace` for more information on "
"the trace function.  For more information on code and frame objects, "
"refer to :ref:`types`."
msgstr ""
"추적 함수에 대한 자세한 내용은 :func:`sys.settrace` 설명서를 참조하십시오. 코드와 프레임 객체에 대한 자세한 "
"내용은 :ref:`types`\\을 참조하십시오."

#: ../../library/bdb.rst:183
#, fuzzy
msgid ""
"If the debugger should stop on the current line, invoke the "
":meth:`user_line` method (which should be overridden in subclasses). "
"Raise a :exc:`BdbQuit` exception if the :attr:`quitting  <Bdb.set_quit>` "
"flag is set (which can be set from :meth:`user_line`).  Return a "
"reference to the :meth:`trace_dispatch` method for further tracing in "
"that scope."
msgstr ""
"디버거가 현재 행에서 중지해야 하면, :meth:`user_line` 메서드를 호출하십시오 (서브 클래스에서 재정의되어야 합니다)."
" :attr:`Bdb.quitting` 플래그가 설정되면 (:meth:`user_line`\\에서 설정할 수 있습니다) "
":exc:`BdbQuit` 예외를 발생시킵니다. 해당 스코프에서 추가 추적을 위해 :meth:`trace_dispatch` 메서드에"
" 대한 참조를 반환합니다."

#: ../../library/bdb.rst:191
#, fuzzy
msgid ""
"If the debugger should stop on this function call, invoke the "
":meth:`user_call` method (which should be overridden in subclasses). "
"Raise a :exc:`BdbQuit` exception if the :attr:`quitting  <Bdb.set_quit>` "
"flag is set (which can be set from :meth:`user_call`).  Return a "
"reference to the :meth:`trace_dispatch` method for further tracing in "
"that scope."
msgstr ""
"디버거가 이 함수 호출에서 중지해야 하면, :meth:`user_call` 메서드를 호출하십시오 (서브 클래스에서 재정의되어야 "
"합니다). :attr:`Bdb.quitting` 플래그가 설정되면 (:meth:`user_call`\\에서 설정할 수 있습니다) "
":exc:`BdbQuit` 예외를 발생시킵니다. 해당 스코프에서 추가 추적을 위해 :meth:`trace_dispatch` 메서드에"
" 대한 참조를 반환합니다."

#: ../../library/bdb.rst:199
#, fuzzy
msgid ""
"If the debugger should stop on this function return, invoke the "
":meth:`user_return` method (which should be overridden in subclasses). "
"Raise a :exc:`BdbQuit` exception if the :attr:`quitting  <Bdb.set_quit>` "
"flag is set (which can be set from :meth:`user_return`).  Return a "
"reference to the :meth:`trace_dispatch` method for further tracing in "
"that scope."
msgstr ""
"디버거가 이 함수 반환에서 중지해야 하면, :meth:`user_return` 메서드를 호출하십시오 (서브 클래스에서 재정의되어야 "
"합니다). :attr:`Bdb.quitting` 플래그가 설정되면 (:meth:`user_return`\\에서 설정할 수 있습니다)"
" :exc:`BdbQuit` 예외를 발생시킵니다. 해당 스코프에서 추가 추적을 위해 :meth:`trace_dispatch` "
"메서드에 대한 참조를 반환합니다."

#: ../../library/bdb.rst:207
#, fuzzy
msgid ""
"If the debugger should stop at this exception, invokes the "
":meth:`user_exception` method (which should be overridden in subclasses)."
" Raise a :exc:`BdbQuit` exception if the :attr:`quitting  <Bdb.set_quit>`"
" flag is set (which can be set from :meth:`user_exception`).  Return a "
"reference to the :meth:`trace_dispatch` method for further tracing in "
"that scope."
msgstr ""
"디버거가 이 예외에서 중지해야 하면, :meth:`user_exception` 메서드를 호출하십시오 (서브 클래스에서 재정의되어야 "
"합니다). :attr:`Bdb.quitting` 플래그가 설정되면 (:meth:`user_exception`\\에서 설정할 수 "
"있습니다) :exc:`BdbQuit` 예외를 발생시킵니다. 해당 스코프에서 추가 추적을 위해 "
":meth:`trace_dispatch` 메서드에 대한 참조를 반환합니다."

#: ../../library/bdb.rst:213
msgid ""
"Normally derived classes don't override the following methods, but they "
"may if they want to redefine the definition of stopping and breakpoints."
msgstr "일반적으로 파생된 클래스는 다음 메서드를 재정의하지 않지만, 중지와 중단점의 정의를 재정의하려고 하면 그럴 수 있습니다."

#: ../../library/bdb.rst:218
msgid "Return ``True`` if *module_name* matches any skip pattern."
msgstr ""

#: ../../library/bdb.rst:222
msgid "Return ``True`` if *frame* is below the starting frame in the stack."
msgstr ""

#: ../../library/bdb.rst:226
msgid "Return ``True`` if there is an effective breakpoint for this line."
msgstr ""

#: ../../library/bdb.rst:228
msgid ""
"Check whether a line or function breakpoint exists and is in effect.  "
"Delete temporary breakpoints based on information from :func:`effective`."
msgstr ""

#: ../../library/bdb.rst:233
msgid "Return ``True`` if any breakpoint exists for *frame*'s filename."
msgstr ""

#: ../../library/bdb.rst:235
msgid ""
"Derived classes should override these methods to gain control over "
"debugger operation."
msgstr "파생 클래스는 디버거 연산을 제어하기 위해 이 메서드를 재정의해야 합니다."

#: ../../library/bdb.rst:240
#, fuzzy
msgid ""
"Called from :meth:`dispatch_call` if a break might stop inside the called"
" function."
msgstr "이 메서드는 호출된 함수 내부 어디에서나 중단이 필요할 수 있을 때 :meth:`dispatch_call`\\에서 호출됩니다."

#: ../../library/bdb.rst:243
msgid ""
"*argument_list* is not used anymore and will always be ``None``. The "
"argument is kept for backwards compatibility."
msgstr ""

#: ../../library/bdb.rst:248
#, fuzzy
msgid ""
"Called from :meth:`dispatch_line` when either :meth:`stop_here` or "
":meth:`break_here` returns ``True``."
msgstr ""
"이 메서드는 :meth:`stop_here`\\나 :meth:`break_here`\\가 ``True``\\를 산출할 때 "
":meth:`dispatch_line`\\에서 호출됩니다."

#: ../../library/bdb.rst:253
#, fuzzy
msgid ""
"Called from :meth:`dispatch_return` when :meth:`stop_here` returns "
"``True``."
msgstr ""
"이 메서드는 :meth:`stop_here`\\가 ``True``\\를 산출할 때 :meth:`dispatch_return`\\에서"
" 호출됩니다."

#: ../../library/bdb.rst:257
#, fuzzy
msgid ""
"Called from :meth:`dispatch_exception` when :meth:`stop_here` returns "
"``True``."
msgstr ""
"이 메서드는 :meth:`stop_here`\\가 ``True``\\를 산출할 때 "
":meth:`dispatch_exception`\\에서 호출됩니다."

#: ../../library/bdb.rst:262
msgid "Handle how a breakpoint must be removed when it is a temporary one."
msgstr "중단점이 일시적일 때 중단점을 제거하는 방법을 처리합니다."

#: ../../library/bdb.rst:264
msgid "This method must be implemented by derived classes."
msgstr "이 메서드는 파생 클래스에서 구현해야 합니다."

#: ../../library/bdb.rst:267
msgid ""
"Derived classes and clients can call the following methods to affect the "
"stepping state."
msgstr "파생 클래스와 클라이언트는 다음 메서드를 호출하여 스테핑(stepping) 상태에 영향을 줄 수 있습니다."

#: ../../library/bdb.rst:272
msgid "Stop after one line of code."
msgstr "한 줄의 코드 후에 멈춥니다."

#: ../../library/bdb.rst:276
msgid "Stop on the next line in or below the given frame."
msgstr "주어진 프레임 내 또는 아래의 다음 줄에서 멈춥니다."

#: ../../library/bdb.rst:280
msgid "Stop when returning from the given frame."
msgstr "주어진 프레임에서 반환할 때 멈춥니다."

#: ../../library/bdb.rst:284
#, fuzzy
msgid ""
"Stop when the line with the *lineno* greater than the current one is "
"reached or when returning from current frame."
msgstr "현재 줄보다 크지 않은 줄에 도달하거나 현재 프레임에서 반환할 때 멈춥니다."

#: ../../library/bdb.rst:289
msgid ""
"Start debugging from *frame*.  If *frame* is not specified, debugging "
"starts from caller's frame."
msgstr "*frame*\\에서 디버깅을 시작합니다. *frame*\\을 지정하지 않으면 호출자의 프레임에서 디버깅을 시작합니다."

#: ../../library/bdb.rst:292
msgid ""
":func:`set_trace` will enter the debugger immediately, rather than on the"
" next line of code to be executed."
msgstr ""

#: ../../library/bdb.rst:298
msgid ""
"Stop only at breakpoints or when finished.  If there are no breakpoints, "
"set the system trace function to ``None``."
msgstr "중단점에서나 완료 시에만 멈춥니다. 중단점이 없으면, 시스템 추적 함수를 ``None``\\으로 설정합니다."

#: ../../library/bdb.rst:305
#, fuzzy
msgid ""
"Set the :attr:`!quitting` attribute to ``True``.  This raises "
":exc:`BdbQuit` in the next call to one of the :meth:`!dispatch_\\*` "
"methods."
msgstr ""
":attr:`quitting` 어트리뷰트를 ``True``\\로 설정합니다. 다음에 :meth:`dispatch_\\*` 메서드 중"
" 하나를 호출할 때 :exc:`BdbQuit`\\가 발생합니다."

#: ../../library/bdb.rst:309
msgid ""
"Derived classes and clients can call the following methods to manipulate "
"breakpoints.  These methods return a string containing an error message "
"if something went wrong, or ``None`` if all is well."
msgstr ""
"파생 클래스와 클라이언트는 다음 메서드를 호출하여 중단점을 조작할 수 있습니다. 이 메서드는 문제가 발생하면 에러 메시지가 포함된 "
"문자열을 반환하고, 모두 정상이면 ``None``\\을 반환합니다."

#: ../../library/bdb.rst:315
msgid ""
"Set a new breakpoint.  If the *lineno* line doesn't exist for the "
"*filename* passed as argument, return an error message.  The *filename* "
"should be in canonical form, as described in the :meth:`canonic` method."
msgstr ""
"새로운 중단점을 설정합니다. 인자로 전달된 *filename*\\에 *lineno* 줄이 없으면 에러 메시지를 반환합니다. "
":meth:`canonic` 메서드에 설명된 대로 *filename*\\은 규범적 형식이어야 합니다."

#: ../../library/bdb.rst:321
#, fuzzy
msgid ""
"Delete the breakpoints in *filename* and *lineno*.  If none were set, "
"return an error message."
msgstr "*filename*\\과 *lineno*\\에서 중단점을 삭제합니다. 설정되지 않았으면, 에러 오류 메시지가 반환됩니다."

#: ../../library/bdb.rst:326
msgid ""
"Delete the breakpoint which has the index *arg* in the "
":attr:`Breakpoint.bpbynumber`.  If *arg* is not numeric or out of range, "
"return an error message."
msgstr ""
":attr:`Breakpoint.bpbynumber`\\에서 인덱스 *arg*\\인 중단점을 삭제합니다. *arg*\\가 숫자가 "
"아니거나 범위를 벗어나면, 에러 메시지를 반환합니다."

#: ../../library/bdb.rst:332
#, fuzzy
msgid ""
"Delete all breakpoints in *filename*.  If none were set, return an error "
"message."
msgstr "*filename*\\에서 모든 중단점을 삭제합니다. 설정되지 않았으면, 에러 메시지가 반환됩니다."

#: ../../library/bdb.rst:337
#, fuzzy
msgid ""
"Delete all existing breakpoints.  If none were set, return an error "
"message."
msgstr "*filename*\\에서 모든 중단점을 삭제합니다. 설정되지 않았으면, 에러 메시지가 반환됩니다."

#: ../../library/bdb.rst:342
msgid ""
"Return a breakpoint specified by the given number.  If *arg* is a string,"
" it will be converted to a number.  If *arg* is a non-numeric string, if "
"the given breakpoint never existed or has been deleted, a "
":exc:`ValueError` is raised."
msgstr ""
"주어진 숫자로 지정된 중단점을 반환합니다. *arg*\\가 문자열이면, 숫자로 변환됩니다. *arg*\\가 숫자가 아닌 문자열이면,"
" 지정된 중단점이 존재하지 않거나 삭제되었으면, :exc:`ValueError`\\가 발생합니다."

#: ../../library/bdb.rst:351
#, fuzzy
msgid "Return ``True`` if there is a breakpoint for *lineno* in *filename*."
msgstr "*filename*\\의 *lineno*\\에 중단점이 있는지 확인합니다."

#: ../../library/bdb.rst:355
msgid ""
"Return all breakpoints for *lineno* in *filename*, or an empty list if "
"none are set."
msgstr "*filename*\\의 *lineno*\\에 있는 모든 중단점을 반환하거나, 없으면 빈 리스트를 반환합니다."

#: ../../library/bdb.rst:360
msgid "Return all breakpoints in *filename*, or an empty list if none are set."
msgstr "*filename*\\의 모든 중단점을 반환하거나, 없으면 빈 리스트를 반환합니다."

#: ../../library/bdb.rst:364
msgid "Return all breakpoints that are set."
msgstr "설정된 모든 중단점을 반환합니다."

#: ../../library/bdb.rst:367
msgid ""
"Derived classes and clients can call the following methods to get a data "
"structure representing a stack trace."
msgstr "파생 클래스와 클라이언트는 다음 메서드를 호출하여 스택 추적을 나타내는 데이터 구조를 얻을 수 있습니다."

#: ../../library/bdb.rst:372
msgid "Return a list of (frame, lineno) tuples in a stack trace, and a size."
msgstr ""

#: ../../library/bdb.rst:374
msgid ""
"The most recently called frame is last in the list. The size is the "
"number of frames below the frame where the debugger was invoked."
msgstr ""

#: ../../library/bdb.rst:379
#, fuzzy
msgid ""
"Return a string with information about a stack entry, which is a "
"``(frame, lineno)`` tuple.  The return string contains:"
msgstr "``(frame, lineno)`` 튜플로 식별되는 스택 항목에 대한 정보가 포함된 문자열을 반환합니다.:"

#: ../../library/bdb.rst:382
#, fuzzy
msgid "The canonical filename which contains the frame."
msgstr "프레임을 포함하는 파일명의 규범적 형식."

#: ../../library/bdb.rst:383
#, fuzzy
msgid "The function name or ``\"<lambda>\"``."
msgstr "함수 이름, 또는 ``\"<lambda>\"``."

#: ../../library/bdb.rst:384
msgid "The input arguments."
msgstr "입력 인자."

#: ../../library/bdb.rst:385
msgid "The return value."
msgstr "반환 값."

#: ../../library/bdb.rst:386
msgid "The line of code (if it exists)."
msgstr "코드 줄 (있으면)."

#: ../../library/bdb.rst:389
msgid ""
"The following two methods can be called by clients to use a debugger to "
"debug a :term:`statement`, given as a string."
msgstr ""
"클라이언트가 문자열로 지정된 :term:`statement`\\를 디버깅하기 위해 디버거를 사용하려면 다음 두 가지 메서드를 호출할"
" 수 있습니다."

#: ../../library/bdb.rst:394
#, fuzzy
msgid ""
"Debug a statement executed via the :func:`exec` function.  *globals* "
"defaults to :attr:`!__main__.__dict__`, *locals* defaults to *globals*."
msgstr ""
":func:`exec` 함수를 통해 실행된 문장을 디버그합니다. *globals*\\의 기본값은 "
":attr:`__main__.__dict__`\\이고, *locals*\\의 기본값은 *globals*\\입니다."

#: ../../library/bdb.rst:399
msgid ""
"Debug an expression executed via the :func:`eval` function.  *globals* "
"and *locals* have the same meaning as in :meth:`run`."
msgstr ""
":func:`eval` 함수를 통해 실행된 표현식을 디버그합니다. *globals*\\와 *locals*\\는 "
":meth:`run`\\과 같은 의미입니다."

#: ../../library/bdb.rst:404
msgid "For backwards compatibility.  Calls the :meth:`run` method."
msgstr "이전 버전과의 호환성을 위해. :meth:`run` 메서드를 호출합니다."

#: ../../library/bdb.rst:408
msgid "Debug a single function call, and return its result."
msgstr "단일 함수 호출을 디버그하고, 결과를 반환합니다."

#: ../../library/bdb.rst:411
msgid "Finally, the module defines the following functions:"
msgstr "마지막으로, 모듈은 다음과 같은 함수를 정의합니다:"

#: ../../library/bdb.rst:415
#, fuzzy
msgid ""
"Return ``True`` if we should break here, depending on the way the "
":class:`Breakpoint` *b* was set."
msgstr "중단점 *b*\\가 설정된 방식에 따라, 우리가 여기서 중단해야 하는지를 확인합니다."

#: ../../library/bdb.rst:418
#, fuzzy
msgid ""
"If it was set via line number, it checks if :attr:`b.line "
"<bdb.Breakpoint.line>` is the same as the one in *frame*. If the "
"breakpoint was set via :attr:`function name <bdb.Breakpoint.funcname>`, "
"we have to check we are in the right *frame* (the right function) and if "
"we are on its first executable line."
msgstr ""
"줄 번호를 통해 설정되었으면, ``b.line``\\이 인자로 전달된 프레임의 것과 같은지 확인합니다. 함수 이름을 통해 중단점이 "
"설정되었으면, 우리는 올바른 프레임(올바른 함수)에 있는지와 그것의 첫 번째 실행 가능한 줄에 있는지 확인해야 합니다."

#: ../../library/bdb.rst:427
msgid ""
"Return ``(active breakpoint, delete temporary flag)`` or ``(None, None)``"
" as the breakpoint to act upon."
msgstr ""

#: ../../library/bdb.rst:430
msgid ""
"The *active breakpoint* is the first entry in :attr:`bplist "
"<bdb.Breakpoint.bplist>` for the (:attr:`file <bdb.Breakpoint.file>`, "
":attr:`line <bdb.Breakpoint.line>`) (which must exist) that is "
":attr:`enabled <bdb.Breakpoint.enabled>`, for which :func:`checkfuncname`"
" is true, and that has neither a false :attr:`condition "
"<bdb.Breakpoint.cond>` nor positive :attr:`ignore "
"<bdb.Breakpoint.ignore>` count.  The *flag*, meaning that a temporary "
"breakpoint should be deleted, is ``False`` only when the :attr:`cond "
"<bdb.Breakpoint.cond>` cannot be evaluated (in which case, :attr:`ignore "
"<bdb.Breakpoint.ignore>` count is ignored)."
msgstr ""

#: ../../library/bdb.rst:441
msgid "If no such entry exists, then ``(None, None)`` is returned."
msgstr ""

#: ../../library/bdb.rst:446
msgid "Start debugging with a :class:`Bdb` instance from caller's frame."
msgstr "호출자의 프레임에서 :class:`Bdb` 인스턴스로 디버깅을 시작합니다."

#: ../../library/bdb.rst:303
msgid "quitting (bdb.Bdb attribute)"
msgstr ""

#~ msgid "If it is temporary or not."
#~ msgstr "일시적인지 아닌지."

#~ msgid "The condition that causes a break."
#~ msgstr "중단을 일으키는 조건."

#~ msgid "If it must be ignored the next N times."
#~ msgstr "다음 N 번 무시해야 하는지 여부."

#~ msgid "The breakpoint hit count."
#~ msgstr "중단점 적중 횟수."

#~ msgid ""
#~ "Auxiliary method for getting a filename"
#~ " in a canonical form, that is, "
#~ "as a case-normalized (on case-"
#~ "insensitive filesystems) absolute path, "
#~ "stripped of surrounding angle brackets."
#~ msgstr ""
#~ "파일명을 규범적 형식, 즉 주변 화살 괄호(angle "
#~ "brackets)를 제거한 케이스 정규화된(case-normalized) "
#~ "(대소 문자를 구분하지 않는 파일 시스템에서) 절대 "
#~ "경로로 얻는 보조 메서드."

#~ msgid ""
#~ "This method checks if the *frame* "
#~ "is somewhere below :attr:`botframe` in "
#~ "the call stack.  :attr:`botframe` is the"
#~ " frame in which debugging started."
#~ msgstr ""
#~ "이 메서드는 *frame*\\이 호출 스택에서 "
#~ ":attr:`botframe` 아래 어딘가에 있는지 확인합니다. "
#~ ":attr:`botframe`\\은 디버깅이 시작된 프레임입니다."

#~ msgid ""
#~ "This method checks if there is a"
#~ " breakpoint in the filename and line"
#~ " belonging to *frame* or, at least,"
#~ " in the current function.  If the "
#~ "breakpoint is a temporary one, this "
#~ "method deletes it."
#~ msgstr ""
#~ "이 메서드는 *frame*\\에 속하는 파일명과 줄에, 또는"
#~ " 적어도 현재 함수에 중단점이 있는지 확인합니다. "
#~ "중단점이 일시적이면 이 메서드는 그것을 삭제합니다."

#~ msgid ""
#~ "This method checks if there is a"
#~ " breakpoint in the filename of the"
#~ " current frame."
#~ msgstr "이 메서드는 현재 프레임의 파일명에 중단점이 있는지 확인합니다."

#~ msgid "Delete all existing breakpoints."
#~ msgstr "기존 중단점을 모두 삭제합니다."

#~ msgid ""
#~ "Get a list of records for a "
#~ "frame and all higher (calling) and "
#~ "lower frames, and the size of the"
#~ " higher part."
#~ msgstr "프레임과 모든 상위(호출하는)와 하위 프레임에 대한 레코드 리스트와 상위 부분의 크기를 가져옵니다."

#~ msgid ""
#~ "Determine if there is an effective "
#~ "(active) breakpoint at this line of "
#~ "code. Return a tuple of the "
#~ "breakpoint and a boolean that indicates"
#~ " if it is ok to delete a "
#~ "temporary breakpoint.  Return ``(None, None)``"
#~ " if there is no matching breakpoint."
#~ msgstr ""
#~ "이 코드 줄에 유효 (활성) 중단점이 있는지 "
#~ "확인합니다. 중단점과 임시 중단점을 삭제해도 좋은지를 나타내는"
#~ " 불리언의 튜플을 반환합니다. 일치하는 중단점이 없으면 "
#~ "``(None, None)``\\을 반환합니다."


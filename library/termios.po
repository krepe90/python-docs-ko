# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/termios.rst:2
#, fuzzy
msgid ":mod:`!termios` --- POSIX style tty control"
msgstr ":mod:`termios` --- POSIX 스타일 tty 제어"

#: ../../library/termios.rst:14
msgid ""
"This module provides an interface to the POSIX calls for tty I/O control."
" For a complete description of these calls, see :manpage:`termios(3)` "
"Unix manual page.  It is only available for those Unix versions that "
"support POSIX *termios* style tty I/O control configured during "
"installation."
msgstr ""
"이 모듈은 tty I/O 제어를 위한 POSIX 호출에 대한 인터페이스를 제공합니다. 이 호출에 대한 자세한 설명은 "
":manpage:`termios(3)` 유닉스 매뉴얼 페이지를 참조하십시오. 설치 중에 구성된 POSIX *termios* 스타일 "
"tty I/O 제어를 지원하는 유닉스 버전에서만 사용할 수 있습니다."

#: ../../library/termios.rst:19
msgid "Availability"
msgstr ""

#: ../../library/termios.rst:21
msgid ""
"All functions in this module take a file descriptor *fd* as their first "
"argument.  This can be an integer file descriptor, such as returned by "
"``sys.stdin.fileno()``, or a :term:`file object`, such as ``sys.stdin`` "
"itself."
msgstr ""
"이 모듈의 모든 함수는 첫 번째 인자로 파일 기술자 *fd*\\를 받아들입니다. ``sys.stdin.fileno()``\\에 의해"
" 반환된 것과 같은 정수 파일 기술자이거나, ``sys.stdin`` 자체와 같은 :term:`파일 객체 <file object>`"
" 일 수 있습니다."

#: ../../library/termios.rst:25
msgid ""
"This module also defines all the constants needed to work with the "
"functions provided here; these have the same name as their counterparts "
"in C.  Please refer to your system documentation for more information on "
"using these terminal control interfaces."
msgstr ""
"이 모듈은 여기에 제공된 함수로 작업하는 데 필요한 모든 상수도 정의합니다; 이것들은 C에 있는 것들과 같은 이름을 가집니다. 이 "
"터미널 제어 인터페이스의 사용에 대한 자세한 내용은 시스템 설명서를 참조하십시오."

#: ../../library/termios.rst:30
msgid "The module defines the following functions:"
msgstr "모듈은 다음 함수를 정의합니다:"

#: ../../library/termios.rst:35
msgid ""
"Return a list containing the tty attributes for file descriptor *fd*, as "
"follows: ``[iflag, oflag, cflag, lflag, ispeed, ospeed, cc]`` where *cc* "
"is a list of the tty special characters (each a string of length 1, "
"except the items with indices :const:`VMIN` and :const:`VTIME`, which are"
" integers when these fields are defined).  The interpretation of the "
"flags and the speeds as well as the indexing in the *cc* array must be "
"done using the symbolic constants defined in the :mod:`termios` module."
msgstr ""
"다음과 같이 파일 기술자 *fd*\\에 대한 tty 어트리뷰트를 포함하는 리스트를 반환합니다: ``[iflag, oflag, "
"cflag, lflag, ispeed, ospeed, cc]``. 여기서 *cc*\\는 tty 특수 문자 리스트입니다 (각기 길이 "
"1인 문자열인데, 인덱스가 :const:`VMIN` 과 :const:`VTIME` 인 항목은 예외인데, 이 필드가 정의될 때 "
"정수입니다). *cc* 배열의 인덱싱뿐만 아니라 플래그와 속도의 해석은 :mod:`termios` 모듈에 정의된 기호 상수를 "
"사용해서 이루어져야 합니다."

#: ../../library/termios.rst:46
#, fuzzy
msgid ""
"Set the tty attributes for file descriptor *fd* from the *attributes*, "
"which is a list like the one returned by :func:`tcgetattr`.  The *when* "
"argument determines when the attributes are changed:"
msgstr ""
"파일 기술자 *fd*\\에 대한 tty 어트리뷰트를 *attributes*\\로 설정합니다. *attributes*\\는 "
":func:`tcgetattr`\\에 의해 반환된 것과 같은 리스트입니다. *when* 인자는 언제 어트리뷰트가 변경되는지를 "
"결정합니다: 즉시 변경하려면 :const:`TCSANOW`, 계류 중인 모든 출력을 전송한 후에 변경하려면 "
":const:`TCSADRAIN`, 계류 중인 모든 출력을 전송하고 계류 중인 모든 입력을 버린 후 변경하려면 "
":const:`TCSAFLUSH`."

#: ../../library/termios.rst:52
msgid "Change attributes immediately."
msgstr ""

#: ../../library/termios.rst:56
msgid "Change attributes after transmitting all queued output."
msgstr ""

#: ../../library/termios.rst:60
msgid ""
"Change attributes after transmitting all queued output and discarding all"
" queued input."
msgstr ""

#: ../../library/termios.rst:66
msgid ""
"Send a break on file descriptor *fd*.  A zero *duration* sends a break "
"for 0.25--0.5 seconds; a nonzero *duration* has a system dependent "
"meaning."
msgstr ""
"파일 기술자 *fd*\\에 브레이크(break)를 보냅니다. 0 *duration*\\은 0.25--0.5 초 동안 브레이크를 "
"보냅니다; 0이 아닌 *duration*\\은 시스템 종속적인 의미가 있습니다."

#: ../../library/termios.rst:72
msgid ""
"Wait until all output written to file descriptor *fd* has been "
"transmitted."
msgstr "파일 기술자 *fd*\\에 기록된 모든 출력이 전송될 때까지 기다립니다."

#: ../../library/termios.rst:77
msgid ""
"Discard queued data on file descriptor *fd*.  The *queue* selector "
"specifies which queue: :const:`TCIFLUSH` for the input queue, "
":const:`TCOFLUSH` for the output queue, or :const:`TCIOFLUSH` for both "
"queues."
msgstr ""
"파일 기술자 *fd*\\에 계류 중인 데이터를 버립니다. *queue* 선택기는 어떤 큐인지를 지정합니다: 입력 큐는 "
":const:`TCIFLUSH`, 출력 큐는 :const:`TCOFLUSH` 또는 두 큐 모두는 :const:`TCIOFLUSH`."

#: ../../library/termios.rst:84
msgid ""
"Suspend or resume input or output on file descriptor *fd*.  The *action* "
"argument can be :const:`TCOOFF` to suspend output, :const:`TCOON` to "
"restart output, :const:`TCIOFF` to suspend input, or :const:`TCION` to "
"restart input."
msgstr ""
"파일 기술자 *fd*\\에서 입력 또는 출력을 일시 중단하거나 다시 시작합니다. *action* 인자는 출력을 일시 중단하는 "
":const:`TCOOFF`, 출력을 다시 시작하는 :const:`TCOON`, 입력을 일시 중단하는 :const:`TCIOFF` "
"또는 입력을 다시 시작하는 :const:`TCION`\\가 될 수 있습니다."

#: ../../library/termios.rst:91
msgid ""
"Return a tuple ``(ws_row, ws_col)`` containing the tty window size for "
"file descriptor *fd*. Requires :const:`termios.TIOCGWINSZ` or "
":const:`termios.TIOCGSIZE`."
msgstr ""

#: ../../library/termios.rst:100
msgid ""
"Set the tty window size for file descriptor *fd* from *winsize*, which is"
" a two-item tuple ``(ws_row, ws_col)`` like the one returned by "
":func:`tcgetwinsize`. Requires at least one of the pairs "
"(:const:`termios.TIOCGWINSZ`, :const:`termios.TIOCSWINSZ`); "
"(:const:`termios.TIOCGSIZE`, :const:`termios.TIOCSSIZE`) to be defined."
msgstr ""

#: ../../library/termios.rst:111
msgid "Module :mod:`tty`"
msgstr "모듈 :mod:`tty`"

#: ../../library/termios.rst:112
msgid "Convenience functions for common terminal control operations."
msgstr "공통 터미널 제어 연산을 위한 편리 함수."

#: ../../library/termios.rst:118
msgid "Example"
msgstr "예제"

#: ../../library/termios.rst:120
msgid ""
"Here's a function that prompts for a password with echoing turned off.  "
"Note the technique using a separate :func:`tcgetattr` call and a "
":keyword:`try` ... :keyword:`finally` statement to ensure that the old "
"tty attributes are restored exactly no matter what happens::"
msgstr ""
"이것은 에코가 꺼진 상태에서 암호를 묻는 함수입니다. 별도의 :func:`tcgetattr` 호출과 :keyword:`try` "
"... :keyword:`finally` 문을 사용하여 이전 tty 어트리뷰트가 어떤 일이 발생하든 정확하게 복원되도록 하는 것에 "
"유의하십시오::"

#: ../../library/termios.rst:125
msgid ""
"def getpass(prompt=\"Password: \"):\n"
"    import termios, sys\n"
"    fd = sys.stdin.fileno()\n"
"    old = termios.tcgetattr(fd)\n"
"    new = termios.tcgetattr(fd)\n"
"    new[3] = new[3] & ~termios.ECHO          # lflags\n"
"    try:\n"
"        termios.tcsetattr(fd, termios.TCSADRAIN, new)\n"
"        passwd = input(prompt)\n"
"    finally:\n"
"        termios.tcsetattr(fd, termios.TCSADRAIN, old)\n"
"    return passwd"
msgstr ""

#: ../../library/termios.rst:8
msgid "POSIX"
msgstr ""

#: ../../library/termios.rst:8
msgid "I/O control"
msgstr ""

#: ../../library/termios.rst:8
msgid "tty"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/syslog.rst:2
#, fuzzy
msgid ":mod:`!syslog` --- Unix syslog library routines"
msgstr ":mod:`syslog` --- 유닉스 syslog 라이브러리 루틴"

#: ../../library/syslog.rst:10
msgid ""
"This module provides an interface to the Unix ``syslog`` library "
"routines. Refer to the Unix manual pages for a detailed description of "
"the ``syslog`` facility."
msgstr ""
"이 모듈은 유닉스 ``syslog`` 라이브러리 루틴에 대한 인터페이스를 제공합니다. ``syslog`` 기능에 대한 자세한 설명은"
" 유닉스 매뉴얼 페이지를 참조하십시오."

#: ../../library/syslog.rst:14
msgid "Availability"
msgstr "가용성"

#: ../../library/syslog.rst:16
#, fuzzy
msgid ""
"This module wraps the system ``syslog`` family of routines.  A pure "
"Python library that can speak to a syslog server is available in the "
":mod:`logging.handlers` module as "
":class:`~logging.handlers.SysLogHandler`."
msgstr ""
"이 모듈은 시스템 ``syslog`` 계열의 루틴을 감쌉니다. syslog 서버와 통신할 수 있는 순수한 파이썬 라이브러리는 "
":mod:`logging.handlers` 모듈에서 :class:`SysLogHandler`\\로 제공됩니다."

#: ../../library/syslog.rst:20
msgid "The module defines the following functions:"
msgstr "모듈은 다음 함수를 정의합니다:"

#: ../../library/syslog.rst:26
msgid ""
"Send the string *message* to the system logger.  A trailing newline is "
"added if necessary.  Each message is tagged with a priority composed of a"
" *facility* and a *level*.  The optional *priority* argument, which "
"defaults to :const:`LOG_INFO`, determines the message priority.  If the "
"facility is not encoded in *priority* using logical-or (``LOG_INFO | "
"LOG_USER``), the value given in the :func:`openlog` call is used."
msgstr ""
"*message* 문자열을 시스템 로거로 보냅니다. 필요하면 끝에 줄 넘김이 추가됩니다. 각 메시지에는 *시설(facility)* "
"과 *수준(level)*\\으로 구성된 우선순위(priority)로 꼬리표가 붙습니다. 선택적 *priority* 인자(기본값은 "
":const:`LOG_INFO`)는 메시지 우선순위를 결정합니다. 시설이 논리합(``LOG_INFO | LOG_USER``)을 "
"사용하여 *priority*\\로 인코딩되지 않으면, :func:`openlog` 호출에 지정된 값이 사용됩니다."

#: ../../library/syslog.rst:33
#, fuzzy
msgid ""
"If :func:`openlog` has not been called prior to the call to "
":func:`syslog`, :func:`openlog` will be called with no arguments."
msgstr ""
":func:`syslog` 호출 이전에 :func:`openlog`\\가 호출되지 않았으면, 인자 없이 "
"``openlog()``\\가 호출됩니다."

#: ../../library/syslog.rst:36
msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.syslog`` with "
"arguments ``priority``, ``message``."
msgstr ""
"인자 ``priority``, ``message``\\로 :ref:`감사 이벤트 <auditing>` "
"``syslog.syslog``\\를 발생시킵니다."

#: ../../library/syslog.rst:38
msgid ""
"In previous versions, :func:`openlog` would not be called automatically "
"if it wasn't called prior to the call to :func:`syslog`, deferring to the"
" syslog implementation to call ``openlog()``."
msgstr ""

#: ../../library/syslog.rst:43
msgid ""
"This function is restricted in subinterpreters. (Only code that runs in "
"multiple interpreters is affected and the restriction is not relevant for"
" most users.) :func:`openlog` must be called in the main interpreter "
"before :func:`syslog` may be used in a subinterpreter.  Otherwise it will"
" raise :exc:`RuntimeError`."
msgstr ""

#: ../../library/syslog.rst:53
msgid ""
"Logging options of subsequent :func:`syslog` calls can be set by calling "
":func:`openlog`.  :func:`syslog` will call :func:`openlog` with no "
"arguments if the log is not currently open."
msgstr ""
"후속 :func:`syslog` 호출의 로깅 옵션은 :func:`openlog`\\를 호출하여 설정할 수 있습니다. 로그가 현재 "
"열려 있지 않으면 :func:`syslog`\\는 인자 없이 :func:`openlog`\\를 호출합니다."

#: ../../library/syslog.rst:57
msgid ""
"The optional *ident* keyword argument is a string which is prepended to "
"every message, and defaults to ``sys.argv[0]`` with leading path "
"components stripped.  The optional *logoption* keyword argument (default "
"is 0) is a bit field -- see below for possible values to combine.  The "
"optional *facility* keyword argument (default is :const:`LOG_USER`) sets "
"the default facility for messages which do not have a facility explicitly"
" encoded."
msgstr ""
"선택적 *ident* 키워드 인자는 모든 메시지 앞에 추가되는 문자열이며, 기본값은 선행 경로 구성 요소가 제거된 "
"``sys.argv[0]``\\입니다. 선택적 *logoption* 키워드 인자(기본값은 0)는 비트 필드입니다 -- 결합할 수 "
"있는 가능한 값은 아래를 보십시오. 선택적 *facility* 키워드 인자(기본값은 :const:`LOG_USER`)는 명시적으로 "
"인코드 된 시설이 없는 메시지에 대한 기본 시설을 설정합니다."

#: ../../library/syslog.rst:64
msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.openlog`` with "
"arguments ``ident``, ``logoption``, ``facility``."
msgstr ""
"인자 ``ident``, ``logoption``, ``facility``\\로 :ref:`감사 이벤트 <auditing>` "
"``syslog.openlog``\\를 발생시킵니다."

#: ../../library/syslog.rst:66
msgid ""
"In previous versions, keyword arguments were not allowed, and *ident* was"
" required."
msgstr ""

#: ../../library/syslog.rst:70 ../../library/syslog.rst:89
msgid ""
"This function is restricted in subinterpreters. (Only code that runs in "
"multiple interpreters is affected and the restriction is not relevant for"
" most users.) This may only be called in the main interpreter. It will "
"raise :exc:`RuntimeError` if called in a subinterpreter."
msgstr ""

#: ../../library/syslog.rst:80
msgid "Reset the syslog module values and call the system library ``closelog()``."
msgstr "syslog 모듈값을 재설정하고 시스템 라이브러리 ``closelog()``\\를 호출합니다."

#: ../../library/syslog.rst:82
msgid ""
"This causes the module to behave as it does when initially imported.  For"
" example, :func:`openlog` will be called on the first :func:`syslog` call"
" (if :func:`openlog` hasn't already been called), and *ident* and other "
":func:`openlog` parameters are reset to defaults."
msgstr ""
"이것은 모듈이 처음 임포트될 때처럼 작동하도록 합니다. 예를 들어, :func:`openlog`\\는 첫 번째 "
":func:`syslog` 호출에서 호출되며(:func:`openlog`\\가 아직 호출되지 않았다면), *ident* 와 기타 "
":func:`openlog` 매개 변수가 기본값으로 재설정됩니다."

#: ../../library/syslog.rst:87
msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.closelog`` with no "
"arguments."
msgstr "인자 없이 :ref:`감사 이벤트 <auditing>` ``syslog.closelog``\\를 발생시킵니다."

#: ../../library/syslog.rst:99
msgid ""
"Set the priority mask to *maskpri* and return the previous mask value.  "
"Calls to :func:`syslog` with a priority level not set in *maskpri* are "
"ignored. The default is to log all priorities.  The function "
"``LOG_MASK(pri)`` calculates the mask for the individual priority *pri*."
"  The function ``LOG_UPTO(pri)`` calculates the mask for all priorities "
"up to and including *pri*."
msgstr ""
"우선순위 마스크를 *maskpri*\\로 설정하고 이전 마스크값을 반환합니다. *maskpri*\\에 설정되지 않은 우선순위 "
"수준으로 :func:`syslog`\\를 호출하면 무시됩니다. 기본값은 모든 우선순위를 로그 하는 것입니다. 함수 "
"``LOG_MASK(pri)``\\는 개별 우선순위 *pri*\\에 대한 마스크를 계산합니다. 함수 "
"``LOG_UPTO(pri)``\\는 *pri*\\까지의 모든 우선순위에 대한 마스크를 계산합니다."

#: ../../library/syslog.rst:106
msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.setlogmask`` with "
"argument ``maskpri``."
msgstr ""
"인자 ``maskpri``\\로 :ref:`감사 이벤트 <auditing>` ``syslog.setlogmask``\\를 "
"발생시킵니다."

#: ../../library/syslog.rst:108
msgid "The module defines the following constants:"
msgstr "모듈은 다음 상수를 정의합니다:"

#: ../../library/syslog.rst:120
#, fuzzy
msgid "Priority levels (high to low)."
msgstr "우선순위 수준 (높음에서 낮음 순서):"

#: ../../library/syslog.rst:149
msgid ""
"Facilities, depending on availability in ``<syslog.h>`` for "
":const:`LOG_AUTHPRIV`, :const:`LOG_FTP`, :const:`LOG_NETINFO`, "
":const:`LOG_REMOTEAUTH`, :const:`LOG_INSTALL` and :const:`LOG_RAS`."
msgstr ""

#: ../../library/syslog.rst:153
#, fuzzy
msgid ""
"Added :const:`LOG_FTP`, :const:`LOG_NETINFO`, :const:`LOG_REMOTEAUTH`, "
":const:`LOG_INSTALL`, :const:`LOG_RAS`, and :const:`LOG_LAUNCHD`."
msgstr ""
":const:`LOG_PID`, :const:`LOG_CONS`, :const:`LOG_NDELAY` 및 "
"``<syslog.h>``\\에 정의되었으면, :const:`LOG_ODELAY`, :const:`LOG_NOWAIT` 및 "
":const:`LOG_PERROR`."

#: ../../library/syslog.rst:164
#, fuzzy
msgid ""
"Log options, depending on availability in ``<syslog.h>`` for "
":const:`LOG_ODELAY`, :const:`LOG_NOWAIT` and :const:`LOG_PERROR`."
msgstr ""
":const:`LOG_PID`, :const:`LOG_CONS`, :const:`LOG_NDELAY` 및 "
"``<syslog.h>``\\에 정의되었으면, :const:`LOG_ODELAY`, :const:`LOG_NOWAIT` 및 "
":const:`LOG_PERROR`."

#: ../../library/syslog.rst:169
msgid "Examples"
msgstr "예제"

#: ../../library/syslog.rst:172
msgid "Simple example"
msgstr "간단한 예제"

#: ../../library/syslog.rst:174
msgid "A simple set of examples::"
msgstr "간단한 예제 집합::"

#: ../../library/syslog.rst:176
msgid ""
"import syslog\n"
"\n"
"syslog.syslog('Processing started')\n"
"if error:\n"
"    syslog.syslog(syslog.LOG_ERR, 'Processing started')"
msgstr ""

#: ../../library/syslog.rst:182
msgid ""
"An example of setting some log options, these would include the process "
"ID in logged messages, and write the messages to the destination facility"
" used for mail logging::"
msgstr "일부 로그 옵션 설정의 예, 이것은 로그 메시지에 프로세스 ID를 포함하며, 메일 로깅에 사용되는 대상 시설로 메시지를 기록합니다::"

#: ../../library/syslog.rst:186
msgid ""
"syslog.openlog(logoption=syslog.LOG_PID, facility=syslog.LOG_MAIL)\n"
"syslog.syslog('E-mail processing initiated...')"
msgstr ""

#~ msgid ""
#~ "In previous versions, keyword arguments "
#~ "were not allowed, and *ident* was "
#~ "required.  The default for *ident* was"
#~ " dependent on the system libraries, "
#~ "and often was ``python`` instead of "
#~ "the name of the Python program "
#~ "file."
#~ msgstr ""
#~ "이전 버전에서는, 키워드 인자가 허용되지 않았고, "
#~ "*ident*\\가 필수였습니다. *ident*\\의 기본값은 시스템 "
#~ "라이브러리에 따라 달랐으며, 종종 파이썬 프로그램 파일 "
#~ "이름 대신 ``python``\\이었습니다."

#~ msgid ""
#~ ":const:`LOG_EMERG`, :const:`LOG_ALERT`, :const:`LOG_CRIT`,"
#~ " :const:`LOG_ERR`, :const:`LOG_WARNING`, "
#~ ":const:`LOG_NOTICE`, :const:`LOG_INFO`, "
#~ ":const:`LOG_DEBUG`."
#~ msgstr ""
#~ ":const:`LOG_EMERG`, :const:`LOG_ALERT`, :const:`LOG_CRIT`,"
#~ " :const:`LOG_ERR`, :const:`LOG_WARNING`, "
#~ ":const:`LOG_NOTICE`, :const:`LOG_INFO`, "
#~ ":const:`LOG_DEBUG`."

#~ msgid "Facilities:"
#~ msgstr "시설:"

#~ msgid ""
#~ ":const:`LOG_KERN`, :const:`LOG_USER`, :const:`LOG_MAIL`,"
#~ " :const:`LOG_DAEMON`, :const:`LOG_AUTH`, "
#~ ":const:`LOG_LPR`, :const:`LOG_NEWS`, :const:`LOG_UUCP`,"
#~ " :const:`LOG_CRON`, :const:`LOG_SYSLOG`, "
#~ ":const:`LOG_LOCAL0` to :const:`LOG_LOCAL7`, and, "
#~ "if defined in ``<syslog.h>``, "
#~ ":const:`LOG_AUTHPRIV`."
#~ msgstr ""
#~ ":const:`LOG_KERN`, :const:`LOG_USER`, :const:`LOG_MAIL`,"
#~ " :const:`LOG_DAEMON`, :const:`LOG_AUTH`, "
#~ ":const:`LOG_LPR`, :const:`LOG_NEWS`, :const:`LOG_UUCP`,"
#~ " :const:`LOG_CRON`, :const:`LOG_SYSLOG`, "
#~ ":const:`LOG_LOCAL0` ~ :const:`LOG_LOCAL7` 및 "
#~ "``<syslog.h>``\\에 정의되었으면, :const:`LOG_AUTHPRIV`."

#~ msgid "Log options:"
#~ msgstr "로그 옵션:"


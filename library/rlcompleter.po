# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/rlcompleter.rst:2
msgid ":mod:`!rlcompleter` --- Completion function for GNU readline"
msgstr ":mod:`!rlcompleter` --- GNU readline을 위한 완성 함수"

#: ../../library/rlcompleter.rst:9
msgid "**Source code:** :source:`Lib/rlcompleter.py`"
msgstr "**소스 코드:** :source:`Lib/rlcompleter.py`"

#: ../../library/rlcompleter.rst:13
msgid ""
"The :mod:`!rlcompleter` module defines a completion function suitable to "
"be passed to :func:`~readline.set_completer` in the :mod:`readline` "
"module."
msgstr ""
":mod:`!rlcompleter` 모듈은 :mod:`readline` 모듈의 "
":func:`~readline.set_completer`\\로 전달하기에 적합한 완성 함수를 정의합니다."

#: ../../library/rlcompleter.rst:16
msgid ""
"When this module is imported on a Unix platform with the :mod:`readline` "
"module available, an instance of the :class:`Completer` class is "
"automatically created and its :meth:`~Completer.complete` method is set "
"as the :ref:`readline completer <readline-completion>`. The method "
"provides completion of valid Python :ref:`identifiers and keywords "
"<identifiers>`."
msgstr ""
":mod:`readline` 모듈을 사용할 수 있는 유닉스 플랫폼에서 이 모듈이 임포트될 때, :class:`Completer` "
"클래스의 인스턴스가 자동으로 만들어지고, :meth:`~Completer.complete` 메서드가 :ref:`readline "
"완성기 <readline-completion>`\\로 설정됩니다. 이 메서드는 유효한 파이썬 :ref:`식별자외 키워드 "
"<identifiers>`\\의 완성을 제공합니다."

#: ../../library/rlcompleter.rst:22
msgid "Example::"
msgstr "예제::"

#: ../../library/rlcompleter.rst:24
msgid ""
">>> import rlcompleter\n"
">>> import readline\n"
">>> readline.parse_and_bind(\"tab: complete\")\n"
">>> readline. <TAB PRESSED>\n"
"readline.__doc__          readline.get_line_buffer(  "
"readline.read_init_file(\n"
"readline.__file__         readline.insert_text(      "
"readline.set_completer(\n"
"readline.__name__         readline.parse_and_bind(\n"
">>> readline."
msgstr ""
">>> import rlcompleter\n"
">>> import readline\n"
">>> readline.parse_and_bind(\"tab: complete\")\n"
">>> readline. <TAB PRESSED>\n"
"readline.__doc__          readline.get_line_buffer(  "
"readline.read_init_file(\n"
"readline.__file__         readline.insert_text(      "
"readline.set_completer(\n"
"readline.__name__         readline.parse_and_bind(\n"
">>> readline."

#: ../../library/rlcompleter.rst:33
msgid ""
"The :mod:`!rlcompleter` module is designed for use with Python's "
":ref:`interactive mode <tut-interactive>`.  Unless Python is run with the"
" :option:`-S` option, the module is automatically imported and configured"
" (see :ref:`rlcompleter-config`)."
msgstr ""
":mod:`!rlcompleter` 모듈은 파이썬의 :ref:`대화형 모드 <tut-interactive>`\\와 함께 사용하도록 "
"설계되었습니다. 파이썬이 :option:`-S` 옵션으로 실행되지 않는 한, 모듈은 자동으로 임포트되고 구성됩니다 (:ref"
":`rlcompleter-config`\\를 보세요)."

#: ../../library/rlcompleter.rst:38
msgid ""
"On platforms without :mod:`readline`, the :class:`Completer` class "
"defined by this module can still be used for custom purposes."
msgstr ""
":mod:`readline`\\이 없는 플랫폼에서, 이 모듈이 정의하는 :class:`Completer` 클래스는 여전히 사용자 "
"정의 목적에 사용될 수 있습니다."

#: ../../library/rlcompleter.rst:46
msgid "Completer objects have the following method:"
msgstr "Completer 객체는 다음과 같은 메서드를 가집니다:"

#: ../../library/rlcompleter.rst:50
msgid "Return the next possible completion for *text*."
msgstr "*text*\\에 대한 가능한 다음 완성을 반환합니다."

#: ../../library/rlcompleter.rst:52
msgid ""
"When called by the :mod:`readline` module, this method is called "
"successively with ``state == 0, 1, 2, ...`` until the method returns "
"``None``."
msgstr ""

#: ../../library/rlcompleter.rst:56
msgid ""
"If called for *text* that doesn't include a period character (``'.'``), "
"it will complete from names currently defined in :mod:`__main__`, "
":mod:`builtins` and keywords (as defined by the :mod:`keyword` module)."
msgstr ""
"마침표(``'.'``)가 포함되지 않은 *text*\\로 호출되면, :mod:`__main__`, :mod:`builtins` 및 "
"키워드(:mod:`keyword` 모듈에서 정의한 대로)에 현재 정의된 이름으로 완성됩니다."

#: ../../library/rlcompleter.rst:60
msgid ""
"If called for a dotted name, it will try to evaluate anything without "
"obvious side-effects (functions will not be evaluated, but it can "
"generate calls to :meth:`~object.__getattr__`) up to the last part, and "
"find matches for the rest via the :func:`dir` function.  Any exception "
"raised during the evaluation of the expression is caught, silenced and "
":const:`None` is returned."
msgstr ""
"점으로 구분된 이름으로 호출하면, 명백한 부작용(함수는 평가되지 않지만 :meth:`~object.__getattr__`\\에 대한"
" 호출을 만들 수 있습니다)없이 마지막 부분까지 평가하려고 시도하고, 나머지는 :func:`dir` 함수를 통해 일치하는 것을 "
"찾습니다. 표현식을 평가하는 동안 발생하는 모든 예외는 잡히고, 억제하며 :const:`None`\\을 반환합니다."


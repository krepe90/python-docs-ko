# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/trace.rst:2
#, fuzzy
msgid ":mod:`!trace` --- Trace or track Python statement execution"
msgstr ":mod:`trace` --- 파이썬 문장 실행 추적"

#: ../../library/trace.rst:7
msgid "**Source code:** :source:`Lib/trace.py`"
msgstr "**소스 코드:** :source:`Lib/trace.py`"

#: ../../library/trace.rst:11
msgid ""
"The :mod:`trace` module allows you to trace program execution, generate "
"annotated statement coverage listings, print caller/callee relationships "
"and list functions executed during a program run.  It can be used in "
"another program or from the command line."
msgstr ""
":mod:`trace` 모듈을 사용하면 프로그램 실행을 추적하고, 주석 처리된 문장 커버리지 리스트를 생성하고, 호출자/피호출자 "
"관계를 인쇄하고, 프로그램 실행 중 호출되는 함수를 나열할 수 있습니다. 다른 프로그램이나 명령 줄에서 사용할 수 있습니다."

#: ../../library/trace.rst:18
msgid "`Coverage.py <https://coverage.readthedocs.io/>`_"
msgstr "`Coverage.py <https://coverage.readthedocs.io/>`_"

#: ../../library/trace.rst:19
msgid ""
"A popular third-party coverage tool that provides HTML output along with "
"advanced features such as branch coverage."
msgstr "브랜치 커버리지와 같은 고급 기능과 함께 HTML 출력을 제공하는 널리 사용되는 제삼자 커버리지 도구."

#: ../../library/trace.rst:25
msgid "Command-Line Usage"
msgstr "명령 줄 사용법"

#: ../../library/trace.rst:27
msgid ""
"The :mod:`trace` module can be invoked from the command line.  It can be "
"as simple as ::"
msgstr ":mod:`trace` 모듈은 명령 줄에서 호출할 수 있습니다. 다음과 같이 간단할 수도 있습니다 ::"

#: ../../library/trace.rst:30
msgid "python -m trace --count -C . somefile.py ..."
msgstr ""

#: ../../library/trace.rst:32
msgid ""
"The above will execute :file:`somefile.py` and generate annotated "
"listings of all Python modules imported during the execution into the "
"current directory."
msgstr ""
"이것은 :file:`somefile.py`\\를 실행하고 실행 중에 임포트 한 모든 파이썬 모듈들의 주석이 달린 리스트를 현재 "
"디렉터리에 생성합니다."

#: ../../library/trace.rst:39
msgid "Display usage and exit."
msgstr "사용법을 표시하고 종료합니다."

#: ../../library/trace.rst:43
msgid "Display the version of the module and exit."
msgstr "모듈의 버전을 표시하고 종료합니다."

#: ../../library/trace.rst:45
msgid "Added ``--module`` option that allows to run an executable module."
msgstr "실행 가능한 모듈을 실행할 수 있는 ``--module`` 옵션이 추가되었습니다."

#: ../../library/trace.rst:49
msgid "Main options"
msgstr "주요 옵션"

#: ../../library/trace.rst:51
msgid ""
"At least one of the following options must be specified when invoking "
":mod:`trace`.  The :option:`--listfuncs <-l>` option is mutually "
"exclusive with the :option:`--trace <-t>` and :option:`--count <-c>` "
"options. When :option:`--listfuncs <-l>` is provided, neither "
":option:`--count <-c>` nor :option:`--trace <-t>` are accepted, and vice "
"versa."
msgstr ""
":mod:`trace`\\를 호출할 때 다음 옵션 중 적어도 하나를 지정해야 합니다. :option:`--listfuncs "
"<-l>` 옵션은 :option:`--trace <-t>` 나 :option:`--count <-c>` 옵션과 함께 사용할 수 "
"없습니다. :option:`--listfuncs <-l>`\\이 제공되면, :option:`--count <-c>` 나 "
":option:`--trace <-t>`\\는 허용되지 않으며, 반대의 경우도 마찬가지입니다."

#: ../../library/trace.rst:61
msgid ""
"Produce a set of annotated listing files upon program completion that "
"shows how many times each statement was executed.  See also "
":option:`--coverdir <-C>`, :option:`--file <-f>` and :option:`--no-report"
" <-R>` below."
msgstr ""
"프로그램 완료 시 각 문장이 실행된 횟수를 보여주는 주석이 달린 리스팅 파일 집합을 생성합니다. 아래의 "
":option:`--coverdir <-C>`, :option:`--file <-f>` 및 :option:`--no-report "
"<-R>`\\도 참조하십시오."

#: ../../library/trace.rst:68
msgid "Display lines as they are executed."
msgstr "줄이 실행될 때마다 표시합니다."

#: ../../library/trace.rst:72
msgid "Display the functions executed by running the program."
msgstr "프로그램을 실행하여 실행되는 함수들을 표시합니다."

#: ../../library/trace.rst:76
msgid ""
"Produce an annotated list from an earlier program run that used the "
":option:`--count <-c>` and :option:`--file <-f>` option.  This does not "
"execute any code."
msgstr ""
":option:`--count <-c>` 와 :option:`--file <-f>` 옵션을 사용한 이전 프로그램 실행에서 주석이 "
"달린 목록을 생성합니다. 이것은 어떤 코드도 실행하지 않습니다."

#: ../../library/trace.rst:82
msgid "Display the calling relationships exposed by running the program."
msgstr "프로그램을 실행하여 노출된 호출 관계를 표시합니다."

#: ../../library/trace.rst:85
msgid "Modifiers"
msgstr "수정자"

#: ../../library/trace.rst:91
msgid ""
"Name of a file to accumulate counts over several tracing runs.  Should be"
" used with the :option:`--count <-c>` option."
msgstr "여러 추적 실행에서 실행 횟수를 누적할 파일의 이름. :option:`--count <-c>` 옵션과 함께 사용해야 합니다."

#: ../../library/trace.rst:96
#, python-brace-format
msgid ""
"Directory where the report files go.  The coverage report for "
"``package.module`` is written to file "
":file:`{dir}/{package}/{module}.cover`."
msgstr ""
"보고서 파일이 저장되는 디렉터리. ``package.module``\\에 대한 커버리지 보고서는 "
":file:`{dir}/{package}/{module}.cover` 파일에 기록됩니다."

#: ../../library/trace.rst:101
msgid ""
"When generating annotated listings, mark lines which were not executed "
"with ``>>>>>>``."
msgstr "주석이 달린 리스팅을 작성할 때, ``>>>>>>``\\로 실행되지 않은 줄을 표시합니다."

#: ../../library/trace.rst:106
msgid ""
"When using :option:`--count <-c>` or :option:`--report <-r>`, write a "
"brief summary to stdout for each file processed."
msgstr ""
":option:`--count <-c>` 나 :option:`--report <-r>`\\를 사용할 때, 처리된 각 파일에 대한 "
"요약을 표준출력으로 기록합니다."

#: ../../library/trace.rst:111
msgid ""
"Do not generate annotated listings.  This is useful if you intend to make"
" several runs with :option:`--count <-c>`, and then produce a single set "
"of annotated listings at the end."
msgstr ""
"주석이 달린 리스팅을 생성하지 않습니다. 이것은 :option:`--count <-c>`\\를 사용하여 여러 번 실행한 다음, "
"마지막에 주석이 달린 리스팅의 단일 집합을 생성하려고 할 때 유용합니다."

#: ../../library/trace.rst:117
msgid ""
"Prefix each line with the time since the program started.  Only used "
"while tracing."
msgstr "프로그램이 시작된 이후의 시간을 각 줄 앞에 붙입니다. 추적하는 동안에만 사용됩니다."

#: ../../library/trace.rst:121
msgid "Filters"
msgstr "필터"

#: ../../library/trace.rst:123
msgid "These options may be repeated multiple times."
msgstr "이 옵션들은 여러 번 반복 될 수 있습니다."

#: ../../library/trace.rst:129
msgid ""
"Ignore each of the given module names and its submodules (if it is a "
"package).  The argument can be a list of names separated by a comma."
msgstr "주어진 각 모듈 이름과 (패키지라면) 그 서브 모듈을 무시합니다. 인자는 쉼표로 구분된 이름 목록일 수 있습니다."

#: ../../library/trace.rst:134
msgid ""
"Ignore all modules and packages in the named directory and "
"subdirectories. The argument can be a list of directories separated by "
":data:`os.pathsep`."
msgstr ""
"명명된 디렉터리와 하위 디렉터리의 모든 모듈과 패키지를 무시합니다. 인자는 :data:`os.pathsep`\\으로 구분된 디렉터리"
" 목록일 수 있습니다."

#: ../../library/trace.rst:140
msgid "Programmatic Interface"
msgstr "프로그래밍 인터페이스"

#: ../../library/trace.rst:145
msgid ""
"Create an object to trace execution of a single statement or expression."
"  All parameters are optional.  *count* enables counting of line numbers."
"  *trace* enables line execution tracing.  *countfuncs* enables listing "
"of the functions called during the run.  *countcallers* enables call "
"relationship tracking.  *ignoremods* is a list of modules or packages to "
"ignore. *ignoredirs* is a list of directories whose modules or packages "
"should be ignored.  *infile* is the name of the file from which to read "
"stored count information.  *outfile* is the name of the file in which to "
"write updated count information.  *timing* enables a timestamp relative "
"to when tracing was started to be displayed."
msgstr ""
"단일 문장이나 표현식의 실행을 추적할 객체를 만듭니다. 모든 매개 변수는 선택 사항입니다. *count*\\는 줄 번호의 카운팅을 "
"활성화합니다. *trace*\\는 줄 실행 추적을 활성화합니다. *countfuncs*\\는 실행 중에 호출된 함수들의 리스팅을 "
"활성화합니다. *countcallers*\\는 호출 관계 추적을 활성화합니다. *ignoremods*\\는 무시할 모듈이나 패키지의"
" 리스트입니다. *ignoredirs*\\는 들어있는 모듈이나 패키지를 무시해야 하는 디렉터리의 리스트입니다. *infile*\\은"
" 저장된 카운트 정보를 읽을 파일 이름입니다. *outfile*\\는 갱신된 카운트 정보를 쓰는 파일의 이름입니다. "
"*timing*\\는 추적이 시작될 때에 상대적인 타임스탬프 표시를 활성화합니다."

#: ../../library/trace.rst:158
msgid ""
"Execute the command and gather statistics from the execution with the "
"current tracing parameters.  *cmd* must be a string or code object, "
"suitable for passing into :func:`exec`."
msgstr ""
"명령을 실행하고 현재 추적 매개 변수를 사용하여 실행에서 통계를 수집합니다. *cmd*\\는 :func:`exec`\\로 전달하는데"
" 적합한 문자열이나 코드 객체여야 합니다."

#: ../../library/trace.rst:164
msgid ""
"Execute the command and gather statistics from the execution with the "
"current tracing parameters, in the defined global and local environments."
"  If not defined, *globals* and *locals* default to empty dictionaries."
msgstr ""
"정의된 전역과 지역 환경에서, 명령을 실행하고 현재 추적 매개 변수를 사용하여 실행에서 통계를 수집합니다. 정의되지 않으면, "
"*globals* 와 *locals*\\의 기본값은 빈 딕셔너리입니다."

#: ../../library/trace.rst:171
msgid ""
"Call *func* with the given arguments under control of the :class:`Trace` "
"object with the current tracing parameters."
msgstr "현재 추적 매개 변수를 갖는 :class:`Trace` 객체의 제어하에 주어진 인자로 *func*\\를 호출합니다."

#: ../../library/trace.rst:176
msgid ""
"Return a :class:`CoverageResults` object that contains the cumulative "
"results of all previous calls to ``run``, ``runctx`` and ``runfunc`` for "
"the given :class:`Trace` instance.  Does not reset the accumulated trace "
"results."
msgstr ""
"주어진 :class:`Trace` 인스턴스에 대한 모든 이전 ``run``, ``runctx`` 및 ``runfunc`` 호출의 "
"누적 결과를 포함하는 :class:`CoverageResults` 객체를 반환합니다. 누적된 추적 결과를 재설정하지 않습니다."

#: ../../library/trace.rst:183
msgid ""
"A container for coverage results, created by :meth:`Trace.results`.  "
"Should not be created directly by the user."
msgstr ":meth:`Trace.results`\\에 의해 만들어진 커버리지 결과를 위한 컨테이너. 사용자가 직접 만들어서는 안 됩니다."

#: ../../library/trace.rst:188
msgid "Merge in data from another :class:`CoverageResults` object."
msgstr "다른 :class:`CoverageResults` 객체의 데이터를 병합합니다."

#: ../../library/trace.rst:193
msgid ""
"Write coverage results.  Set *show_missing* to show lines that had no "
"hits.  Set *summary* to include in the output the coverage summary per "
"module.  *coverdir* specifies the directory into which the coverage "
"result files will be output.  If ``None``, the results for each source "
"file are placed in its directory."
msgstr ""
"커버리지 결과를 기록합니다. 실행 카운트가 없는 줄을 표시하려면 *show_missing*\\을 설정하십시오. 모듈당 커버리지 "
"요약을 출력에 포함 시키려면 *summary*\\를 설정하십시오. *coverdir*\\은 커버리지 결과 파일이 출력될 디렉터리를 "
"지정합니다. ``None``\\이면, 각 소스 파일의 결과가 해당 디렉터리에 위치합니다."

#: ../../library/trace.rst:199
msgid ""
"If *ignore_missing_files* is ``True``, coverage counts for files that no "
"longer exist are silently ignored. Otherwise, a missing file will raise a"
" :exc:`FileNotFoundError`."
msgstr ""

#: ../../library/trace.rst:203
msgid "Added *ignore_missing_files* parameter."
msgstr ""

#: ../../library/trace.rst:206
msgid "A simple example demonstrating the use of the programmatic interface::"
msgstr "프로그래밍 인터페이스의 사용을 보여주는 간단한 예제::"

#: ../../library/trace.rst:208
msgid ""
"import sys\n"
"import trace\n"
"\n"
"# create a Trace object, telling it what to ignore, and whether to\n"
"# do tracing or line-counting or both.\n"
"tracer = trace.Trace(\n"
"    ignoredirs=[sys.prefix, sys.exec_prefix],\n"
"    trace=0,\n"
"    count=1)\n"
"\n"
"# run the new command using the given tracer\n"
"tracer.run('main()')\n"
"\n"
"# make a report, placing output in the current directory\n"
"r = tracer.results()\n"
"r.write_results(show_missing=True, coverdir=\".\")"
msgstr ""


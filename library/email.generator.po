# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/email.generator.rst:2
msgid ":mod:`!email.generator`: Generating MIME documents"
msgstr ":mod:`!email.generator`: MIME 문서 생성"

#: ../../library/email.generator.rst:7
msgid "**Source code:** :source:`Lib/email/generator.py`"
msgstr "**소스 코드:** :source:`Lib/email/generator.py`"

#: ../../library/email.generator.rst:11
msgid ""
"One of the most common tasks is to generate the flat (serialized) version"
" of the email message represented by a message object structure.  You "
"will need to do this if you want to send your message via "
":meth:`smtplib.SMTP.sendmail`, or print the message on the console.  "
"Taking a message object structure and producing a serialized "
"representation is the job of the generator classes."
msgstr ""
"가장 일반적인 작업 중 하나는 메시지 객체 구조로 표현되는 전자 우편 메시지의 평평한 (직렬화된) 버전을 생성하는 것입니다. "
":meth:`smtplib.SMTP.sendmail`\\을 통해 메시지를 보내거나 콘솔에서 메시지를 인쇄하려면 이 작업을 수행해야 "
"합니다. 메시지 객체 구조를 취하고 직렬화된 표현을 생성하는 것은 제너레이터 클래스의 작업입니다."

#: ../../library/email.generator.rst:18
msgid ""
"As with the :mod:`email.parser` module, you aren't limited to the "
"functionality of the bundled generator; you could write one from scratch "
"yourself.  However the bundled generator knows how to generate most email"
" in a standards-compliant way, should handle MIME and non-MIME email "
"messages just fine, and is designed so that the bytes-oriented parsing "
"and generation operations are inverses, assuming the same non-"
"transforming :mod:`~email.policy` is used for both.  That is, parsing the"
" serialized byte stream via the :class:`~email.parser.BytesParser` class "
"and then regenerating the serialized byte stream using "
":class:`BytesGenerator` should produce output identical to the input "
"[#]_.  (On the other hand, using the generator on an "
":class:`~email.message.EmailMessage` constructed by program may result in"
" changes to the :class:`~email.message.EmailMessage` object as defaults "
"are filled in.)"
msgstr ""
":mod:`email.parser` 모듈과 마찬가지로 번들 제너레이터의 기능으로 제한되지 않습니다; 처음부터 직접 작성할 수 "
"있습니다. 그러나 번들 제너레이터는 표준 호환 방식으로 대부분 전자 우편을 생성하는 방법을 알고 있고, MIME과 비 MIME 전자"
" 우편 메시지를 잘 처리하며, 변환 없는 같은 :mod:`~email.policy`\\가 사용된다고 가정할 때 바이트열 지향 구문 "
"분석과 생성 연산이 역이 되도록 설계되었습니다. 즉, :class:`~email.parser.BytesParser` 클래스로 "
"직렬화된 바이트 스트림을 구문 분석한 다음, :class:`BytesGenerator`\\를 사용하여 직렬화된 바이트 스트림을 "
"재생성하면 입력과 동일한 출력이 생성됩니다 [#]_. (반면에, 프로그램에서 구축한 "
":class:`~email.message.EmailMessage`\\에 제너레이터를 사용하면 기본값이 채워지기 때문에 "
":class:`~email.message.EmailMessage` 객체가 변경될 수 있습니다.)"

#: ../../library/email.generator.rst:32
msgid ""
"The :class:`Generator` class can be used to flatten a message into a text"
" (as opposed to binary) serialized representation, but since Unicode "
"cannot represent binary data directly, the message is of necessity "
"transformed into something that contains only ASCII characters, using the"
" standard email RFC Content Transfer Encoding techniques for encoding "
"email messages for transport over channels that are not \"8 bit clean\"."
msgstr ""
":class:`Generator` 클래스를 사용하면 메시지를 (바이너리가 아닌) 텍스트 직렬화 표현으로 펼칠 수 있지만, 유니코드는"
" 바이너리 데이터를 직접 표현할 수 없기 때문에, \"8비트 클린\"하지 않은 채널을 통한 전송을 위한 전자 우편 메시지를 "
"인코딩하기 위한 표준 전자 우편 RFC 콘텐츠 전송 인코딩(Content Transfer Encoding) 기술을 사용하여 메시지를"
" ASCII 문자만 포함된 것으로 변환해야 합니다."

#: ../../library/email.generator.rst:39
msgid ""
"To accommodate reproducible processing of SMIME-signed messages "
":class:`Generator` disables header folding for message parts of type "
"``multipart/signed`` and all subparts."
msgstr ""
"SMIME 서명된 메시지의 재현성 있는 처리를 위해 :class:`Generator`\\는 ``multipart/signed`` "
"유형의 메시지 파트와 모든 서브 부분에 대해 헤더 접기를 비활성화합니다."

#: ../../library/email.generator.rst:47
msgid ""
"Return a :class:`BytesGenerator` object that will write any message "
"provided to the :meth:`flatten` method, or any surrogateescape encoded "
"text provided to the :meth:`write` method, to the :term:`file-like "
"object` *outfp*. *outfp* must support a ``write`` method that accepts "
"binary data."
msgstr ""
":meth:`flatten` 메서드에 제공된 모든 메시지나 :meth:`write` 메서드에 제공된 모든 서로게이트 이스케이프 "
"인코딩된 텍스트를 :term:`파일류 객체 <file-like object>` *outfp*\\에 쓰는 "
":class:`BytesGenerator` 객체를 반환합니다. *outfp*\\는 바이너리 데이터를 받아들이는 ``write`` "
"메서드를 지원해야 합니다."

#: ../../library/email.generator.rst:52 ../../library/email.generator.rst:153
msgid ""
"If optional *mangle_from_* is ``True``, put a ``>`` character in front of"
" any line in the body that starts with the exact string ``\"From \"``, "
"that is ``From`` followed by a space at the beginning of a line.  "
"*mangle_from_* defaults to the value of the "
":attr:`~email.policy.Policy.mangle_from_` setting of the *policy* (which "
"is ``True`` for the :data:`~email.policy.compat32` policy and ``False`` "
"for all others). *mangle_from_* is intended for use when messages are "
"stored in Unix mbox format (see :mod:`mailbox` and `WHY THE CONTENT-"
"LENGTH FORMAT IS BAD <https://www.jwz.org/doc/content-length.html>`_)."
msgstr ""
"선택적인 *mangle_from_*\\이 ``True``\\인 경우, 정확한 문자열 ``\"From \"``\\으로 시작하는(즉 "
"줄의 시작에 ``From``\\이 오고 스페이스가 뒤따르는) 본문의 모든 줄 앞에 ``>`` 문자를 넣습니다. "
"*mangle_from_*\\의 기본값은 *policy*\\의 "
":attr:`~email.policy.Policy.mangle_from_` 설정값입니다 "
"(:data:`~email.policy.compat32` 정책의 경우 ``True``, 다른 모든 경우 "
"``False``\\입니다). *mangle_from_*\\은 메시지가 유닉스 mbox 형식으로 저장될 때 사용하기 위한 것입니다 "
"(:mod:`mailbox`\\와 `WHY THE CONTENT-LENGTH FORMAT IS BAD "
"<https://www.jwz.org/doc/content-length.html>`_\\를 참조하십시오)."

#: ../../library/email.generator.rst:62 ../../library/email.generator.rst:163
msgid ""
"If *maxheaderlen* is not ``None``, refold any header lines that are "
"longer than *maxheaderlen*, or if ``0``, do not rewrap any headers.  If "
"*manheaderlen* is ``None`` (the default), wrap headers and other message "
"lines according to the *policy* settings."
msgstr ""
"*maxheaderlen*\\이 ``None``\\이 아니면, *maxheaderlen*\\보다 긴 헤더 줄을 다시 접거나, "
"``0``\\이면 헤더를 다시 접지 않습니다. *manheaderlen*\\이 ``None``\\(기본값)이면, *policy* "
"설정에 따라 헤더와 기타 메시지 줄을 줄 바꿈 합니다."

#: ../../library/email.generator.rst:67 ../../library/email.generator.rst:168
msgid ""
"If *policy* is specified, use that policy to control message generation."
"  If *policy* is ``None`` (the default), use the policy associated with "
"the :class:`~email.message.Message` or "
":class:`~email.message.EmailMessage` object passed to ``flatten`` to "
"control the message generation.  See :mod:`email.policy` for details on "
"what *policy* controls."
msgstr ""
"*policy*\\가 지정되면, 해당 정책을 사용하여 메시지 생성을 제어합니다. *policy*\\가 "
"``None``\\(기본값)이면 ``flatten``\\에 전달된 :class:`~email.message.Message`\\나 "
":class:`~email.message.EmailMessage` 객체와 연관된 정책을 사용하여 메시지 생성을 제어합니다. "
"*policy*\\가 제어하는 것에 대한 자세한 내용은 :mod:`email.policy`\\를 참조하십시오."

#: ../../library/email.generator.rst:75 ../../library/email.generator.rst:174
msgid "Added the *policy* keyword."
msgstr "*policy* 키워드를 추가했습니다."

#: ../../library/email.generator.rst:77 ../../library/email.generator.rst:176
msgid ""
"The default behavior of the *mangle_from_* and *maxheaderlen* parameters "
"is to follow the policy."
msgstr "*mangle_from_*\\과 *maxheaderlen* 매개 변수의 기본 동작은 정책을 따르는 것입니다."

#: ../../library/email.generator.rst:83
msgid ""
"Print the textual representation of the message object structure rooted "
"at *msg* to the output file specified when the :class:`BytesGenerator` "
"instance was created."
msgstr ""
"*msg*\\를 루트로 하는 메시지 객체 구조의 텍스트 표현을 :class:`BytesGenerator` 인스턴스가 만들어질 때 "
"지정된 출력 파일에 인쇄합니다."

#: ../../library/email.generator.rst:87
msgid ""
"If the :mod:`~email.policy` option :attr:`~email.policy.Policy.cte_type` "
"is ``8bit`` (the default), copy any headers in the original parsed "
"message that have not been modified to the output with any bytes with the"
" high bit set reproduced as in the original, and preserve the non-ASCII "
":mailheader:`Content-Transfer-Encoding` of any body parts that have them."
" If ``cte_type`` is ``7bit``, convert the bytes with the high bit set as "
"needed using an ASCII-compatible :mailheader:`Content-Transfer-Encoding`."
" That is, transform parts with non-ASCII :mailheader:`Content-Transfer-"
"Encoding` (:mailheader:`Content-Transfer-Encoding: 8bit`) to an ASCII "
"compatible :mailheader:`Content-Transfer-Encoding`, and encode RFC-"
"invalid non-ASCII bytes in headers using the MIME ``unknown-8bit`` "
"character set, thus rendering them RFC-compliant."
msgstr ""
":mod:`~email.policy` 옵션 :attr:`~email.policy.Policy.cte_type`\\이 "
"``8bit``\\(기본값)이면, 하이 비트가 설정된 바이트들이 원본에서와같이 재생성되도록 출력이 수정되지 않은 원본 구문 분석된 "
"메시지의 헤더를 복사하고, 비 ASCII :mailheader:`Content-Transfer-Encoding`\\을 이것을 갖는 "
"모든 본문 파트에서 보존합니다. ``cte_type``\\이 ``7bit``\\이면, 하이 비트가 설정된 바이트들을 ASCII 호환"
" :mailheader:`Content-Transfer-Encoding`\\을 사용하여 필요에 따라 변환합니다. 즉, 비 ASCII"
" :mailheader:`Content-Transfer-Encoding`\\(:mailheader:`Content-Transfer-"
"Encoding: 8bit`)을 갖는 파트를 ASCII 호환 :mailheader:`Content-Transfer-"
"Encoding`\\으로 변환하고, 헤더에 있는 RFC 유효하지 않은 비 ASCII 바이트를 MIME ``unknown-8bit``"
" 문자 집합을 사용하여 인코딩하여, RFC 호환되게 만듭니다."

#: ../../library/email.generator.rst:104 ../../library/email.generator.rst:197
msgid ""
"If *unixfrom* is ``True``, print the envelope header delimiter used by "
"the Unix mailbox format (see :mod:`mailbox`) before the first of the "
":rfc:`5322` headers of the root message object.  If the root object has "
"no envelope header, craft a standard one.  The default is ``False``. Note"
" that for subparts, no envelope header is ever printed."
msgstr ""
"*unixfrom*\\이 ``True``\\이면, 루트 메시지 객체의 첫 번째 :rfc:`5322` 헤더 앞에 유닉스 mailbox"
" 형식(:mod:`mailbox`\\를 참조하십시오)에서 사용되는 봉투 헤더 구분자를 인쇄합니다. 루트 객체에 봉투 헤더가 없으면,"
" 표준 헤더를 만듭니다. 기본값은 ``False``\\입니다. 서브 파트의 경우 봉투 헤더가 인쇄되지 않음에 유의하십시오."

#: ../../library/email.generator.rst:110 ../../library/email.generator.rst:203
msgid ""
"If *linesep* is not ``None``, use it as the separator character between "
"all the lines of the flattened message.  If *linesep* is ``None`` (the "
"default), use the value specified in the *policy*."
msgstr ""
"*linesep*\\이 ``None``\\이 아니면, 펼쳐진 메시지의 모든 줄 사이의 구분자 문자로 사용합니다. "
"*linesep*\\이 ``None``\\(기본값)이면, *policy*\\에 지정된 값을 사용합니다."

#: ../../library/email.generator.rst:119
msgid ""
"Return an independent clone of this :class:`BytesGenerator` instance with"
" the exact same option settings, and *fp* as the new *outfp*."
msgstr ""
"정확히 같은 옵션 설정이고 *fp*\\를 새 *outfp*\\로 사용하는, 이 :class:`BytesGenerator` 인스턴스의"
" 독립 클론을 반환합니다."

#: ../../library/email.generator.rst:125
msgid ""
"Encode *s* using the ``ASCII`` codec and the ``surrogateescape`` error "
"handler, and pass it to the *write* method of the *outfp* passed to the "
":class:`BytesGenerator`'s constructor."
msgstr ""
"``ASCII`` 코덱과 ``surrogateescape`` 에러 처리기를 사용하여 *s*\\를 인코딩하고, "
":class:`BytesGenerator`\\의 생성자에 전달된 *outfp*\\의 *write* 메서드로 전달합니다."

#: ../../library/email.generator.rst:130
msgid ""
"As a convenience, :class:`~email.message.EmailMessage` provides the "
"methods :meth:`~email.message.EmailMessage.as_bytes` and "
"``bytes(aMessage)`` (a.k.a. "
":meth:`~email.message.EmailMessage.__bytes__`), which simplify the "
"generation of a serialized binary representation of a message object.  "
"For more detail, see :mod:`email.message`."
msgstr ""
"편의상, :class:`~email.message.EmailMessage`\\는 "
":meth:`~email.message.EmailMessage.as_bytes` 메서드와 "
"``bytes(aMessage)``\\(일명 :meth:`~email.message.EmailMessage.__bytes__`)를 "
"제공하여 메시지 객체의 직렬화된 바이너리 표현 생성을 단순화합니다. 자세한 내용은 :mod:`email.message`\\를 "
"참조하십시오."

#: ../../library/email.generator.rst:137
msgid ""
"Because strings cannot represent binary data, the :class:`Generator` "
"class must convert any binary data in any message it flattens to an ASCII"
" compatible format, by converting them to an ASCII compatible :mailheader"
":`Content-Transfer_Encoding`.  Using the terminology of the email RFCs, "
"you can think of this as :class:`Generator` serializing to an I/O stream "
"that is not \"8 bit clean\".  In other words, most applications will want"
" to be using :class:`BytesGenerator`, and not :class:`Generator`."
msgstr ""
"문자열은 바이너리 데이터를 나타낼 수 없어서, :class:`Generator` 클래스는 펼쳐지는 모든 메시지의 바이너리 데이터를 "
"ASCII 호환 :mailheader:`Content-Transfer_Encoding`\\으로 변환하여 ASCII 호환 형식으로 "
"변환해야 합니다. 전자 우편 RFC의 용어를 사용하면, 이를 \"8비트 클린\"이 아닌 I/O 스트림으로 직렬화하는 "
":class:`Generator`\\로 생각할 수 있습니다. 즉, 대부분 응용 프로그램은 :class:`Generator`\\가 "
"아닌 :class:`BytesGenerator`\\를 사용하려고 합니다."

#: ../../library/email.generator.rst:148
msgid ""
"Return a :class:`Generator` object that will write any message provided "
"to the :meth:`flatten` method, or any text provided to the :meth:`write` "
"method, to the :term:`file-like object` *outfp*.  *outfp* must support a "
"``write`` method that accepts string data."
msgstr ""
":meth:`flatten` 메서드에 제공된 모든 메시지나 :meth:`write` 메서드에 제공된 텍스트를 :term:`파일류 "
"객체 <file-like object>` *outfp*\\에 쓰는 :class:`Generator` 객체를 반환합니다. "
"*outfp*\\는 문자열 데이터를 받아들이는 ``write`` 메서드를 지원해야 합니다."

#: ../../library/email.generator.rst:182
msgid ""
"Print the textual representation of the message object structure rooted "
"at *msg* to the output file specified when the :class:`Generator` "
"instance was created."
msgstr ""
"*msg*\\를 루트로 하는 메시지 객체 구조의 텍스트 표현을 :class:`Generator` 인스턴스가 만들어질 때 지정된 출력"
" 파일에 인쇄합니다."

#: ../../library/email.generator.rst:186
msgid ""
"If the :mod:`~email.policy` option :attr:`~email.policy.Policy.cte_type` "
"is ``8bit``, generate the message as if the option were set to ``7bit``. "
"(This is required because strings cannot represent non-ASCII bytes.) "
"Convert any bytes with the high bit set as needed using an ASCII-"
"compatible :mailheader:`Content-Transfer-Encoding`.  That is, transform "
"parts with non-ASCII :mailheader:`Content-Transfer-Encoding` (:mailheader"
":`Content-Transfer-Encoding: 8bit`) to an ASCII compatible :mailheader"
":`Content-Transfer-Encoding`, and encode RFC-invalid non-ASCII bytes in "
"headers using the MIME ``unknown-8bit`` character set, thus rendering "
"them RFC-compliant."
msgstr ""
":mod:`~email.policy` 옵션 :attr:`~email.policy.Policy.cte_type`\\이 "
"``8bit``\\이면, 옵션이 ``7bit``\\로 설정된 것처럼 메시지를 생성합니다. (문자열은 비 ASCII 바이트를 나타낼 "
"수 없기 때문에 필요합니다.) 하이 비트가 설정된 모든 바이트를 ASCII 호환 :mailheader:`Content-"
"Transfer-Encoding`\\을 사용하여 필요에 따라 변환합니다. 즉, 비 ASCII :mailheader:`Content-"
"Transfer-Encoding`\\(:mailheader:`Content-Transfer-Encoding: 8bit`)을 갖는 "
"파트를 ASCII 호환 :mailheader:`Content-Transfer-Encoding`\\으로 변환하고, 헤더에 있는 RFC"
" 유효하지 않은 비 ASCII 바이트를 MIME ``unknown-8bit`` 문자 집합을 사용하여 인코딩하여, RFC 호환되게 "
"만듭니다."

#: ../../library/email.generator.rst:209
msgid ""
"Added support for re-encoding ``8bit`` message bodies, and the *linesep* "
"argument."
msgstr "``8bit`` 메시지 본문을 다시 인코딩하기 위한 지원과 *linesep* 인자가 추가되었습니다."

#: ../../library/email.generator.rst:216
msgid ""
"Return an independent clone of this :class:`Generator` instance with the "
"exact same options, and *fp* as the new *outfp*."
msgstr ""
"정확히 같은 옵션을 갖고 *fp*\\를 새 *outfp*\\로 사용하는, 이 :class:`Generator` 인스턴스의 독립 "
"클론을 반환합니다."

#: ../../library/email.generator.rst:222
msgid ""
"Write *s* to the *write* method of the *outfp* passed to the "
":class:`Generator`'s constructor.  This provides just enough file-like "
"API for :class:`Generator` instances to be used in the :func:`print` "
"function."
msgstr ""
":class:`Generator`\\의 생성자에 전달된 *outfp*\\의 *write* 메서드로 *s*\\를 씁니다. 이것은 "
":func:`print` 함수에서 사용될 :class:`Generator` 인스턴스를 위해 딱 필요한 만큼의 파일류 API를 "
"제공합니다."

#: ../../library/email.generator.rst:228
msgid ""
"As a convenience, :class:`~email.message.EmailMessage` provides the "
"methods :meth:`~email.message.EmailMessage.as_string` and "
"``str(aMessage)`` (a.k.a. :meth:`~email.message.EmailMessage.__str__`), "
"which simplify the generation of a formatted string representation of a "
"message object.  For more detail, see :mod:`email.message`."
msgstr ""
"편의상, :class:`~email.message.EmailMessage`\\는 "
":meth:`~email.message.EmailMessage.as_string` 메서드와 ``str(aMessage)``\\(일명"
" :meth:`~email.message.EmailMessage.__str__`)를 제공하여 메시지 객체의 포맷된 문자열 표현 "
"생성을 단순화합니다. 자세한 내용은 :mod:`email.message`\\를 참조하십시오."

#: ../../library/email.generator.rst:235
msgid ""
"The :mod:`email.generator` module also provides a derived class, "
":class:`DecodedGenerator`, which is like the :class:`Generator` base "
"class, except that non-\\ :mimetype:`text` parts are not serialized, but "
"are instead represented in the output stream by a string derived from a "
"template filled in with information about the part."
msgstr ""
":mod:`email.generator` 모듈은 또한 파생 클래스인 :class:`DecodedGenerator`\\를 제공하는데,"
" :class:`Generator` 베이스 클래스와 유사하지만, 비 :mimetype:`text` 파트는 직렬화되지 않고, 대신에 "
"파트에 대한 정보로 채워진 템플릿에서 파생된 문자열로 출력 스트림에 표시됩니다."

#: ../../library/email.generator.rst:244
msgid ""
"Act like :class:`Generator`, except that for any subpart of the message "
"passed to :meth:`Generator.flatten`, if the subpart is of main type "
":mimetype:`text`, print the decoded payload of the subpart, and if the "
"main type is not :mimetype:`text`, instead of printing it fill in the "
"string *fmt* using information from the part and print the resulting "
"filled-in string."
msgstr ""
":class:`Generator`\\와 같이 작동하지만, :meth:`Generator.flatten`\\에 전달된 메시지의 서브 "
"파트에 대해, 서브 파트가 메인 유형이 :mimetype:`text`\\이면, 서브 파트의 디코딩된 페이 로드를 인쇄하고, 메인 "
"유형이 :mimetype:`text`\\가 아니면, 그것을 인쇄하지 않고 파트 정보를 사용하여 문자열 *fmt*\\를 채운 후에 그"
" 문자열을 인쇄합니다."

#: ../../library/email.generator.rst:251
msgid ""
"To fill in *fmt*, execute ``fmt % part_info``, where ``part_info`` is a "
"dictionary composed of the following keys and values:"
msgstr ""
"*fmt*\\를 채우기 위해, ``fmt % part_info``\\를 실행하는데, 여기서 ``part_info``\\는 다음 키와"
" 값으로 구성된 딕셔너리입니다:"

#: ../../library/email.generator.rst:254
msgid "``type`` -- Full MIME type of the non-\\ :mimetype:`text` part"
msgstr "``type`` -- :mimetype:`text`\\가 아닌 파트의 전체 MIME 유형"

#: ../../library/email.generator.rst:256
msgid "``maintype`` -- Main MIME type of the non-\\ :mimetype:`text` part"
msgstr "``maintype`` -- :mimetype:`text`\\가 아닌 파트의 메인 MIME 유형"

#: ../../library/email.generator.rst:258
msgid "``subtype`` -- Sub-MIME type of the non-\\ :mimetype:`text` part"
msgstr "``subtype`` -- :mimetype:`text`\\가 아닌 파트의 서브 MIME 유형"

#: ../../library/email.generator.rst:260
msgid "``filename`` -- Filename of the non-\\ :mimetype:`text` part"
msgstr "``filename`` -- :mimetype:`text`\\가 아닌 파트의 파일명"

#: ../../library/email.generator.rst:262
msgid ""
"``description`` -- Description associated with the non-\\ "
":mimetype:`text` part"
msgstr "``description`` -- :mimetype:`text`\\가 아닌 파트와 관련된 설명"

#: ../../library/email.generator.rst:264
msgid ""
"``encoding`` -- Content transfer encoding of the non-\\ :mimetype:`text` "
"part"
msgstr ""
"``encoding`` -- :mimetype:`text`\\가 아닌 파트의 콘텐츠 전송 인코딩(Content transfer "
"encoding)"

#: ../../library/email.generator.rst:266
msgid "If *fmt* is ``None``, use the following default *fmt*:"
msgstr "*fmt*\\가 ``None``\\이면, 다음 기본 *fmt*\\를 사용합니다:"

#: ../../library/email.generator.rst:268
#, python-format
msgid "\"[Non-text (%(type)s) part of message omitted, filename %(filename)s]\""
msgstr "\"[Non-text (%(type)s) part of message omitted, filename %(filename)s]\""

#: ../../library/email.generator.rst:270
msgid ""
"Optional *_mangle_from_* and *maxheaderlen* are as with the "
":class:`Generator` base class."
msgstr "선택적 *_mangle_from_* 및 *maxheaderlen*\\은 :class:`Generator` 베이스 클래스와 같습니다."

#: ../../library/email.generator.rst:275
msgid "Footnotes"
msgstr "각주"

#: ../../library/email.generator.rst:276
msgid ""
"This statement assumes that you use the appropriate setting for "
"``unixfrom``, and that there are no :mod:`email.policy` settings calling "
"for automatic adjustments (for example, "
":attr:`~email.policy.EmailPolicy.refold_source` must be ``none``, which "
"is *not* the default).  It is also not 100% true, since if the message "
"does not conform to the RFC standards occasionally information about the "
"exact original text is lost during parsing error recovery.  It is a goal "
"to fix these latter edge cases when possible."
msgstr ""
"이 문장은 ``unixfrom``\\에 적절한 설정을 사용하고, 자동 조정을 요구하는 :mod:`email.policy` 설정이 "
"없다고 가정합니다 (예를 들어, :attr:`~email.policy.EmailPolicy.refold_source`\\는 "
"``none``\\이어야 하며, 이는 기본값이 *아닙*\\니다). 메시지가 RFC 표준을 준수하지 않으면 때때로 구문 분석 에러 "
"복구 중에 정확한 원본 텍스트에 대한 정보가 손실되므로 100% 사실이 아니기도 합니다. 가능하다면 이 후자의 경계 사례를 해결하는"
" 것이 목표입니다."


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/netrc.rst:2
#, fuzzy
msgid ":mod:`!netrc` --- netrc file processing"
msgstr ":mod:`netrc` --- netrc 파일 처리"

#: ../../library/netrc.rst:10
msgid "**Source code:** :source:`Lib/netrc.py`"
msgstr "**소스 코드:** :source:`Lib/netrc.py`"

#: ../../library/netrc.rst:14
msgid ""
"The :class:`~netrc.netrc` class parses and encapsulates the netrc file "
"format used by the Unix :program:`ftp` program and other FTP clients."
msgstr ""
":class:`~netrc.netrc` 클래스는 유닉스 :program:`ftp` 프로그램과 다른 FTP 클라이언트가 사용하는 "
"netrc 파일 형식을 구문 분석하고 캡슐화합니다."

#: ../../library/netrc.rst:20
msgid ""
"A :class:`~netrc.netrc` instance or subclass instance encapsulates data "
"from  a netrc file.  The initialization argument, if present, specifies "
"the file to parse.  If no argument is given, the file :file:`.netrc` in "
"the user's home directory -- as determined by :func:`os.path.expanduser` "
"-- will be read.  Otherwise, a :exc:`FileNotFoundError` exception will be"
" raised. Parse errors will raise :exc:`NetrcParseError` with diagnostic "
"information including the file name, line number, and terminating token. "
"If no argument is specified on a POSIX system, the presence of passwords "
"in the :file:`.netrc` file will raise a :exc:`NetrcParseError` if the "
"file ownership or permissions are insecure (owned by a user other than "
"the user running the process, or accessible for read or write by any "
"other user). This implements security behavior equivalent to that of ftp "
"and other programs that use :file:`.netrc`."
msgstr ""
":class:`~netrc.netrc` 인스턴스나 서브 클래스 인스턴스는 netrc 파일의 데이터를 캡슐화합니다. 초기화 인자가 "
"있으면 구문 분석할 파일을 지정합니다. 인자를 지정하지 않으면, :func:`os.path.expanduser`\\에 의해 결정된 "
"사용자 홈 디렉터리에 있는 파일 :file:`.netrc`\\를 읽습니다. 그렇지 않으면, "
":exc:`FileNotFoundError` 예외가 발생합니다. 구문 분석 에러는 파일 이름, 줄 번호 및 종료 토큰을 포함하는 "
"진단 정보로 :exc:`NetrcParseError`\\를 발생시킵니다. POSIX 시스템에서 인자가 지정되지 않을 때, 파일 "
"소유권이나 권한이 안전하지 않으면 (프로세스를 실행하는 사용자가 아닌 다른 사용자가 소유하거나 다른 모든 사용자가 읽기 또는 쓰기로"
" 액세스할 수 있는 경우), :file:`.netrc` 파일에 암호가 존재하면 :exc:`NetrcParseError`\\가 "
"발생합니다. 이것은 ftp와 :file:`.netrc`\\를 사용하는 다른 프로그램과 동등한 보안 행동을 구현합니다."

#: ../../library/netrc.rst:34
msgid "Added the POSIX permission check."
msgstr "POSIX 권한 검사를 추가했습니다."

#: ../../library/netrc.rst:36
msgid ""
":func:`os.path.expanduser` is used to find the location of the "
":file:`.netrc` file when *file* is not passed as argument."
msgstr ""
"*file*\\이 인자로 전달되지 않으면 :func:`os.path.expanduser`\\가 :file:`.netrc` 파일의 "
"위치를 찾는 데 사용됩니다."

#: ../../library/netrc.rst:40
msgid ""
":class:`netrc` try UTF-8 encoding before using locale specific encoding. "
"The entry in the netrc file no longer needs to contain all tokens.  The "
"missing tokens' value default to an empty string.  All the tokens and "
"their values now can contain arbitrary characters, like whitespace and "
"non-ASCII characters. If the login name is anonymous, it won't trigger "
"the security check."
msgstr ""

#: ../../library/netrc.rst:51
#, fuzzy
msgid ""
"Exception raised by the :class:`~netrc.netrc` class when syntactical "
"errors are encountered in source text.  Instances of this exception "
"provide three interesting attributes:"
msgstr ""
"소스 텍스트에 문법적인 에러가 있을 때 :class:`~netrc.netrc` 클래스에서 발생하는 예외. 이 예외 인스턴스는 세 "
"가지 흥미로운 어트리뷰트를 제공합니다. :attr:`msg`\\는 에러의 텍스트 설명이고, :attr:`filename`\\은 소스"
" 파일의 이름이며, :attr:`lineno`\\는 에러가 발견된 줄 번호입니다."

#: ../../library/netrc.rst:57
msgid "Textual explanation of the error."
msgstr ""

#: ../../library/netrc.rst:61
msgid "The name of the source file."
msgstr ""

#: ../../library/netrc.rst:65
msgid "The line number on which the error was found."
msgstr ""

#: ../../library/netrc.rst:71
msgid "netrc Objects"
msgstr "netrc 객체"

#: ../../library/netrc.rst:73
msgid "A :class:`~netrc.netrc` instance has the following methods:"
msgstr ":class:`~netrc.netrc` 인스턴스에는 다음과 같은 메서드가 있습니다:"

#: ../../library/netrc.rst:78
msgid ""
"Return a 3-tuple ``(login, account, password)`` of authenticators for "
"*host*. If the netrc file did not contain an entry for the given host, "
"return the tuple associated with the 'default' entry.  If neither "
"matching host nor default entry is available, return ``None``."
msgstr ""
"*host*\\에 대한 인증 자의 3-tuple ``(login, account, password)``\\를 반환합니다. netrc"
" 파일에 주어진 호스트에 대한 항목이 없으면 'default' 항목과 연관된 튜플을 반환합니다. 일치하는 호스트도 기본 항목도 "
"사용할 수 없으면 ``None``\\을 반환합니다."

#: ../../library/netrc.rst:86
msgid ""
"Dump the class data as a string in the format of a netrc file. (This "
"discards comments and may reorder the entries.)"
msgstr "클래스 데이터를 netrc 파일의 형식의 문자열로 덤프합니다. (이것은 주석을 버리고 엔트리를 재정렬할 수 있습니다.)"

#: ../../library/netrc.rst:89
msgid "Instances of :class:`~netrc.netrc` have public instance variables:"
msgstr ":class:`~netrc.netrc`\\의 인스턴스에는 공개 인스턴스 변수가 있습니다:"

#: ../../library/netrc.rst:94
msgid ""
"Dictionary mapping host names to ``(login, account, password)`` tuples.  "
"The 'default' entry, if any, is represented as a pseudo-host by that "
"name."
msgstr ""
"호스트 이름을 ``(login, account, password)`` 튜플에 매핑하는 딕셔너리. 'default' 항목이 있으면 그"
" 이름의 의사 호스트로 표시됩니다."

#: ../../library/netrc.rst:100
msgid "Dictionary mapping macro names to string lists."
msgstr "매크로 이름을 문자열 리스트에 매핑하는 딕셔너리."

#~ msgid ""
#~ "Passwords are limited to a subset "
#~ "of the ASCII character set.  All "
#~ "ASCII punctuation is allowed in "
#~ "passwords, however, note that whitespace "
#~ "and non-printable characters are not "
#~ "allowed in passwords.  This is a "
#~ "limitation of the way the .netrc "
#~ "file is parsed and may be removed"
#~ " in the future."
#~ msgstr ""
#~ "암호는 ASCII 문자 집합의 부분집합으로 제한됩니다. 모든"
#~ " ASCII 구두점을 암호에 사용할 수 있지만, 공백과"
#~ " 인쇄 할 수 없는 문자는 암호에 사용할 수"
#~ " 없습니다. 이것은 .netrc 파일이 구문 분석되는 "
#~ "방식으로 인한 제한 사항이며 향후 제거될 수 "
#~ "있습니다."


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/mailcap.rst:2
#, fuzzy
msgid ":mod:`!mailcap` --- Mailcap file handling"
msgstr ":mod:`mailcap` --- Mailcap 파일 처리"

#: ../../library/mailcap.rst:10
msgid ""
"This module is no longer part of the Python standard library. It was "
":ref:`removed in Python 3.13 <whatsnew313-pep594>` after being deprecated"
" in Python 3.11.  The removal was decided in :pep:`594`."
msgstr ""

#: ../../library/mailcap.rst:14
msgid ""
"The last version of Python that provided the :mod:`!mailcap` module was "
"`Python 3.12 <https://docs.python.org/3.12/library/mailcap.html>`_."
msgstr ""

#~ msgid "**Source code:** :source:`Lib/mailcap.py`"
#~ msgstr "**소스 코드:** :source:`Lib/mailcap.py`"

#~ msgid ""
#~ "Mailcap files are used to configure "
#~ "how MIME-aware applications such as "
#~ "mail readers and Web browsers react "
#~ "to files with different MIME types. "
#~ "(The name \"mailcap\" is derived from"
#~ " the phrase \"mail capability\".)  For "
#~ "example, a mailcap file might contain"
#~ " a line like ``video/mpeg; xmpeg "
#~ "%s``.  Then, if the user encounters "
#~ "an email message or Web document "
#~ "with the MIME type :mimetype:`video/mpeg`, "
#~ "``%s`` will be replaced by a "
#~ "filename (usually one belonging to a "
#~ "temporary file) and the :program:`xmpeg` "
#~ "program can be automatically started to"
#~ " view the file."
#~ msgstr ""
#~ "Mailcap 파일은 메일 리더와 웹 브라우저와 같은 "
#~ "MIME 인식 응용 프로그램이 MIME 형식의 파일에 "
#~ "따라 반응하는 방식을 구성하는 데 사용됩니다. "
#~ "(\"mailcap\" 이라는 이름은 \"mail capability\" "
#~ "라는 구문에서 왔습니다.) 예를 들어, mailcap 파일에는"
#~ " ``video/mpeg; xmpeg %s``\\와 같은 줄이 있을"
#~ " 수 있습니다. 그러면, 사용자가 MIME 유형이 "
#~ ":mimetype:`video/mpeg` 인 전자 메일 메시지 또는"
#~ " 웹 문서를 만나면, ``%s``\\가 파일명(대개 임시 "
#~ "파일에 속한 파일)으로 치환되고 :program:`xmpeg` 프로그램을"
#~ " 자동으로 시작하여 파일을 볼 수 있습니다."

#~ msgid ""
#~ "The mailcap format is documented in "
#~ ":rfc:`1524`, \"A User Agent Configuration "
#~ "Mechanism For Multimedia Mail Format "
#~ "Information\", but is not an Internet"
#~ " standard.  However, mailcap files are "
#~ "supported on most Unix systems."
#~ msgstr ""
#~ "mailcap 형식은 :rfc:`1524`, \"A User Agent"
#~ " Configuration Mechanism For Multimedia "
#~ "Mail Format Information\"\\에 설명되어 있지만, "
#~ "인터넷 표준은 아닙니다. 그러나, mailcap 파일은 대부분"
#~ " 유닉스 시스템에서 지원됩니다."

#~ msgid ""
#~ "Return a 2-tuple; the first element "
#~ "is a string containing the command "
#~ "line to be executed (which can be"
#~ " passed to :func:`os.system`), and the "
#~ "second element is the mailcap entry "
#~ "for a given MIME type.  If no "
#~ "matching MIME type can be found, "
#~ "``(None, None)`` is returned."
#~ msgstr ""
#~ "2-튜플을 반환합니다; 첫 번째 요소는 실행될 명령 "
#~ "줄(:func:`os.system`\\에 전달될 수 있음)을 포함하는 "
#~ "문자열이고, 두 번째 요소는 지정된 MIME 유형에 "
#~ "대한 mailcap 항목입니다. 일치하는 MIME 유형을 찾을"
#~ " 수 없으면 ``(None, None)``\\이 반환됩니다."

#~ msgid ""
#~ "*key* is the name of the field "
#~ "desired, which represents the type of"
#~ " activity to be performed; the "
#~ "default value is 'view', since in "
#~ "the  most common case you simply "
#~ "want to view the body of the "
#~ "MIME-typed data.  Other possible values"
#~ " might be 'compose' and 'edit', if"
#~ " you wanted to create a new "
#~ "body of the given MIME type or "
#~ "alter the existing body data.  See "
#~ ":rfc:`1524` for a complete list of "
#~ "these fields."
#~ msgstr ""
#~ "*key*\\는 원하는 이름인데, 수행할 활동의 유형을 "
#~ "나타냅니다; 가장 흔히 MIME 형식의 데이터 본문을 "
#~ "보고만 싶으므로 기본값은 'view' 입니다. 주어진 MIME"
#~ " 유형의 새 본문을 만들거나 기존 본문 데이터를 "
#~ "변경하려고 할 때, 다른 가능한 값으로 'compose'"
#~ " 이나 'edit' 가 있습니다. 이 필드의 전체 "
#~ "목록은 :rfc:`1524`\\를 참조하십시오."

#~ msgid ""
#~ "*filename* is the filename to be "
#~ "substituted for ``%s`` in the command"
#~ " line; the default value is "
#~ "``'/dev/null'`` which is almost certainly "
#~ "not what you want, so usually "
#~ "you'll override it by specifying a "
#~ "filename."
#~ msgstr ""
#~ "*filename*\\은 명령 줄에서 ``%s``\\에 치환될 "
#~ "파일명입니다. 기본값은 ``'/dev/null'`` 이지만, 거의 "
#~ "확실하게 원하는 것이 아닐 것이기 때문에, 보통 "
#~ "파일명을 지정하여 이를 대체합니다."

#~ msgid ""
#~ "*plist* can be a list containing "
#~ "named parameters; the default value is"
#~ " simply an empty list.  Each entry"
#~ " in the list must be a string"
#~ " containing the parameter name, an "
#~ "equals sign (``'='``), and the "
#~ "parameter's value.  Mailcap entries can "
#~ "contain  named parameters like ``%{foo}``, "
#~ "which will be replaced by the "
#~ "value of the parameter named 'foo'.  "
#~ "For example, if the command line "
#~ "``showpartial %{id} %{number} %{total}`` was"
#~ " in a mailcap file, and *plist* "
#~ "was set to ``['id=1', 'number=2', "
#~ "'total=3']``, the resulting command line "
#~ "would be ``'showpartial 1 2 3'``."
#~ msgstr ""
#~ "*plist*\\는 이름있는 매개 변수를 포함하는 리스트일 수"
#~ " 있습니다; 기본값은 단순히 빈 리스트입니다. 리스트의 "
#~ "각 항목은 매개 변수 이름, 등호(``'='``) 및 "
#~ "매개 변수의 값이 포함된 문자열이어야 합니다. Mailcap"
#~ " 항목은 ``%{foo}``\\와 같은 이름있는 매개 변수를 "
#~ "포함할 수 있는데, 'foo' 라는 이름의 매개 "
#~ "변수의 값으로 치환됩니다. 예를 들어, 명령 줄 "
#~ "``showpartial %{id} %{number} %{total}``\\이 "
#~ "mailcap 파일에 있고, *plist*\\가 ``['id=1', "
#~ "'number=2', 'total=3']``\\로 설정되었으면, 결과 명령 "
#~ "줄은 ``'showpartial 1 2 3'``\\가 됩니다."

#~ msgid ""
#~ "In a mailcap file, the \"test\" "
#~ "field can optionally be specified to "
#~ "test some external condition (such as"
#~ " the machine architecture, or the "
#~ "window system in use) to determine "
#~ "whether or not the mailcap line "
#~ "applies.  :func:`findmatch` will automatically "
#~ "check such conditions and skip the "
#~ "entry if the check fails."
#~ msgstr ""
#~ "mailcap 파일에서, \"test\" 필드를 선택적으로 지정하여"
#~ " mailcap 줄이 적용되는지를 판단하기 위해 일부 "
#~ "외부 조건(가령 기계 아키텍처나 사용 중인 윈도우 "
#~ "시스템)을 검사할 수 있습니다. :func:`findmatch`\\는 "
#~ "자동으로 그러한 조건을 검사하고 검사가 실패하면 항목을 "
#~ "건너뜁니다."

#~ msgid ""
#~ "Returns a dictionary mapping MIME types"
#~ " to a list of mailcap file "
#~ "entries. This dictionary must be passed"
#~ " to the :func:`findmatch` function.  An "
#~ "entry is stored as a list of "
#~ "dictionaries, but it shouldn't be "
#~ "necessary to know the details of "
#~ "this representation."
#~ msgstr ""
#~ "MIME 유형을 mailcap 파일 항목 리스트에 매핑하는"
#~ " 딕셔너리를 반환합니다. 이 딕셔너리는 :func:`findmatch` "
#~ "함수에 전달되어야 합니다. 항목은 딕셔너리의 리스트로 "
#~ "저장되지만, 이 표현의 세부 사항을 알 필요는 "
#~ "없습니다."

#~ msgid ""
#~ "The information is derived from all "
#~ "of the mailcap files found on the"
#~ " system. Settings in the user's "
#~ "mailcap file :file:`$HOME/.mailcap` will "
#~ "override settings in the system mailcap"
#~ " files :file:`/etc/mailcap`, :file:`/usr/etc/mailcap`,"
#~ " and :file:`/usr/local/etc/mailcap`."
#~ msgstr ""
#~ "이 정보는 시스템에서 발견된 모든 mailcap 파일에서"
#~ " 파생됩니다. 사용자의 mailcap 파일 "
#~ ":file:`$HOME/.mailcap`\\의 설정은 시스템 mailcap 파일"
#~ " :file:`/etc/mailcap`, :file:`/usr/etc/mailcap` 및 "
#~ ":file:`/usr/local/etc/mailcap`\\의 설정보다 우선합니다."

#~ msgid "An example usage::"
#~ msgstr "사용 예::"


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/pipes.rst:2
#, fuzzy
msgid ":mod:`!pipes` --- Interface to shell pipelines"
msgstr ":mod:`pipes` --- 셸 파이프라인에 대한 인터페이스"

#: ../../library/pipes.rst:10
msgid ""
"This module is no longer part of the Python standard library. It was "
":ref:`removed in Python 3.13 <whatsnew313-pep594>` after being deprecated"
" in Python 3.11.  The removal was decided in :pep:`594`."
msgstr ""

#: ../../library/pipes.rst:14
msgid "Applications should use the :mod:`subprocess` module instead."
msgstr ""

#: ../../library/pipes.rst:16
msgid ""
"The last version of Python that provided the :mod:`!pipes` module was "
"`Python 3.12 <https://docs.python.org/3.12/library/pipes.html>`_."
msgstr ""

#~ msgid "**Source code:** :source:`Lib/pipes.py`"
#~ msgstr "**소스 코드:** :source:`Lib/pipes.py`"

#~ msgid ""
#~ "The :mod:`pipes` module defines a class"
#~ " to abstract the concept of a "
#~ "*pipeline* --- a sequence of converters"
#~ " from one file to  another."
#~ msgstr ""
#~ ":mod:`pipes` 모듈은 *파이프라인* 개념을 추상화하는 클래스를"
#~ " 정의합니다 --- 하나의 파일을 다른 파일로 변환하는"
#~ " 일련의 변환기입니다."

#~ msgid ""
#~ "Because the module uses :program:`/bin/sh` "
#~ "command lines, a POSIX or compatible "
#~ "shell for :func:`os.system` and "
#~ ":func:`os.popen` is required."
#~ msgstr ""
#~ "모듈이 :program:`/bin/sh` 명령 줄을 사용하므로, "
#~ ":func:`os.system` 와 :func:`os.popen`\\를 위한 "
#~ "POSIX 나 그와 호환되는 셸이 필요합니다."

#~ msgid "The :mod:`pipes` module defines the following class:"
#~ msgstr ":mod:`pipes` 모듈은 다음 클래스를 정의합니다:"

#~ msgid "An abstraction of a pipeline."
#~ msgstr "파이프라인의 추상화."

#~ msgid "Example::"
#~ msgstr "예제::"

#~ msgid "Template Objects"
#~ msgstr "Template 객체"

#~ msgid "Template objects following methods:"
#~ msgstr "Template 객체는 다음 메서드를 갖습니다:"

#~ msgid "Restore a pipeline template to its initial state."
#~ msgstr "파이프라인 템플릿을 초기 상태로 복원합니다."

#~ msgid "Return a new, equivalent, pipeline template."
#~ msgstr "새로운 동등한 파이프라인 템플릿을 반환합니다."

#~ msgid ""
#~ "If *flag* is true, turn debugging "
#~ "on. Otherwise, turn debugging off. When"
#~ " debugging is on, commands to be "
#~ "executed are printed, and the shell "
#~ "is given ``set -x`` command to be"
#~ " more verbose."
#~ msgstr ""
#~ "*flag*\\가 참이면, 디버깅을 켭니다. 그렇지 않으면, "
#~ "디버깅을 끕니다. 디버깅이 켜지면, 실행되는 명령이 인쇄되고,"
#~ " 셸에 ``set -x`` 명령이 주어져 더 자세한"
#~ " 정보가 표시됩니다."

#~ msgid ""
#~ "Append a new action at the end."
#~ " The *cmd* variable must be a "
#~ "valid bourne shell command. The *kind*"
#~ " variable consists of two letters."
#~ msgstr ""
#~ "끝에 새로운 액션을 추가합니다. *cmd* 변수는 올바른"
#~ " bourne 셸 명령이어야 합니다. *kind* 변수는 "
#~ "두 개의 문자로 구성됩니다."

#~ msgid ""
#~ "The first letter can be either of"
#~ " ``'-'`` (which means the command "
#~ "reads its standard input), ``'f'`` "
#~ "(which means the commands reads a "
#~ "given file on the command line) or"
#~ " ``'.'`` (which means the commands "
#~ "reads no input, and hence must be"
#~ " first.)"
#~ msgstr ""
#~ "첫 번째 문자는 ``'-'`` (명령이 표준 입력을 "
#~ "읽음을 의미), ``'f'`` (명령이 명령 줄에서 주어진"
#~ " 파일을 읽음을 의미) 또는 ``'.'`` (명령이 "
#~ "입력을 읽지 않음을 의미하므로, 반드시 첫 번째여야 "
#~ "합니다) 일 수 있습니다."

#~ msgid ""
#~ "Similarly, the second letter can be "
#~ "either of ``'-'`` (which means  the "
#~ "command writes to standard output), "
#~ "``'f'`` (which means the  command writes"
#~ " a file on the command line) or"
#~ " ``'.'`` (which means the command "
#~ "does not write anything, and hence "
#~ "must be last.)"
#~ msgstr ""
#~ "마찬가지로, 두 번째 문자는 ``'-'`` (명령이 표준"
#~ " 출력에 쓰는 것을 의미), ``'f'`` (명령이 명령"
#~ " 줄에서 주어진 파일에 쓰는 것을 의미) 또는 "
#~ "``'.'`` (명령이 아무것도 쓰지 않음을 의미하므로, "
#~ "반드시 마지막이어야 합니다) 일 수 있습니다."

#~ msgid ""
#~ "Add a new action at the beginning."
#~ " See :meth:`append` for explanations of "
#~ "the arguments."
#~ msgstr "처음에 새로운 액션을 추가합니다. 인자에 대한 설명은 :meth:`append`\\를 참조하십시오."

#~ msgid ""
#~ "Return a file-like object, open to"
#~ " *file*, but read from or written "
#~ "to by the pipeline.  Note that "
#~ "only one of ``'r'``, ``'w'`` may "
#~ "be given."
#~ msgstr ""
#~ "*file*\\로 열려 있지만, 파이프라인에서 읽거나 파이프라인으로"
#~ " 쓰는 파일류 객체를 반환합니다. ``'r'``, ``'w'``"
#~ " 중 하나만 주어질 수 있습니다."

#~ msgid "Copy *infile* to *outfile* through the pipe."
#~ msgstr "파이프를 통해 *infile*\\를 *outfile*\\로 복사합니다."


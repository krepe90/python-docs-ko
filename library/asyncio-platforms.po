# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/asyncio-platforms.rst:9
msgid "Platform Support"
msgstr "플랫폼 지원"

#: ../../library/asyncio-platforms.rst:11
msgid ""
"The :mod:`asyncio` module is designed to be portable, but some platforms "
"have subtle differences and limitations due to the platforms' underlying "
"architecture and capabilities."
msgstr ""
":mod:`asyncio` 모듈은 이식성이 있도록 설계되었지만, 플랫폼의 하부 아키텍처와 기능으로 인해 일부 플랫폼에는 미묘한 "
"차이점과 제약이 있습니다."

#: ../../library/asyncio-platforms.rst:17
msgid "All Platforms"
msgstr "모든 플랫폼"

#: ../../library/asyncio-platforms.rst:19
msgid ""
":meth:`loop.add_reader` and :meth:`loop.add_writer` cannot be used to "
"monitor file I/O."
msgstr ""
":meth:`loop.add_reader`\\와 :meth:`loop.add_writer`\\는 파일 I/O를 감시하는데 사용할 수"
" 없습니다."

#: ../../library/asyncio-platforms.rst:24
msgid "Windows"
msgstr "윈도우"

#: ../../library/asyncio-platforms.rst:26
msgid ""
"**Source code:** :source:`Lib/asyncio/proactor_events.py`, "
":source:`Lib/asyncio/windows_events.py`, "
":source:`Lib/asyncio/windows_utils.py`"
msgstr ""
"**소스 코드:** :source:`Lib/asyncio/proactor_events.py`, "
":source:`Lib/asyncio/windows_events.py`, "
":source:`Lib/asyncio/windows_utils.py`"

#: ../../library/asyncio-platforms.rst:34
msgid "On Windows, :class:`ProactorEventLoop` is now the default event loop."
msgstr "윈도우에서, :class:`ProactorEventLoop`\\는 이제 기본 이벤트 루프입니다."

#: ../../library/asyncio-platforms.rst:36
msgid "All event loops on Windows do not support the following methods:"
msgstr "윈도우의 모든 이벤트 루프는 다음 메서드를 지원하지 않습니다:"

#: ../../library/asyncio-platforms.rst:38
#, fuzzy
msgid ""
":meth:`loop.create_unix_connection` and :meth:`loop.create_unix_server` "
"are not supported. The :const:`socket.AF_UNIX` socket family is specific "
"to Unix."
msgstr ""
":meth:`loop.create_unix_connection` 와 :meth:`loop.create_unix_server`\\는 "
"지원되지 않습니다. :data:`socket.AF_UNIX` 소켓 패밀리는 유닉스에만 적용됩니다."

#: ../../library/asyncio-platforms.rst:42
msgid ""
":meth:`loop.add_signal_handler` and :meth:`loop.remove_signal_handler` "
"are not supported."
msgstr ""
":meth:`loop.add_signal_handler`\\와 :meth:`loop.remove_signal_handler`\\는 "
"지원되지 않습니다."

#: ../../library/asyncio-platforms.rst:45
msgid ":class:`SelectorEventLoop` has the following limitations:"
msgstr ":class:`SelectorEventLoop`\\에는 다음과 같은 제약이 있습니다:"

#: ../../library/asyncio-platforms.rst:47
msgid ""
":class:`~selectors.SelectSelector` is used to wait on socket events: it "
"supports sockets and is limited to 512 sockets."
msgstr ""
":class:`~selectors.SelectSelector`\\는 소켓 이벤트를 기다리는 데 사용됩니다: 소켓을 지원하며 "
"512개의 소켓으로 제한됩니다."

#: ../../library/asyncio-platforms.rst:50
msgid ""
":meth:`loop.add_reader` and :meth:`loop.add_writer` only accept socket "
"handles (e.g. pipe file descriptors are not supported)."
msgstr ""
":meth:`loop.add_reader`\\와 :meth:`loop.add_writer`\\는 소켓 핸들만 받아들입니다 (예를 "
"들어, 파이프 파일 기술자는 지원되지 않습니다)."

#: ../../library/asyncio-platforms.rst:53
msgid ""
"Pipes are not supported, so the :meth:`loop.connect_read_pipe` and "
":meth:`loop.connect_write_pipe` methods are not implemented."
msgstr ""
"파이프는 지원되지 않으므로, :meth:`loop.connect_read_pipe`\\와 "
":meth:`loop.connect_write_pipe` 메서드는 구현되지 않습니다."

#: ../../library/asyncio-platforms.rst:56
msgid ""
":ref:`Subprocesses <asyncio-subprocess>` are not supported, i.e. "
":meth:`loop.subprocess_exec` and :meth:`loop.subprocess_shell` methods "
"are not implemented."
msgstr ""
":ref:`서브 프로세스 <asyncio-subprocess>`\\는 지원되지 않습니다, 즉, "
":meth:`loop.subprocess_exec` 와 :meth:`loop.subprocess_shell` 메서드가 구현되지 "
"않습니다."

#: ../../library/asyncio-platforms.rst:60
msgid ":class:`ProactorEventLoop` has the following limitations:"
msgstr ":class:`ProactorEventLoop`\\에는 다음과 같은 제약이 있습니다:"

#: ../../library/asyncio-platforms.rst:62
msgid ""
"The :meth:`loop.add_reader` and :meth:`loop.add_writer` methods are not "
"supported."
msgstr ":meth:`loop.add_reader`\\와 :meth:`loop.add_writer` 메서드는 지원되지 않습니다."

#: ../../library/asyncio-platforms.rst:65
#, fuzzy
msgid ""
"The resolution of the monotonic clock on Windows is usually around 15.6 "
"milliseconds.  The best resolution is 0.5 milliseconds. The resolution "
"depends on the hardware (availability of `HPET "
"<https://en.wikipedia.org/wiki/High_Precision_Event_Timer>`_) and on the "
"Windows configuration."
msgstr ""
"윈도우에서 단조 시계의 해상도는 대개 15.6 msec 근처입니다. 최상의 해상도는 0.5 msec입니다. 해상도는 "
"하드웨어(`HPET "
"<https://en.wikipedia.org/wiki/High_Precision_Event_Timer>`_\\이 사용 가능한지)와"
" 윈도우 구성에 따라 다릅니다."

#: ../../library/asyncio-platforms.rst:75
msgid "Subprocess Support on Windows"
msgstr "윈도우에서의 서브 프로세스 지원"

#: ../../library/asyncio-platforms.rst:77
msgid ""
"On Windows, the default event loop :class:`ProactorEventLoop` supports "
"subprocesses, whereas :class:`SelectorEventLoop` does not."
msgstr ""
"윈도우에서, 기본 이벤트 루프 :class:`ProactorEventLoop`\\는 서브 프로세스를 지원하지만, "
":class:`SelectorEventLoop`\\는 그렇지 않습니다."

#: ../../library/asyncio-platforms.rst:80
msgid ""
"The :meth:`policy.set_child_watcher() "
"<AbstractEventLoopPolicy.set_child_watcher>` function is also not "
"supported, as :class:`ProactorEventLoop` has a different mechanism to "
"watch child processes."
msgstr ""
":class:`ProactorEventLoop`\\가 자식 프로세스를 관찰하는 다른 메커니즘을 가지고 있으므로, "
":meth:`policy.set_child_watcher() "
"<AbstractEventLoopPolicy.set_child_watcher>` 함수도 지원되지 않습니다."

#: ../../library/asyncio-platforms.rst:87
msgid "macOS"
msgstr "macOS"

#: ../../library/asyncio-platforms.rst:89
msgid "Modern macOS versions are fully supported."
msgstr "최신 macOS 버전은 완전하게 지원됩니다."

#: ../../library/asyncio-platforms.rst:92
msgid "macOS <= 10.8"
msgstr "macOS <= 10.8"

#: ../../library/asyncio-platforms.rst:93
msgid ""
"On macOS 10.6, 10.7 and 10.8, the default event loop uses "
":class:`selectors.KqueueSelector`, which does not support character "
"devices on these versions.  The :class:`SelectorEventLoop` can be "
"manually configured to use :class:`~selectors.SelectSelector` or "
":class:`~selectors.PollSelector` to support character devices on these "
"older versions of macOS.  Example::"
msgstr ""
"macOS 10.6, 10.7 및 10.8에서, 기본 이벤트 루프는 "
":class:`selectors.KqueueSelector`\\를 사용하는데, 이 버전에서는 문자 장치를 지원하지 않습니다. 이러한"
" 이전 버전의 macOS에서 문자 장치를 지원하려면, :class:`SelectorEventLoop`\\가 "
":class:`~selectors.SelectSelector` 나 :class:`~selectors.PollSelector`\\를 "
"사용하도록 수동으로 구성할 수 있습니다. 예::"

#: ../../library/asyncio-platforms.rst:100
msgid ""
"import asyncio\n"
"import selectors\n"
"\n"
"selector = selectors.SelectSelector()\n"
"loop = asyncio.SelectorEventLoop(selector)\n"
"asyncio.set_event_loop(loop)"
msgstr ""


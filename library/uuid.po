# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: 2018-09-02 10:23+0900\n"
"Last-Translator: Spike H.Y. Lee <rurouni24@gmail.com>\n"
"Language: ko_KR\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/uuid.rst:2
msgid ":mod:`!uuid` --- UUID objects according to :rfc:`4122`"
msgstr ":mod:`!uuid` --- :rfc:`4122` 에 따른 UUID 객체"

#: ../../library/uuid.rst:9
msgid "**Source code:** :source:`Lib/uuid.py`"
msgstr "**소스 코드:** :source:`Lib/uuid.py`"

#: ../../library/uuid.rst:13
msgid ""
"This module provides immutable :class:`UUID` objects (the :class:`UUID` "
"class) and the functions :func:`uuid1`, :func:`uuid3`, :func:`uuid4`, "
":func:`uuid5` for generating version 1, 3, 4, and 5 UUIDs as specified in"
" :rfc:`4122`."
msgstr ""
"이 모듈은 :rfc:`4122`\\에서 명시한 버전 1, 3, 4 및 5의 UUID를 생성하기 위해 불변 :class:`UUID` "
"객체(:class:`UUID` 클래스)와 :func:`uuid1`, :func:`uuid3`, :func:`uuid4`, "
":func:`uuid5`\\를 제공합니다."

#: ../../library/uuid.rst:17
msgid ""
"If all you want is a unique ID, you should probably call :func:`uuid1` or"
" :func:`uuid4`.  Note that :func:`uuid1` may compromise privacy since it "
"creates a UUID containing the computer's network address.  :func:`uuid4` "
"creates a random UUID."
msgstr ""
"고유 ID만을 얻고자 한다면 :func:`uuid1` 또는 :func:`uuid4`\\를 호출하는 것이 좋습니다. "
":func:`uuid1` 함수는 컴퓨터의 네트워크 주소를 포함하여 UUID를 생성하므로 개인정보가 노출될 수 있음을 명심해야 "
"합니다. :func:`uuid4`\\는 무작위 UUID를 생성합니다."

#: ../../library/uuid.rst:22
msgid ""
"Depending on support from the underlying platform, :func:`uuid1` may or "
"may not return a \"safe\" UUID.  A safe UUID is one which is generated "
"using synchronization methods that ensure no two processes can obtain the"
" same UUID.  All instances of :class:`UUID` have an :attr:`~UUID.is_safe`"
" attribute which relays any information about the UUID's safety, using "
"this enumeration:"
msgstr ""
"기본 플랫폼의 지원 여부에 따라, :func:`uuid1`\\은 \"안전한\" UUID를 반환하거나 그렇지 않을 수도 있습니다. "
"안전한 UUID는 두 프로세스가 같은 UUID를 얻지 못하게 하는 동기화 메서드에 의해 생성됩니다. :class:`UUID`\\의 "
"모든 인스턴스는 UUID의 안정성에 대한 정보를 중계하는 :attr:`~UUID.is_safe` 어트리뷰트가 있고, 다음의 열거체를"
" 사용합니다."

#: ../../library/uuid.rst:34
msgid "The UUID was generated by the platform in a multiprocessing-safe way."
msgstr "플랫폼이 다중 프로세스에 안전한 방식으로 UUID를 생성합니다."

#: ../../library/uuid.rst:38
msgid "The UUID was not generated in a multiprocessing-safe way."
msgstr "다중 프로세스에 안전한 방식으로 생성되지 않습니다."

#: ../../library/uuid.rst:42
msgid ""
"The platform does not provide information on whether the UUID was "
"generated safely or not."
msgstr "플랫폼이 UUID를 안전하게 생성하였는지에 대한 정보를 제공하지 않습니다."

#: ../../library/uuid.rst:47
msgid ""
"Create a UUID from either a string of 32 hexadecimal digits, a string of "
"16 bytes in big-endian order as the *bytes* argument, a string of 16 "
"bytes in little-endian order as the *bytes_le* argument, a tuple of six "
"integers (32-bit *time_low*, 16-bit *time_mid*, 16-bit *time_hi_version*,"
" 8-bit *clock_seq_hi_variant*, 8-bit *clock_seq_low*, 48-bit *node*) as "
"the *fields* argument, or a single 128-bit integer as the *int* argument."
" When a string of hex digits is given, curly braces, hyphens, and a URN "
"prefix are all optional.  For example, these expressions all yield the "
"same UUID::"
msgstr ""
"32자리 16진수 문자열, *bytes* 인자에 빅 엔디안 순서 16바이트열, *bytes_le* 인자에 리틀 엔디안 순서 "
"16바이트열, *fields* 인자에 여섯 개의 정수로 이루어진 튜플(32-bit *time_low*, 16-bit "
"*time_mid*, 16-bit *time_hi_version*, 8-bit *clock_seq_hi_variant*, 8-bit"
" *clock_seq_low*, 48-bit *node*), *int* 인자에 단일 128bit 정수 중 하나를 이용하여 UUID를"
" 만듭니다. 16진수 문자열로 주어졌을 경우 중괄호, 붙임표(hyphen), URN 접두어는 모두 선택사항입니다. 예를 들어, 아래"
" 표현들은 모두 같은 UUID를 산출합니다:"

#: ../../library/uuid.rst:57
#, python-brace-format
msgid ""
"UUID('{12345678-1234-5678-1234-567812345678}')\n"
"UUID('12345678123456781234567812345678')\n"
"UUID('urn:uuid:12345678-1234-5678-1234-567812345678')\n"
"UUID(bytes=b'\\x12\\x34\\x56\\x78'*4)\n"
"UUID(bytes_le=b'\\x78\\x56\\x34\\x12\\x34\\x12\\x78\\x56' +\n"
"              b'\\x12\\x34\\x56\\x78\\x12\\x34\\x56\\x78')\n"
"UUID(fields=(0x12345678, 0x1234, 0x5678, 0x12, 0x34, 0x567812345678))\n"
"UUID(int=0x12345678123456781234567812345678)"
msgstr ""
"UUID('{12345678-1234-5678-1234-567812345678}')\n"
"UUID('12345678123456781234567812345678')\n"
"UUID('urn:uuid:12345678-1234-5678-1234-567812345678')\n"
"UUID(bytes=b'\\x12\\x34\\x56\\x78'*4)\n"
"UUID(bytes_le=b'\\x78\\x56\\x34\\x12\\x34\\x12\\x78\\x56' +\n"
"              b'\\x12\\x34\\x56\\x78\\x12\\x34\\x56\\x78')\n"
"UUID(fields=(0x12345678, 0x1234, 0x5678, 0x12, 0x34, 0x567812345678))\n"
"UUID(int=0x12345678123456781234567812345678)"

#: ../../library/uuid.rst:66
msgid ""
"Exactly one of *hex*, *bytes*, *bytes_le*, *fields*, or *int* must be "
"given. The *version* argument is optional; if given, the resulting UUID "
"will have its variant and version number set according to :rfc:`4122`, "
"overriding bits in the given *hex*, *bytes*, *bytes_le*, *fields*, or "
"*int*."
msgstr ""
"*hex*, *bytes*, *bytes_le*, *fields*, *int* 중 하나는 반드시 주어져야 합니다. *version*"
" 인자는 선택사항입니다; 인자로 주어질 경우, 결과로 생성된 UUID는 :rfc:`4122`\\에 따라 변종 및 버전 번호를 "
"설정하고 주어진 *hex*, *bytes*, *bytes_le*, *fields*, *int* 비트를 오버라이딩 합니다."

#: ../../library/uuid.rst:71
msgid ""
"Comparison of UUID objects are made by way of comparing their "
":attr:`UUID.int` attributes.  Comparison with a non-UUID object raises a "
":exc:`TypeError`."
msgstr ""
"UUID 객체끼리 비교할 때 :attr:`UUID.int` 어트리뷰트를 비교하여 수행합니다. UUID가 아닌 객체와 비교하면 "
":exc:`TypeError`\\가 발생합니다."

#: ../../library/uuid.rst:75
msgid ""
"``str(uuid)`` returns a string in the form "
"``12345678-1234-5678-1234-567812345678`` where the 32 hexadecimal digits "
"represent the UUID."
msgstr ""
"``str(uuid)``\\는 ``12345678-1234-5678-1234-567812345678``\\과같이 32자리 16진수 "
"UUID로 표현합니다."

#: ../../library/uuid.rst:79
msgid ":class:`UUID` instances have these read-only attributes:"
msgstr ":class:`UUID` 객체는 다음과 같은 읽기 전용 어트리뷰트를 갖습니다."

#: ../../library/uuid.rst:83
msgid ""
"The UUID as a 16-byte string (containing the six integer fields in big-"
"endian byte order)."
msgstr "16바이트 문자열(여섯 개의 빅 엔디안 순서 정수 필드 포함)인 UUID"

#: ../../library/uuid.rst:89
msgid ""
"The UUID as a 16-byte string (with *time_low*, *time_mid*, and "
"*time_hi_version* in little-endian byte order)."
msgstr "16바이트 문자열(리틀 엔디안 순서 *time_low*, *time_mid*, *time_hi_version*)인 UUID"

#: ../../library/uuid.rst:95
msgid ""
"A tuple of the six integer fields of the UUID, which are also available "
"as six individual attributes and two derived attributes:"
msgstr "UUID의 여섯 개의 정수 필드로 이루어진 튜플. 여섯 개의 개별 어트리뷰트와 두 개의 파생된 어트리뷰트도 사용 가능:"

#: ../../library/uuid.rst:100
msgid "Field"
msgstr "필드"

#: ../../library/uuid.rst:101
msgid "Meaning"
msgstr "의미"

#: ../../library/uuid.rst:104
msgid "The first 32 bits of the UUID."
msgstr "UUID의 처음 32bit."

#: ../../library/uuid.rst:107 ../../library/uuid.rst:110
msgid "The next 16 bits of the UUID."
msgstr "UUID의 다음 16bit."

#: ../../library/uuid.rst:113 ../../library/uuid.rst:116
msgid "The next 8 bits of the UUID."
msgstr "UUID의 다음 8bit."

#: ../../library/uuid.rst:119
msgid "The last 48 bits of the UUID."
msgstr "UUID의 마지막 48bit."

#: ../../library/uuid.rst:122
msgid "The 60-bit timestamp."
msgstr "60bit 타임스탬프."

#: ../../library/uuid.rst:125
msgid "The 14-bit sequence number."
msgstr "14bit 시퀀스 번호."

#: ../../library/uuid.rst:130
msgid "The UUID as a 32-character lowercase hexadecimal string."
msgstr "32자리 소문자 16진수 문자열 UUID."

#: ../../library/uuid.rst:135
msgid "The UUID as a 128-bit integer."
msgstr "128bit 정수 UUID"

#: ../../library/uuid.rst:140
msgid "The UUID as a URN as specified in :rfc:`4122`."
msgstr ":rfc:`4122`\\에서 명시한 URN의 UUID"

#: ../../library/uuid.rst:145
msgid ""
"The UUID variant, which determines the internal layout of the UUID. This "
"will be one of the constants :const:`RESERVED_NCS`, :const:`RFC_4122`, "
":const:`RESERVED_MICROSOFT`, or :const:`RESERVED_FUTURE`."
msgstr ""
"UUID 변종은 UUID의 내부 레이아웃을 결정합니다. 이는 상수 :const:`RESERVED_NCS`, "
":const:`RFC_4122`, :const:`RESERVED_MICROSOFT`, 및 "
":const:`RESERVED_FUTURE` 중 하나입니다."

#: ../../library/uuid.rst:152
msgid ""
"The UUID version number (1 through 5, meaningful only when the variant is"
" :const:`RFC_4122`)."
msgstr "UUID 버전 번호 (1부터 5까지이며, 변종이 :const:`RFC_4122`\\일 때만 유효)"

#: ../../library/uuid.rst:157
msgid ""
"An enumeration of :class:`SafeUUID` which indicates whether the platform "
"generated the UUID in a multiprocessing-safe way."
msgstr "플랫폼이 UUID를 다중 프로세스에 안전한 방식으로 생성했는지를 나타내는 :class:`SafeUUID`\\의 열거체입니다."

#: ../../library/uuid.rst:162
msgid "The :mod:`uuid` module defines the following functions:"
msgstr ":mod:`uuid` 모듈은 다음의 함수들을 정의합니다."

#: ../../library/uuid.rst:167
msgid ""
"Get the hardware address as a 48-bit positive integer.  The first time "
"this runs, it may launch a separate program, which could be quite slow.  "
"If all attempts to obtain the hardware address fail, we choose a random "
"48-bit number with the multicast bit (least significant bit of the first "
"octet) set to 1 as recommended in :rfc:`4122`.  \"Hardware address\" "
"means the MAC address of a network interface.  On a machine with multiple"
" network interfaces, universally administered MAC addresses (i.e. where "
"the second least significant bit of the first octet is *unset*) will be "
"preferred over locally administered MAC addresses, but with no other "
"ordering guarantees."
msgstr ""
"하드웨어 주소를 48bit 양의 정수로 가져옵니다. 최초 실행 시 별도의 프로그램으로 실행될 수 있고, 매우 느려질 수 있습니다. "
"하드웨어 주소를 얻기 위한 시도가 모두 실패하면, :rfc:`4122`\\가 권장하는 대로 멀티캐스트 비트(첫 옥텟의 최하위 "
"비트)가 1로 설정된 무작위 48bit 숫자를 선택합니다. \"하드웨어 주소\"는 네트워크 인터페이스의 MAC 주소를 뜻합니다. "
"여러 네트워크 인터페이스를 가진 머신에서 보편적으로 관리하는 MAC 주소(즉, 첫 번째 옥텟의 두 번째 최하위 비트가 "
"*unset*\\인 경우)는 로컬에서 관리하는 MAC 주소보다 우선하지만, 순서를 보장하지는 않습니다."

#: ../../library/uuid.rst:177
msgid ""
"Universally administered MAC addresses are preferred over locally "
"administered MAC addresses, since the former are guaranteed to be "
"globally unique, while the latter are not."
msgstr ""
"보편적으로 관리하는 MAC 주소는 로컬로 관리하는 MAC 주소보다 우선합니다. 전자는 주소가 전 세계적으로 고유함을 보장하지만, "
"후자는 그렇지 않기 때문입니다."

#: ../../library/uuid.rst:185
msgid ""
"Generate a UUID from a host ID, sequence number, and the current time. If"
" *node* is not given, :func:`getnode` is used to obtain the hardware "
"address. If *clock_seq* is given, it is used as the sequence number; "
"otherwise a random 14-bit sequence number is chosen."
msgstr ""
"호스트 ID, 시퀀스 번호 및 현재 시각으로 UUID 생성. *node*\\가 주어지지 않으면, :func:`getnode`\\를 "
"사용하여 하드웨어 주소를 얻습니다. *clock_seq*\\가 주어지면 시퀀스 번호로 사용합니다. 그렇지 않을 경우, 무작위 "
"14bit 시퀀스 번호를 사용합니다."

#: ../../library/uuid.rst:193
msgid ""
"Generate a UUID based on the MD5 hash of a namespace identifier (which is"
" a UUID) and a name (which is a :class:`bytes` object or a string that "
"will be encoded using UTF-8)."
msgstr ""
"이름 공간 식별자(UUID) 및 이름(:class:`bytes` 객체나 UTF-8로 인코딩할 문자열)의 MD5 해시를 기반으로 "
"UUID 생성."

#: ../../library/uuid.rst:200
msgid "Generate a random UUID."
msgstr "무작위 UUID 생성."

#: ../../library/uuid.rst:205
msgid ""
"Generate a UUID based on the SHA-1 hash of a namespace identifier (which "
"is a UUID) and a name (which is a :class:`bytes` object or a string that "
"will be encoded using UTF-8)."
msgstr ""
"이름 공간 식별자(UUID) 및 이름(:class:`bytes` 객체나 UTF-8로 인코딩할 문자열)의 SHA-1 해시를 기반으로 "
"UUID 생성."

#: ../../library/uuid.rst:210
msgid ""
"The :mod:`uuid` module defines the following namespace identifiers for "
"use with :func:`uuid3` or :func:`uuid5`."
msgstr ":mod:`uuid` 모듈은 :func:`uuid3`\\과 :func:`uuid5`\\를 위한 아래의 이름 공간 식별자를 정의합니다."

#: ../../library/uuid.rst:216
msgid ""
"When this namespace is specified, the *name* string is a fully qualified "
"domain name."
msgstr "이 이름 공간이 지정되면 *name* 문자열은 전체 도메인 이름(FQDN)입니다."

#: ../../library/uuid.rst:222
msgid "When this namespace is specified, the *name* string is a URL."
msgstr "이 이름 공간이 지정되면 *name* 문자열은 URL입니다."

#: ../../library/uuid.rst:227
msgid "When this namespace is specified, the *name* string is an ISO OID."
msgstr "이 이름 공간이 지정되면 *name* 문자열은 ISO OID입니다."

#: ../../library/uuid.rst:232
msgid ""
"When this namespace is specified, the *name* string is an X.500 DN in DER"
" or a text output format."
msgstr "이 이름 공간이 지정되면 *name* 문자열은 DER이나 텍스트 출력 형식의 X.500 DN입니다."

#: ../../library/uuid.rst:235
msgid ""
"The :mod:`uuid` module defines the following constants for the possible "
"values of the :attr:`~UUID.variant` attribute:"
msgstr ":mod:`uuid` 모듈은 :attr:`~UUID.variant` 어트리뷰트로 사용할 수 있는 값으로 다음의 상수를 정의합니다:"

#: ../../library/uuid.rst:241
msgid "Reserved for NCS compatibility."
msgstr "NCS 호환성을 위해 예약됨."

#: ../../library/uuid.rst:246
msgid "Specifies the UUID layout given in :rfc:`4122`."
msgstr ":rfc:`4122` 의 UUID 레이아웃 명시."

#: ../../library/uuid.rst:251
msgid "Reserved for Microsoft compatibility."
msgstr "마이크로소프트 호환성을 위해 예약됨."

#: ../../library/uuid.rst:256
msgid "Reserved for future definition."
msgstr "추후 정의를 위해 예약됨."

#: ../../library/uuid.rst:261
msgid ":rfc:`4122` - A Universally Unique IDentifier (UUID) URN Namespace"
msgstr ":rfc:`4122` - 범용 고유 식별자(UUID) URN 이름 공간"

#: ../../library/uuid.rst:262
msgid ""
"This specification defines a Uniform Resource Name namespace for UUIDs, "
"the internal format of UUIDs, and methods of generating UUIDs."
msgstr "이 명세는 UUID를 위한 통합 자원 식별자 이름 공간, UUID의 내부 형식 및 UUID 생성 방법을 정의합니다."

#: ../../library/uuid.rst:269
msgid "Command-Line Usage"
msgstr "명령줄 사용법"

#: ../../library/uuid.rst:273
msgid "The :mod:`uuid` module can be executed as a script from the command line."
msgstr ""

#: ../../library/uuid.rst:275
#, python-brace-format
msgid ""
"python -m uuid [-h] [-u {uuid1,uuid3,uuid4,uuid5}] [-n NAMESPACE] [-N "
"NAME]"
msgstr ""
"python -m uuid [-h] [-u {uuid1,uuid3,uuid4,uuid5}] [-n NAMESPACE] [-N "
"NAME]"

#: ../../library/uuid.rst:279
msgid "The following options are accepted:"
msgstr ""

#: ../../library/uuid.rst:285
msgid "Show the help message and exit."
msgstr ""

#: ../../library/uuid.rst:290
msgid ""
"Specify the function name to use to generate the uuid. By default "
":func:`uuid4` is used."
msgstr ""

#: ../../library/uuid.rst:296
msgid ""
"The namespace is a ``UUID``, or ``@ns`` where ``ns`` is a well-known "
"predefined UUID addressed by namespace name. Such as ``@dns``, ``@url``, "
"``@oid``, and ``@x500``. Only required for :func:`uuid3` / :func:`uuid5` "
"functions."
msgstr ""

#: ../../library/uuid.rst:303
msgid ""
"The name used as part of generating the uuid. Only required for "
":func:`uuid3` / :func:`uuid5` functions."
msgstr ""

#: ../../library/uuid.rst:310
msgid "Example"
msgstr "예제"

#: ../../library/uuid.rst:312
msgid "Here are some examples of typical usage of the :mod:`uuid` module::"
msgstr ":mod:`uuid` 모듈을 사용하는 전형적인 몇 가지 예제입니다::"

#: ../../library/uuid.rst:314
#, python-brace-format
msgid ""
">>> import uuid\n"
"\n"
">>> # make a UUID based on the host ID and current time\n"
">>> uuid.uuid1()\n"
"UUID('a8098c1a-f86e-11da-bd1a-00112444be1e')\n"
"\n"
">>> # make a UUID using an MD5 hash of a namespace UUID and a name\n"
">>> uuid.uuid3(uuid.NAMESPACE_DNS, 'python.org')\n"
"UUID('6fa459ea-ee8a-3ca4-894e-db77e160355e')\n"
"\n"
">>> # make a random UUID\n"
">>> uuid.uuid4()\n"
"UUID('16fd2706-8baf-433b-82eb-8c7fada847da')\n"
"\n"
">>> # make a UUID using a SHA-1 hash of a namespace UUID and a name\n"
">>> uuid.uuid5(uuid.NAMESPACE_DNS, 'python.org')\n"
"UUID('886313e1-3b8a-5372-9b90-0c9aee199e5d')\n"
"\n"
">>> # make a UUID from a string of hex digits (braces and hyphens "
"ignored)\n"
">>> x = uuid.UUID('{00010203-0405-0607-0809-0a0b0c0d0e0f}')\n"
"\n"
">>> # convert a UUID to a string of hex digits in standard form\n"
">>> str(x)\n"
"'00010203-0405-0607-0809-0a0b0c0d0e0f'\n"
"\n"
">>> # get the raw 16 bytes of the UUID\n"
">>> x.bytes\n"
"b'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f'"
"\n"
"\n"
">>> # make a UUID from a 16-byte string\n"
">>> uuid.UUID(bytes=x.bytes)\n"
"UUID('00010203-0405-0607-0809-0a0b0c0d0e0f')"
msgstr ""
">>> import uuid\n"
"\n"
">>> # 호스트 ID 와 현재 시간에 기반한 UUID 를 만듭니다\n"
">>> uuid.uuid1()\n"
"UUID('a8098c1a-f86e-11da-bd1a-00112444be1e')\n"
"\n"
">>> # 이름공간 UUID 와 이름의 MD5 해시를 사용해서 UUID 를 만듭니다\n"
">>> uuid.uuid3(uuid.NAMESPACE_DNS, 'python.org')\n"
"UUID('6fa459ea-ee8a-3ca4-894e-db77e160355e')\n"
"\n"
">>> # 무작위 UUID 를 만듭니다\n"
">>> uuid.uuid4()\n"
"UUID('16fd2706-8baf-433b-82eb-8c7fada847da')\n"
"\n"
">>> # 이름공간 UUID 와 이름의 SHA-1 해시를 사용해서 UUID 를 만듭니다\n"
">>> uuid.uuid5(uuid.NAMESPACE_DNS, 'python.org')\n"
"UUID('886313e1-3b8a-5372-9b90-0c9aee199e5d')\n"
"\n"
">>> # 16진수 문자열로 UUID 를 만듭니다 (중괄호와 붙임표(hyphen)는 무시됩니다)\n"
">>> x = uuid.UUID('{00010203-0405-0607-0809-0a0b0c0d0e0f}')\n"
"\n"
">>> # UUID 를 표준 형식의 16진수 문자열로 변환합니다\n"
">>> str(x)\n"
"'00010203-0405-0607-0809-0a0b0c0d0e0f'\n"
"\n"
">>> # UUID 의 길이 16인 날 바이트열을 얻습니다\n"
">>> x.bytes\n"
"b'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f'"
"\n"
"\n"
">>> # 길이 16인 바이트열로 UUID 를 만듭니다\n"
">>> uuid.UUID(bytes=x.bytes)\n"
"UUID('00010203-0405-0607-0809-0a0b0c0d0e0f')"

#: ../../library/uuid.rst:351
msgid "Command-Line Example"
msgstr "명령줄 예제"

#: ../../library/uuid.rst:353
msgid ""
"Here are some examples of typical usage of the :mod:`uuid` command line "
"interface:"
msgstr ":mod:`uuid` 명령줄 인터페이스를 사용하는 전형적인 몇 가지 예제입니다:"

#: ../../library/uuid.rst:355
msgid ""
"# generate a random uuid - by default uuid4() is used\n"
"$ python -m uuid\n"
"\n"
"# generate a uuid using uuid1()\n"
"$ python -m uuid -u uuid1\n"
"\n"
"# generate a uuid using uuid5\n"
"$ python -m uuid -u uuid5 -n @url -N example.com"
msgstr ""
"# 무작위 uuid 를 생성합니다 - 기본적으로 uuid4() 가 사용됩니다\n"
"$ python -m uuid\n"
"\n"
"# uuid1() 으로 uuid 를 생성합니다\n"
"$ python -m uuid -u uuid1\n"
"\n"
"# uuid5 로 uuid 를 생성합니다\n"
"$ python -m uuid -u uuid5 -n @url -N example.com"

#~ msgid ":attr:`time_low`"
#~ msgstr ":attr:`time_low`"

#~ msgid ":attr:`time_mid`"
#~ msgstr ":attr:`time_mid`"

#~ msgid ":attr:`time_hi_version`"
#~ msgstr ":attr:`time_hi_version`"

#~ msgid ":attr:`clock_seq_hi_variant`"
#~ msgstr ":attr:`clock_seq_hi_variant`"

#~ msgid ":attr:`clock_seq_low`"
#~ msgstr ":attr:`clock_seq_low`"

#~ msgid ":attr:`node`"
#~ msgstr ":attr:`node`"

#~ msgid ":attr:`time`"
#~ msgstr ":attr:`time`"

#~ msgid ":attr:`clock_seq`"
#~ msgstr ":attr:`clock_seq`"


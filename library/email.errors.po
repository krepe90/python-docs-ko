# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/email.errors.rst:2
msgid ":mod:`!email.errors`: Exception and Defect classes"
msgstr ":mod:`!email.errors`: 예외와 결함 클래스"

#: ../../library/email.errors.rst:7
msgid "**Source code:** :source:`Lib/email/errors.py`"
msgstr "**소스 코드:** :source:`Lib/email/errors.py`"

#: ../../library/email.errors.rst:11
msgid ""
"The following exception classes are defined in the :mod:`email.errors` "
"module:"
msgstr ":mod:`email.errors` 모듈에는 다음과 같은 예외 클래스가 정의되어 있습니다:"

#: ../../library/email.errors.rst:16
msgid ""
"This is the base class for all exceptions that the :mod:`email` package "
"can raise.  It is derived from the standard :exc:`Exception` class and "
"defines no additional methods."
msgstr ""
"이것은 :mod:`email` 패키지가 발생시킬 수 있는 모든 예외의 베이스 클래스입니다. 표준 :exc:`Exception` "
"클래스에서 파생되며 추가 메서드를 정의하지 않습니다."

#: ../../library/email.errors.rst:23
msgid ""
"This is the base class for exceptions raised by the "
":class:`~email.parser.Parser` class.  It is derived from "
":exc:`MessageError`.  This class is also used internally by the parser "
"used by :mod:`~email.headerregistry`."
msgstr ""
"이것은 :class:`~email.parser.Parser` 클래스에서 발생하는 예외의 베이스 클래스입니다. "
":exc:`MessageError`\\에서 파생됩니다. 이 클래스는 :mod:`~email.headerregistry`\\에서 "
"사용하는 구문 분석기에서도 내부적으로 사용됩니다."

#: ../../library/email.errors.rst:31
msgid ""
"Raised under some error conditions when parsing the :rfc:`5322` headers "
"of a message, this class is derived from :exc:`MessageParseError`.  The "
":meth:`~email.message.EmailMessage.set_boundary` method will raise this "
"error if the content type is unknown when the method is called. "
":class:`~email.header.Header` may raise this error for certain base64 "
"decoding errors, and when an attempt is made to create a header that "
"appears to contain an embedded header (that is, there is what is supposed"
" to be a continuation line that has no leading whitespace and looks like "
"a header)."
msgstr ""
"메시지의 :rfc:`5322` 헤더를 구문 분석할 때 일부 에러 조건에서 발생합니다. 이 클래스는 "
":exc:`MessageParseError`\\에서 파생됩니다. 메서드가 호출될 때 콘텐츠 유형을 알 수 없으면, "
":meth:`~email.message.EmailMessage.set_boundary` 메서드는 이 에러를 발생시킵니다. "
":class:`~email.header.Header`\\는 특정 base64 디코딩 에러와 내장된 헤더를 포함하는 것으로 보이는 "
"헤더를 만들려고 할 때 (즉, 연장 줄(continuation line)이어야 할 곳에 선행 공백이 없고 헤더처럼 보이는 것이 있을"
" 때) 이 에러를 발생시킬 수 있습니다."

#: ../../library/email.errors.rst:43
msgid "Deprecated and no longer used."
msgstr "폐지되었고 더는 사용되지 않습니다."

#: ../../library/email.errors.rst:48
msgid ""
"Raised if the :meth:`~email.message.Message.attach` method is called on "
"an instance of a class derived from "
":class:`~email.mime.nonmultipart.MIMENonMultipart` (e.g. "
":class:`~email.mime.image.MIMEImage`). :exc:`MultipartConversionError` "
"multiply inherits from :exc:`MessageError` and the built-in "
":exc:`TypeError`."
msgstr ""
":class:`~email.mime.nonmultipart.MIMENonMultipart`\\에서 파생된 클래스(가령 "
":class:`~email.mime.image.MIMEImage`)의 인스턴스에서 "
":meth:`~email.message.Message.attach` 메서드를 호출할 때 발생합니다. "
":exc:`MultipartConversionError`\\는 :exc:`MessageError`\\와 내장 "
":exc:`TypeError`\\에서 다중 상속됩니다."

#: ../../library/email.errors.rst:58
msgid ""
"Raised when an error occurs when the :mod:`~email.generator` outputs "
"headers."
msgstr ""

#: ../../library/email.errors.rst:64
msgid ""
"This is the base class for all defects found when parsing email messages."
" It is derived from :exc:`ValueError`."
msgstr "이메일 메시지를 구문 분석할 때 발견되는 모든 결함에 대한 베이스 클래스입니다. :exc:`ValueError`\\에서 파생됩니다."

#: ../../library/email.errors.rst:69
msgid ""
"This is the base class for all defects found when parsing email headers. "
"It is derived from :exc:`MessageDefect`."
msgstr ""
"이메일 헤더를 구문 분석할 때 발견되는 모든 결함에 대한 베이스 클래스입니다. :exc:`MessageDefect`\\에서 "
"파생됩니다."

#: ../../library/email.errors.rst:72
msgid ""
"Here is the list of the defects that the "
":class:`~email.parser.FeedParser` can find while parsing messages.  Note "
"that the defects are added to the message where the problem was found, so"
" for example, if a message nested inside a "
":mimetype:`multipart/alternative` had a malformed header, that nested "
"message object would have a defect, but the containing messages would "
"not."
msgstr ""
"다음은 메시지를 구문 분석하는 동안 :class:`~email.parser.FeedParser`\\가 찾을 수 있는 결함 "
"목록입니다. 문제가 발견된 메시지에 결함이 추가됨에 유의하십시오. 그래서, 예를 들어, "
":mimetype:`multipart/alternative` 내에 중첩된 메시지에 잘못된 헤더가 있으면, 해당 중첩 메시지 객체가 "
"결함을 갖게 되지만 포함하는 메시지는 그렇지 않습니다."

#: ../../library/email.errors.rst:78
msgid ""
"All defect classes are subclassed from "
":class:`email.errors.MessageDefect`."
msgstr "모든 결함 클래스는 :class:`email.errors.MessageDefect`\\의 서브 클래스입니다."

#: ../../library/email.errors.rst:82
msgid ""
"A message claimed to be a multipart, but had no :mimetype:`boundary` "
"parameter."
msgstr "메시지가 멀티 파트라고 주장했지만, :mimetype:`boundary` 파라미터가 없습니다."

#: ../../library/email.errors.rst:87
msgid ""
"The start boundary claimed in the :mailheader:`Content-Type` header was "
"never found."
msgstr ":mailheader:`Content-Type` 헤더에서 주장하는 시작 경계를 찾지 못했습니다."

#: ../../library/email.errors.rst:92
msgid ""
"A start boundary was found, but no corresponding close boundary was ever "
"found."
msgstr "시작 경계가 발견되었지만, 해당하는 종료 경계가 발견되지 않았습니다."

#: ../../library/email.errors.rst:99
msgid "The message had a continuation line as its first header line."
msgstr "메시지의 첫 번째 헤더 줄에 연장 줄(continuation line)이 있습니다."

#: ../../library/email.errors.rst:103
msgid "A \"Unix From\" header was found in the middle of a header block."
msgstr "헤더 블록 중간에 \"Unix From\" 헤더가 있습니다."

#: ../../library/email.errors.rst:107
msgid ""
"A line was found while parsing headers that had no leading white space "
"but contained no ':'.  Parsing continues assuming that the line "
"represents the first line of the body."
msgstr ""
"헤더를 구문 분석하는 중에 선행 공백이 없지만 ':' 가 포함되지 않은 줄이 발견되었습니다. 그 줄이 본문의 첫 번째 줄을 나타내는"
" 것으로 가정하여 구문 분석이 계속됩니다."

#: ../../library/email.errors.rst:115
msgid "A header was found that was missing a colon, or was otherwise malformed."
msgstr "콜론이 없거나 다른 식으로 잘못된 헤더가 발견되었습니다."

#: ../../library/email.errors.rst:117
msgid "This defect has not been used for several Python versions."
msgstr "이 결함은 여러 파이썬 버전에서 사용되지 않았습니다."

#: ../../library/email.errors.rst:122
msgid ""
"A message claimed to be a :mimetype:`multipart`, but no subparts were "
"found. Note that when a message has this defect, its "
":meth:`~email.message.Message.is_multipart` method may return ``False`` "
"even though its content type claims to be :mimetype:`multipart`."
msgstr ""
"메시지가 :mimetype:`multipart`\\라고 주장했지만, 서브 파트가 없습니다. 메시지에 이 결함이 있으면, 콘텐츠 "
"유형이 :mimetype:`multipart`\\라고 주장하더라도 "
":meth:`~email.message.Message.is_multipart` 메서드는 ``False``\\를 반환할 수 있음에 "
"유의하십시오."

#: ../../library/email.errors.rst:129
msgid ""
"When decoding a block of base64 encoded bytes, the padding was not "
"correct. Enough padding is added to perform the decode, but the resulting"
" decoded bytes may be invalid."
msgstr ""
"base64로 인코딩된 바이트열 블록을 디코딩할 때, 패딩이 올바르지 않습니다. 디코딩을 수행하기 위해 충분한 패딩이 추가되지만, "
"바이트열을 디코딩한 결과는 유효하지 않을 수 있습니다."

#: ../../library/email.errors.rst:135
msgid ""
"When decoding a block of base64 encoded bytes, characters outside the "
"base64 alphabet were encountered.  The characters are ignored, but the "
"resulting decoded bytes may be invalid."
msgstr ""
"base64로 인코딩된 바이트열 블록을 디코딩할 때, base64 알파벳 이외의 문자가 발견되었습니다. 문자는 무시되지만, "
"바이트열을 디코딩한 결과는 유효하지 않을 수 있습니다."

#: ../../library/email.errors.rst:141
msgid ""
"When decoding a block of base64 encoded bytes, the number of non-padding "
"base64 characters was invalid (1 more than a multiple of 4).  The encoded"
" block was kept as-is."
msgstr ""
"base64로 인코딩된 바이트열 블록을 디코딩할 때, 비 패딩 base64 문자 수가 유효하지 않습니다 (4의 배수보다 1이 "
"큽니다). 인코딩된 블록은 그대로 유지됩니다."

#: ../../library/email.errors.rst:147
msgid ""
"When decoding an invalid or unparsable date field.  The original value is"
" kept as-is."
msgstr ""


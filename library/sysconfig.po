# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/sysconfig.rst:2
msgid ":mod:`!sysconfig` --- Provide access to Python's configuration information"
msgstr ":mod:`!sysconfig` --- 파이썬의 구성 정보에 접근하기"

#: ../../library/sysconfig.rst:12
msgid "**Source code:** :source:`Lib/sysconfig`"
msgstr "**소스 코드:** :source:`Lib/sysconfig`"

#: ../../library/sysconfig.rst:19
msgid ""
"The :mod:`sysconfig` module provides access to Python's configuration "
"information like the list of installation paths and the configuration "
"variables relevant for the current platform."
msgstr ""
":mod:`sysconfig` 모듈은 설치 경로 목록과 현재 플랫폼과 관련된 구성 변수와 같은 파이썬 구성 정보에 대한 액세스를 "
"제공합니다."

#: ../../library/sysconfig.rst:25
msgid "Configuration variables"
msgstr "구성 변수"

#: ../../library/sysconfig.rst:27
msgid ""
"A Python distribution contains a :file:`Makefile` and a "
":file:`pyconfig.h` header file that are necessary to build both the "
"Python binary itself and third-party C extensions compiled using "
"``setuptools``."
msgstr ""
"Python 배포판에는 :file:`Makefile` 과 :file:`pyconfig.h` 헤더 파일이 들어 있습니다. 이 파일은 "
"파이썬 바이너리 자체와 ``setuptools`` 를 사용하여 컴파일된 타사 C 확장을 빌드하는 데 필요합니다."

#: ../../library/sysconfig.rst:31
msgid ""
":mod:`sysconfig` puts all variables found in these files in a dictionary "
"that can be accessed using :func:`get_config_vars` or "
":func:`get_config_var`."
msgstr ""
":mod:`sysconfig` 는 :func:`get_config_vars` 또는 :func:`get_config_var`\\를 "
"사용하여 액세스 할 수 있는 딕셔너리에 이들 파일에 있는 모든 변수를 넣습니다."

#: ../../library/sysconfig.rst:34
msgid "Notice that on Windows, it's a much smaller set."
msgstr "윈도우에서는 훨씬 작은 세트입니다."

#: ../../library/sysconfig.rst:38
msgid ""
"With no arguments, return a dictionary of all configuration variables "
"relevant for the current platform."
msgstr "인자가 없으면, 현재 플랫폼과 관련된 모든 구성 변수의 딕셔너리를 반환합니다."

#: ../../library/sysconfig.rst:41
msgid ""
"With arguments, return a list of values that result from looking up each "
"argument in the configuration variable dictionary."
msgstr "인자가 있으면, 인자를 사용하여 구성 변수 딕셔너리에서 각 인자를 조회한 결괏값 리스트를 돌려줍니다."

#: ../../library/sysconfig.rst:44
msgid "For each argument, if the value is not found, return ``None``."
msgstr "인자별로, 값이 없으면 ``None`` 을 반환합니다."

#: ../../library/sysconfig.rst:49
msgid ""
"Return the value of a single variable *name*. Equivalent to "
"``get_config_vars().get(name)``."
msgstr "하나의 변수 *name* 의 값을 반환합니다. ``get_config_vars().get(name)`` 과 같습니다."

#: ../../library/sysconfig.rst:52
msgid "If *name* is not found, return ``None``."
msgstr "*name* 을 찾지 못하면 ``None`` 을 반환합니다."

#: ../../library/sysconfig.rst:54
msgid "Example of usage::"
msgstr "사용 예::"

#: ../../library/sysconfig.rst:56
msgid ""
">>> import sysconfig\n"
">>> sysconfig.get_config_var('Py_ENABLE_SHARED')\n"
"0\n"
">>> sysconfig.get_config_var('LIBDIR')\n"
"'/usr/local/lib'\n"
">>> sysconfig.get_config_vars('AR', 'CXX')\n"
"['ar', 'g++']"
msgstr ""
">>> import sysconfig\n"
">>> sysconfig.get_config_var('Py_ENABLE_SHARED')\n"
"0\n"
">>> sysconfig.get_config_var('LIBDIR')\n"
"'/usr/local/lib'\n"
">>> sysconfig.get_config_vars('AR', 'CXX')\n"
"['ar', 'g++']"

#: ../../library/sysconfig.rst:68
msgid "Installation paths"
msgstr "설치 경로"

#: ../../library/sysconfig.rst:70
msgid ""
"Python uses an installation scheme that differs depending on the platform"
" and on the installation options.  These schemes are stored in "
":mod:`sysconfig` under unique identifiers based on the value returned by "
":const:`os.name`. The schemes are used by package installers to determine"
" where to copy files to."
msgstr ""
"파이썬은 플랫폼과 설치 옵션에 따라 다른 설치 스킴을 사용합니다. 이 스킴은 :const:`os.name` 에 의해 반환된 값을 "
"기반으로 하는 고유한 식별자로 :mod:`sysconfig` 에 저장됩니다. 이 스킴은 패키지 설치기가 파일을 복사할 위치를 "
"결정하는 데 사용됩니다."

#: ../../library/sysconfig.rst:75
msgid "Python currently supports nine schemes:"
msgstr "파이썬은 현재 9가지 스킴을 지원합니다:"

#: ../../library/sysconfig.rst:77
msgid ""
"*posix_prefix*: scheme for POSIX platforms like Linux or macOS.  This is "
"the default scheme used when Python or a component is installed."
msgstr ""
"*posix_prefix*: 리눅스나 맥 OS 같은 포직스(POSIX) 플랫폼용 스킴. 이것은 파이썬이나 컴포넌트가 설치될 때 "
"사용되는 기본 스킴입니다."

#: ../../library/sysconfig.rst:79
msgid ""
"*posix_home*: scheme for POSIX platforms, when the *home* option is used."
" This scheme defines paths located under a specific home prefix."
msgstr ""
"*posix_home*: *home* 옵션이 사용될 때, 포직스 플랫폼용 스킴. 이 스킴은 특정 홈 접두어 아래에 있는 경로를 "
"정의합니다."

#: ../../library/sysconfig.rst:81
msgid ""
"*posix_user*: scheme for POSIX platforms, when the *user* option is used."
" This scheme defines paths located under the user's home directory "
"(:const:`site.USER_BASE`)."
msgstr ""
"*posix_user*: *user* 옵션이 사용될 때, 포직스 플랫폼용 스킴. 이 스킴은 사용자 홈 디렉터리 아래에 있는 경로를 "
"정의합니다 (:const:`site.USER_BASE`)."

#: ../../library/sysconfig.rst:84
msgid ""
"*posix_venv*: scheme for :mod:`Python virtual environments <venv>` on "
"POSIX platforms; by default it is the same as *posix_prefix*."
msgstr ""

#: ../../library/sysconfig.rst:86
msgid ""
"*nt*: scheme for Windows. This is the default scheme used when Python or "
"a component is installed."
msgstr "*nt*: 윈도우용 스킴. 이것은 파이썬이나 컴포넌트가 설치될 때 사용되는 기본 스킴입니다."

#: ../../library/sysconfig.rst:88
msgid "*nt_user*: scheme for Windows, when the *user* option is used."
msgstr "*nt_user*: *user* 옵션이 사용될 때, 윈도우용 스킴."

#: ../../library/sysconfig.rst:89
msgid ""
"*nt_venv*: scheme for :mod:`Python virtual environments <venv>` on "
"Windows; by default it is the same as *nt*."
msgstr ""

#: ../../library/sysconfig.rst:91
msgid ""
"*venv*: a scheme with values from either *posix_venv* or *nt_venv* "
"depending on the platform Python runs on."
msgstr ""

#: ../../library/sysconfig.rst:93
msgid "*osx_framework_user*: scheme for macOS, when the *user* option is used."
msgstr "*osx_framework_user*: *user* 옵션이 사용될, 맥 OS용 스킴."

#: ../../library/sysconfig.rst:95
msgid ""
"Each scheme is itself composed of a series of paths and each path has a "
"unique identifier.  Python currently uses eight paths:"
msgstr "각 스킴은 일련의 경로로 구성되며 각 경로는 고유한 식별자를 가집니다. 파이썬은 현재 8개의 경로를 사용합니다:"

#: ../../library/sysconfig.rst:98
msgid ""
"*stdlib*: directory containing the standard Python library files that are"
" not platform-specific."
msgstr "*stdlib*: 플랫폼마다 다르지 않은 표준 파이썬 라이브러리 파일이 들어있는 디렉터리."

#: ../../library/sysconfig.rst:100
msgid ""
"*platstdlib*: directory containing the standard Python library files that"
" are platform-specific."
msgstr "*platstdlib*: 플랫폼마다 다른 표준 파이썬 라이브러리 파일이 들어있는 디렉터리."

#: ../../library/sysconfig.rst:102
msgid "*platlib*: directory for site-specific, platform-specific files."
msgstr "*platlib*: 사이트마다, 플랫폼마다 다른 파일용 디렉터리."

#: ../../library/sysconfig.rst:103
msgid ""
"*purelib*: directory for site-specific, non-platform-specific files "
"('pure' Python)."
msgstr "*purelib*: 사이트마다 다르지만, 플랫폼마다 다르지 않은 파일이 들어있는 디렉터리 ('순수한' 파이썬')."

#: ../../library/sysconfig.rst:104
msgid ""
"*include*: directory for non-platform-specific header files for the "
"Python C-API."
msgstr "*include*: 파이썬 C-API 를 위한 플랫폼마다 다르지 않은 헤더 파일용 디렉터리."

#: ../../library/sysconfig.rst:106
msgid ""
"*platinclude*: directory for platform-specific header files for the "
"Python C-API."
msgstr "*platinclude*: 파이썬 C-API 를 위한 플랫폼마다 다른 헤더 파일용 디렉터리."

#: ../../library/sysconfig.rst:108
msgid "*scripts*: directory for script files."
msgstr "*scripts*: 스크립트 파일용 디렉터리."

#: ../../library/sysconfig.rst:109
msgid "*data*: directory for data files."
msgstr "*data*: 데이터 파일용 디렉터리."

#: ../../library/sysconfig.rst:115
msgid "User scheme"
msgstr ""

#: ../../library/sysconfig.rst:117
msgid ""
"This scheme is designed to be the most convenient solution for users that"
" don't have write permission to the global site-packages directory or "
"don't want to install into it."
msgstr ""

#: ../../library/sysconfig.rst:121
#, python-brace-format
msgid ""
"Files will be installed into subdirectories of :const:`site.USER_BASE` "
"(written as :file:`{userbase}` hereafter).  This scheme installs pure "
"Python modules and extension modules in the same location (also known as "
":const:`site.USER_SITE`)."
msgstr ""

#: ../../library/sysconfig.rst:126
msgid "``posix_user``"
msgstr "``posix_user``"

#: ../../library/sysconfig.rst:129 ../../library/sysconfig.rst:144
#: ../../library/sysconfig.rst:159 ../../library/sysconfig.rst:187
#: ../../library/sysconfig.rst:229 ../../library/sysconfig.rst:245
msgid "Path"
msgstr "경로"

#: ../../library/sysconfig.rst:129 ../../library/sysconfig.rst:144
#: ../../library/sysconfig.rst:159 ../../library/sysconfig.rst:187
#: ../../library/sysconfig.rst:229 ../../library/sysconfig.rst:245
msgid "Installation directory"
msgstr "설치 디렉터리"

#: ../../library/sysconfig.rst:131 ../../library/sysconfig.rst:146
#: ../../library/sysconfig.rst:161 ../../library/sysconfig.rst:189
#: ../../library/sysconfig.rst:231 ../../library/sysconfig.rst:247
msgid "*stdlib*"
msgstr "*stdlib*"

#: ../../library/sysconfig.rst:131 ../../library/sysconfig.rst:132
#, python-brace-format
msgid ":file:`{userbase}/lib/python{X.Y}`"
msgstr ":file:`{userbase}/lib/python{X.Y}`"

#: ../../library/sysconfig.rst:132 ../../library/sysconfig.rst:147
#: ../../library/sysconfig.rst:162 ../../library/sysconfig.rst:190
#: ../../library/sysconfig.rst:232 ../../library/sysconfig.rst:248
msgid "*platstdlib*"
msgstr "*platstdlib*"

#: ../../library/sysconfig.rst:133 ../../library/sysconfig.rst:148
#: ../../library/sysconfig.rst:163 ../../library/sysconfig.rst:191
#: ../../library/sysconfig.rst:233 ../../library/sysconfig.rst:249
msgid "*platlib*"
msgstr "*platlib*"

#: ../../library/sysconfig.rst:133 ../../library/sysconfig.rst:134
#, python-brace-format
msgid ":file:`{userbase}/lib/python{X.Y}/site-packages`"
msgstr ":file:`{userbase}/lib/python{X.Y}/site-packages`"

#: ../../library/sysconfig.rst:134 ../../library/sysconfig.rst:149
#: ../../library/sysconfig.rst:164 ../../library/sysconfig.rst:192
#: ../../library/sysconfig.rst:234 ../../library/sysconfig.rst:250
msgid "*purelib*"
msgstr "*purelib*"

#: ../../library/sysconfig.rst:135 ../../library/sysconfig.rst:150
#: ../../library/sysconfig.rst:165 ../../library/sysconfig.rst:193
#: ../../library/sysconfig.rst:235 ../../library/sysconfig.rst:251
msgid "*include*"
msgstr "*include*"

#: ../../library/sysconfig.rst:135 ../../library/sysconfig.rst:165
#, python-brace-format
msgid ":file:`{userbase}/include/python{X.Y}`"
msgstr ":file:`{userbase}/include/python{X.Y}`"

#: ../../library/sysconfig.rst:136 ../../library/sysconfig.rst:151
#: ../../library/sysconfig.rst:166 ../../library/sysconfig.rst:195
#: ../../library/sysconfig.rst:237 ../../library/sysconfig.rst:253
msgid "*scripts*"
msgstr "*scripts*"

#: ../../library/sysconfig.rst:136 ../../library/sysconfig.rst:166
#, python-brace-format
msgid ":file:`{userbase}/bin`"
msgstr ":file:`{userbase}/bin`"

#: ../../library/sysconfig.rst:137 ../../library/sysconfig.rst:152
#: ../../library/sysconfig.rst:167 ../../library/sysconfig.rst:196
#: ../../library/sysconfig.rst:238 ../../library/sysconfig.rst:254
msgid "*data*"
msgstr "*data*"

#: ../../library/sysconfig.rst:137 ../../library/sysconfig.rst:152
#: ../../library/sysconfig.rst:167
#, python-brace-format
msgid ":file:`{userbase}`"
msgstr ":file:`{userbase}`"

#: ../../library/sysconfig.rst:141
msgid "``nt_user``"
msgstr "``nt_user``"

#: ../../library/sysconfig.rst:146 ../../library/sysconfig.rst:147
#, python-brace-format
msgid ":file:`{userbase}\\\\Python{XY}`"
msgstr ":file:`{userbase}\\\\Python{XY}`"

#: ../../library/sysconfig.rst:148 ../../library/sysconfig.rst:149
#, python-brace-format
msgid ":file:`{userbase}\\\\Python{XY}\\\\site-packages`"
msgstr ":file:`{userbase}\\\\Python{XY}\\\\site-packages`"

#: ../../library/sysconfig.rst:150
#, python-brace-format
msgid ":file:`{userbase}\\\\Python{XY}\\\\Include`"
msgstr ":file:`{userbase}\\\\Python{XY}\\\\Include`"

#: ../../library/sysconfig.rst:151
#, python-brace-format
msgid ":file:`{userbase}\\\\Python{XY}\\\\Scripts`"
msgstr ":file:`{userbase}\\\\Python{XY}\\\\Scripts`"

#: ../../library/sysconfig.rst:156
msgid "``osx_framework_user``"
msgstr "``osx_framework_user``"

#: ../../library/sysconfig.rst:161 ../../library/sysconfig.rst:162
#, python-brace-format
msgid ":file:`{userbase}/lib/python`"
msgstr ":file:`{userbase}/lib/python`"

#: ../../library/sysconfig.rst:163 ../../library/sysconfig.rst:164
#, python-brace-format
msgid ":file:`{userbase}/lib/python/site-packages`"
msgstr ":file:`{userbase}/lib/python/site-packages`"

#: ../../library/sysconfig.rst:174
msgid "Home scheme"
msgstr ""

#: ../../library/sysconfig.rst:176
msgid ""
"The idea behind the \"home scheme\" is that you build and maintain a "
"personal stash of Python modules.  This scheme's name is derived from the"
" idea of a \"home\" directory on Unix, since it's not unusual for a Unix "
"user to make their home directory have a layout similar to :file:`/usr/` "
"or :file:`/usr/local/`. This scheme can be used by anyone, regardless of "
"the operating system they are installing for."
msgstr ""

#: ../../library/sysconfig.rst:184
msgid "``posix_home``"
msgstr "``posix_home``"

#: ../../library/sysconfig.rst:189 ../../library/sysconfig.rst:190
#: ../../library/sysconfig.rst:191 ../../library/sysconfig.rst:192
#, python-brace-format
msgid ":file:`{home}/lib/python`"
msgstr ":file:`{home}/lib/python`"

#: ../../library/sysconfig.rst:193 ../../library/sysconfig.rst:194
#, python-brace-format
msgid ":file:`{home}/include/python`"
msgstr ":file:`{home}/include/python`"

#: ../../library/sysconfig.rst:194 ../../library/sysconfig.rst:236
#: ../../library/sysconfig.rst:252
msgid "*platinclude*"
msgstr "*platinclude*"

#: ../../library/sysconfig.rst:195
#, python-brace-format
msgid ":file:`{home}/bin`"
msgstr ":file:`{home}/bin`"

#: ../../library/sysconfig.rst:196
#, python-brace-format
msgid ":file:`{home}`"
msgstr ":file:`{home}`"

#: ../../library/sysconfig.rst:203
msgid "Prefix scheme"
msgstr ""

#: ../../library/sysconfig.rst:205
msgid ""
"The \"prefix scheme\" is useful when you wish to use one Python "
"installation to perform the build/install (i.e., to run the setup "
"script), but install modules into the third-party module directory of a "
"different Python installation (or something that looks like a different "
"Python installation).  If this sounds a trifle unusual, it is---that's "
"why the user and home schemes come before.  However, there are at least "
"two known cases where the prefix scheme will be useful."
msgstr ""

#: ../../library/sysconfig.rst:212
#, python-brace-format
msgid ""
"First, consider that many Linux distributions put Python in :file:`/usr`,"
" rather than the more traditional :file:`/usr/local`.  This is entirely "
"appropriate, since in those cases Python is part of \"the system\" rather"
" than a local add-on. However, if you are installing Python modules from "
"source, you probably want them to go in "
":file:`/usr/local/lib/python2.{X}` rather than "
":file:`/usr/lib/python2.{X}`."
msgstr ""

#: ../../library/sysconfig.rst:219
#, python-brace-format
msgid ""
"Another possibility is a network filesystem where the name used to write "
"to a remote directory is different from the name used to read it: for "
"example, the Python interpreter accessed as :file:`/usr/local/bin/python`"
" might search for modules in :file:`/usr/local/lib/python2.{X}`, but "
"those modules would have to be installed to, say, "
":file:`/mnt/{@server}/export/lib/python2.{X}`."
msgstr ""

#: ../../library/sysconfig.rst:226
msgid "``posix_prefix``"
msgstr "``posix_prefix``"

#: ../../library/sysconfig.rst:231 ../../library/sysconfig.rst:232
#, python-brace-format
msgid ":file:`{prefix}/lib/python{X.Y}`"
msgstr ":file:`{prefix}/lib/python{X.Y}`"

#: ../../library/sysconfig.rst:233 ../../library/sysconfig.rst:234
#, python-brace-format
msgid ":file:`{prefix}/lib/python{X.Y}/site-packages`"
msgstr ":file:`{prefix}/lib/python{X.Y}/site-packages`"

#: ../../library/sysconfig.rst:235 ../../library/sysconfig.rst:236
#, python-brace-format
msgid ":file:`{prefix}/include/python{X.Y}`"
msgstr ":file:`{prefix}/include/python{X.Y}`"

#: ../../library/sysconfig.rst:237
#, python-brace-format
msgid ":file:`{prefix}/bin`"
msgstr ":file:`{prefix}/bin`"

#: ../../library/sysconfig.rst:238 ../../library/sysconfig.rst:254
#, python-brace-format
msgid ":file:`{prefix}`"
msgstr ":file:`{prefix}`"

#: ../../library/sysconfig.rst:242
msgid "``nt``"
msgstr "``nt``"

#: ../../library/sysconfig.rst:247 ../../library/sysconfig.rst:248
#, python-brace-format
msgid ":file:`{prefix}\\\\Lib`"
msgstr ":file:`{prefix}\\\\Lib`"

#: ../../library/sysconfig.rst:249 ../../library/sysconfig.rst:250
#, python-brace-format
msgid ":file:`{prefix}\\\\Lib\\\\site-packages`"
msgstr ":file:`{prefix}\\\\Lib\\\\site-packages`"

#: ../../library/sysconfig.rst:251 ../../library/sysconfig.rst:252
#, python-brace-format
msgid ":file:`{prefix}\\\\Include`"
msgstr ":file:`{prefix}\\\\Include`"

#: ../../library/sysconfig.rst:253
#, python-brace-format
msgid ":file:`{prefix}\\\\Scripts`"
msgstr ":file:`{prefix}\\\\Scripts`"

#: ../../library/sysconfig.rst:259
msgid "Installation path functions"
msgstr "설치 경로 함수"

#: ../../library/sysconfig.rst:261
msgid ""
":mod:`sysconfig` provides some functions to determine these installation "
"paths."
msgstr ":mod:`sysconfig` 는 이러한 설치 경로를 결정하는 몇 가지 함수를 제공합니다."

#: ../../library/sysconfig.rst:265
msgid ""
"Return a tuple containing all schemes currently supported in "
":mod:`sysconfig`."
msgstr "현재 :mod:`sysconfig` 에서 지원되는 모든 스킴을 포함하는 튜플을 돌려줍니다."

#: ../../library/sysconfig.rst:271
msgid "Return the default scheme name for the current platform."
msgstr "현재 플랫폼에 대한 기본 스킴 이름을 반환합니다."

#: ../../library/sysconfig.rst:273
msgid ""
"This function was previously named ``_get_default_scheme()`` and "
"considered an implementation detail."
msgstr ""

#: ../../library/sysconfig.rst:277
msgid ""
"When Python runs from a virtual environment, the *venv* scheme is "
"returned."
msgstr ""

#: ../../library/sysconfig.rst:283
msgid ""
"Return a preferred scheme name for an installation layout specified by "
"*key*."
msgstr ""

#: ../../library/sysconfig.rst:285
msgid "*key* must be either ``\"prefix\"``, ``\"home\"``, or ``\"user\"``."
msgstr ""

#: ../../library/sysconfig.rst:287
msgid ""
"The return value is a scheme name listed in :func:`get_scheme_names`. It "
"can be passed to :mod:`sysconfig` functions that take a *scheme* "
"argument, such as :func:`get_paths`."
msgstr ""

#: ../../library/sysconfig.rst:293
msgid ""
"When Python runs from a virtual environment and ``key=\"prefix\"``, the "
"*venv* scheme is returned."
msgstr ""

#: ../../library/sysconfig.rst:300
msgid ""
"Return a dict containing preferred scheme names on the current platform. "
"Python implementers and redistributors may add their preferred schemes to"
" the ``_INSTALL_SCHEMES`` module-level global value, and modify this "
"function to return those scheme names, to e.g. provide different schemes "
"for system and language package managers to use, so packages installed by"
" either do not mix with those by the other."
msgstr ""

#: ../../library/sysconfig.rst:307
msgid ""
"End users should not use this function, but :func:`get_default_scheme` "
"and :func:`get_preferred_scheme` instead."
msgstr ""

#: ../../library/sysconfig.rst:315
msgid ""
"Return a tuple containing all path names currently supported in "
":mod:`sysconfig`."
msgstr "현재 :mod:`sysconfig` 에서 지원되는 모든 경로명을 포함하는 튜플을 돌려줍니다."

#: ../../library/sysconfig.rst:321
msgid ""
"Return an installation path corresponding to the path *name*, from the "
"install scheme named *scheme*."
msgstr "*scheme* 이라는 설치 스킴에서, 경로 *name* 에 해당하는 설치 경로를 돌려줍니다."

#: ../../library/sysconfig.rst:324
msgid "*name* has to be a value from the list returned by :func:`get_path_names`."
msgstr "*name* 은 :func:`get_path_names` 가 돌려주는 리스트에 있는 값이어야 합니다."

#: ../../library/sysconfig.rst:326
#, python-brace-format
msgid ""
":mod:`sysconfig` stores installation paths corresponding to each path "
"name, for each platform, with variables to be expanded.  For instance the"
" *stdlib* path for the *nt* scheme is: ``{base}/Lib``."
msgstr ""
":mod:`sysconfig` 는 각 경로명에 해당하는 설치 경로를 플랫폼별로 확장할 변수와 함께 저장합니다. 예를 들어, *nt*"
" 스킴의 *stdlib* 경로는 ``{base}/Lib`` 입니다."

#: ../../library/sysconfig.rst:330
msgid ""
":func:`get_path` will use the variables returned by "
":func:`get_config_vars` to expand the path.  All variables have default "
"values for each platform so one may call this function and get the "
"default value."
msgstr ""
":func:`get_path` 는 :func:`get_config_vars` 에 의해 반환된 변수를 사용하여 경로를 확장합니다. "
"모든 변수는 각 플랫폼에 대한 기본값을 가지므로 이 함수를 호출하고 기본값을 가져올 수 있습니다."

#: ../../library/sysconfig.rst:334
msgid ""
"If *scheme* is provided, it must be a value from the list returned by "
":func:`get_scheme_names`.  Otherwise, the default scheme for the current "
"platform is used."
msgstr ""
"*scheme* 이 제공되면, 그것은 :func:`get_scheme_names` 에 의해 반환된 리스트에 있는 값이어야 합니다. "
"그렇지 않으면, 현재 플랫폼의 기본 스킴이 사용됩니다."

#: ../../library/sysconfig.rst:338
msgid ""
"If *vars* is provided, it must be a dictionary of variables that will "
"update the dictionary returned by :func:`get_config_vars`."
msgstr "*vars* 가 제공되면, :func:`get_config_vars` 에 의해 반환된 딕셔너리를 갱신할 변수의 딕셔너리여야 합니다."

#: ../../library/sysconfig.rst:341
msgid ""
"If *expand* is set to ``False``, the path will not be expanded using the "
"variables."
msgstr "*expand* 가 ``False`` 로 설정되면, 경로는 변수를 사용하여 확장되지 않습니다."

#: ../../library/sysconfig.rst:344
msgid "If *name* is not found, raise a :exc:`KeyError`."
msgstr "*name* 을 찾지 못하면, :exc:`KeyError`\\를 발생시킵니다."

#: ../../library/sysconfig.rst:349
msgid ""
"Return a dictionary containing all installation paths corresponding to an"
" installation scheme. See :func:`get_path` for more information."
msgstr "설치 스킴에 해당하는 모든 설치 경로를 포함하는 딕셔너리를 돌려줍니다. 자세한 정보는 :func:`get_path` 를 보십시오."

#: ../../library/sysconfig.rst:352
msgid ""
"If *scheme* is not provided, will use the default scheme for the current "
"platform."
msgstr "*scheme* 을 제공하지 않으면, 현재 플랫폼에 대한 기본 스킴을 사용합니다."

#: ../../library/sysconfig.rst:355
msgid ""
"If *vars* is provided, it must be a dictionary of variables that will "
"update the dictionary used to expand the paths."
msgstr "*vars* 가 제공되면, 경로를 확장하는 데 사용되는 딕셔너리를 갱신하는 변수의 딕셔너리여야 합니다."

#: ../../library/sysconfig.rst:358
msgid "If *expand* is set to false, the paths will not be expanded."
msgstr "*expand* 를 거짓으로 설정하면 경로가 확장되지 않습니다."

#: ../../library/sysconfig.rst:360
msgid ""
"If *scheme* is not an existing scheme, :func:`get_paths` will raise a "
":exc:`KeyError`."
msgstr "*scheme* 이 존재하는 스킴이 아니면, :func:`get_paths` 는 :exc:`KeyError` 를 발생시킵니다."

#: ../../library/sysconfig.rst:365
msgid "Other functions"
msgstr "기타 함수"

#: ../../library/sysconfig.rst:369
#, python-format
msgid ""
"Return the ``MAJOR.MINOR`` Python version number as a string.  Similar to"
" ``'%d.%d' % sys.version_info[:2]``."
msgstr ""
"``MAJOR.MINOR`` 파이썬 버전 번호를 문자열로 반환합니다. ``'%d.%d' % sys.version_info[:2]``"
" 와 유사합니다."

#: ../../library/sysconfig.rst:375
msgid "Return a string that identifies the current platform."
msgstr "현재의 플랫폼을 식별하는 문자열을 돌려줍니다."

#: ../../library/sysconfig.rst:377
msgid ""
"This is used mainly to distinguish platform-specific build directories "
"and platform-specific built distributions.  Typically includes the OS "
"name and version and the architecture (as supplied by :func:`os.uname`), "
"although the exact information included depends on the OS; e.g., on "
"Linux, the kernel version isn't particularly important."
msgstr ""
"이는 주로 플랫폼별 빌드 디렉터리와 플랫폼별로 빌드 된 배포판을 구별하기 위해 사용됩니다. 포함된 정확한 정보는 OS에 따라 "
"다르지만, 일반적으로 OS 이름과 버전 및 아키텍처를 포함합니다 (:func:`os.uname` 에서 제공됩니다); 예를 들어, "
"리눅스에서 커널 버전은 특별히 중요하지 않습니다."

#: ../../library/sysconfig.rst:383
msgid "Examples of returned values:"
msgstr "반환 값의 예:"

#: ../../library/sysconfig.rst:385
msgid "linux-i586"
msgstr "linux-i586"

#: ../../library/sysconfig.rst:386
msgid "linux-alpha (?)"
msgstr "linux-alpha (?)"

#: ../../library/sysconfig.rst:387
msgid "solaris-2.6-sun4u"
msgstr "solaris-2.6-sun4u"

#: ../../library/sysconfig.rst:389
msgid "Windows will return one of:"
msgstr "윈도우는 다음 중 하나를 반환합니다:"

#: ../../library/sysconfig.rst:391
msgid "win-amd64 (64-bit Windows on AMD64, aka x86_64, Intel64, and EM64T)"
msgstr "win-amd64 (AMD64의 64비트 윈도우, 일명 x86_64, Intel64, EM64T 등)"

#: ../../library/sysconfig.rst:392
msgid "win-arm64 (64-bit Windows on ARM64, aka AArch64)"
msgstr "win-arm64 (ARM64의 64비트 윈도우, 일명 AArch64)"

#: ../../library/sysconfig.rst:393
msgid "win32 (all others - specifically, sys.platform is returned)"
msgstr "win32 (기타 모든 것 - 구체적으로, sys.platform이 반환됩니다)"

#: ../../library/sysconfig.rst:395
msgid "macOS can return:"
msgstr "맥 OS는 다음을 반환 할 수 있습니다:"

#: ../../library/sysconfig.rst:397
msgid "macosx-10.6-ppc"
msgstr "macosx-10.6-ppc"

#: ../../library/sysconfig.rst:398
msgid "macosx-10.4-ppc64"
msgstr "macosx-10.4-ppc64"

#: ../../library/sysconfig.rst:399
msgid "macosx-10.3-i386"
msgstr "macosx-10.3-i386"

#: ../../library/sysconfig.rst:400
msgid "macosx-10.4-fat"
msgstr "macosx-10.4-fat"

#: ../../library/sysconfig.rst:402
msgid ""
"For other non-POSIX platforms, currently just returns "
":data:`sys.platform`."
msgstr "다른 포직스 이외의 플랫폼의 경우, 현재는 :data:`sys.platform` 만 반환합니다."

#: ../../library/sysconfig.rst:407
msgid ""
"Return ``True`` if the running Python interpreter was built from source "
"and is being run from its built location, and not from a location "
"resulting from e.g. running ``make install`` or installing via a binary "
"installer."
msgstr ""
"실행 중인 파이썬 인터프리터가 소스에서 빌드되어 빌드 된 위치에서 실행되고, ``make install`` 을 실행하거나 바이너리 "
"설치 프로그램을 통해 설치 한 결과가 아닌 위치에서 실행되는 것이 아니라면 ``True`` 를 반환합니다."

#: ../../library/sysconfig.rst:414
msgid "Parse a :file:`config.h`\\-style file."
msgstr ":file:`config.h`\\-스타일 파일을 해석합니다."

#: ../../library/sysconfig.rst:416
msgid "*fp* is a file-like object pointing to the :file:`config.h`\\-like file."
msgstr "*fp* 는 :file:`config.h`\\-류 파일을 가리키는 파일류 객체입니다."

#: ../../library/sysconfig.rst:418
msgid ""
"A dictionary containing name/value pairs is returned.  If an optional "
"dictionary is passed in as the second argument, it is used instead of a "
"new dictionary, and updated with the values read in the file."
msgstr ""
"이름/값 쌍을 포함하는 딕셔너리가 반환됩니다. 선택적 딕셔너리가 두 번째 인자로 전달되면, 새 사전 대신 사용되며 파일에서 읽은 "
"값으로 갱신됩니다."

#: ../../library/sysconfig.rst:425
msgid "Return the path of :file:`pyconfig.h`."
msgstr ":file:`pyconfig.h` 의 경로를 반환합니다."

#: ../../library/sysconfig.rst:429
msgid "Return the path of :file:`Makefile`."
msgstr ":file:`Makefile` 의 경로를 반환합니다."

#: ../../library/sysconfig.rst:434
msgid "Using :mod:`sysconfig` as a script"
msgstr ":mod:`sysconfig` 를 스크립트로 사용하기"

#: ../../library/sysconfig.rst:436
msgid "You can use :mod:`sysconfig` as a script with Python's *-m* option:"
msgstr ":mod:`sysconfig` 를 파이썬의 *-m* 옵션으로 스크립트로 사용할 수 있습니다:"

#: ../../library/sysconfig.rst:438
msgid ""
"$ python -m sysconfig\n"
"Platform: \"macosx-10.4-i386\"\n"
"Python version: \"3.2\"\n"
"Current installation scheme: \"posix_prefix\"\n"
"\n"
"Paths:\n"
"        data = \"/usr/local\"\n"
"        include = \"/Users/tarek/Dev/svn.python.org/py3k/Include\"\n"
"        platinclude = \".\"\n"
"        platlib = \"/usr/local/lib/python3.2/site-packages\"\n"
"        platstdlib = \"/usr/local/lib/python3.2\"\n"
"        purelib = \"/usr/local/lib/python3.2/site-packages\"\n"
"        scripts = \"/usr/local/bin\"\n"
"        stdlib = \"/usr/local/lib/python3.2\"\n"
"\n"
"Variables:\n"
"        AC_APPLE_UNIVERSAL_BUILD = \"0\"\n"
"        AIX_GENUINE_CPLUSPLUS = \"0\"\n"
"        AR = \"ar\"\n"
"        ARFLAGS = \"rc\"\n"
"        ..."
msgstr ""
"$ python -m sysconfig\n"
"Platform: \"macosx-10.4-i386\"\n"
"Python version: \"3.2\"\n"
"Current installation scheme: \"posix_prefix\"\n"
"\n"
"Paths:\n"
"        data = \"/usr/local\"\n"
"        include = \"/Users/tarek/Dev/svn.python.org/py3k/Include\"\n"
"        platinclude = \".\"\n"
"        platlib = \"/usr/local/lib/python3.2/site-packages\"\n"
"        platstdlib = \"/usr/local/lib/python3.2\"\n"
"        purelib = \"/usr/local/lib/python3.2/site-packages\"\n"
"        scripts = \"/usr/local/bin\"\n"
"        stdlib = \"/usr/local/lib/python3.2\"\n"
"\n"
"Variables:\n"
"        AC_APPLE_UNIVERSAL_BUILD = \"0\"\n"
"        AIX_GENUINE_CPLUSPLUS = \"0\"\n"
"        AR = \"ar\"\n"
"        ARFLAGS = \"rc\"\n"
"        ..."

#: ../../library/sysconfig.rst:462
msgid ""
"This call will print in the standard output the information returned by "
":func:`get_platform`, :func:`get_python_version`, :func:`get_path` and "
":func:`get_config_vars`."
msgstr ""
"이 호출은 :func:`get_platform`, :func:`get_python_version`, :func:`get_path` "
"및 :func:`get_config_vars` 에 의해 반환된 정보를 표준 출력에 인쇄합니다."

#: ../../library/sysconfig.rst:14
msgid "configuration information"
msgstr "구성 정보"


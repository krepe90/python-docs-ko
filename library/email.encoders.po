# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../library/email.encoders.rst:2
msgid ":mod:`!email.encoders`: Encoders"
msgstr ":mod:`!email.encoders`: 인코더"

#: ../../library/email.encoders.rst:7
msgid "**Source code:** :source:`Lib/email/encoders.py`"
msgstr "**소스 코드:** :source:`Lib/email/encoders.py`"

#: ../../library/email.encoders.rst:11
msgid ""
"This module is part of the legacy (``Compat32``) email API.  In the new "
"API the functionality is provided by the *cte* parameter of the "
":meth:`~email.message.EmailMessage.set_content` method."
msgstr ""
"이 모듈은 레거시(``Compat32``) 이메일 API의 일부입니다. 새로운 API에서 기능은 "
":meth:`~email.message.EmailMessage.set_content` 메서드의 *cte* 매개 변수에 의해 "
"제공됩니다."

#: ../../library/email.encoders.rst:15
msgid ""
"This module is deprecated in Python 3.  The functions provided here "
"should not be called explicitly since the "
":class:`~email.mime.text.MIMEText` class sets the content type and CTE "
"header using the *_subtype* and *_charset* values passed during the "
"instantiation of that class."
msgstr ""
"이 모듈은 파이썬 3에서 폐지되었습니다. :class:`~email.mime.text.MIMEText` 클래스는 인스턴스 화 중에 "
"전달된 *_subtype*\\과 *_charset* 값을 사용하여 콘텐츠 유형과 CTE 헤더를 설정하므로 여기에 제공된 함수를 "
"명시적으로 호출하면 안 됩니다."

#: ../../library/email.encoders.rst:20
msgid ""
"The remaining text in this section is the original documentation of the "
"module."
msgstr "이 섹션의 나머지 텍스트는 모듈의 원본 설명서입니다."

#: ../../library/email.encoders.rst:22
msgid ""
"When creating :class:`~email.message.Message` objects from scratch, you "
"often need to encode the payloads for transport through compliant mail "
"servers. This is especially true for :mimetype:`image/\\*` and "
":mimetype:`text/\\*` type messages containing binary data."
msgstr ""
":class:`~email.message.Message` 객체를 처음부터 만들 때, 종종 호환 메일 서버를 통한 전송을 위해 페이 "
"로드를 인코딩해야 합니다. 바이너리 데이터가 포함된 :mimetype:`image/\\*`\\와 "
":mimetype:`text/\\*` 유형 메시지의 경우 특히 그렇습니다."

#: ../../library/email.encoders.rst:27
msgid ""
"The :mod:`email` package provides some convenient encoders in its "
":mod:`~email.encoders` module.  These encoders are actually used by the "
":class:`~email.mime.audio.MIMEAudio` and "
":class:`~email.mime.image.MIMEImage` class constructors to provide "
"default encodings.  All encoder functions take exactly one argument, the "
"message object to encode.  They usually extract the payload, encode it, "
"and reset the payload to this newly encoded value.  They should also set "
"the :mailheader:`Content-Transfer-Encoding` header as appropriate."
msgstr ""
":mod:`email` 패키지는 :mod:`~email.encoders` 모듈에서 편리한 인코더를 제공합니다. 이 인코더는 실제로 "
":class:`~email.mime.audio.MIMEAudio`\\와 "
":class:`~email.mime.image.MIMEImage` 클래스 생성자가 기본 인코딩을 제공하는 데 사용됩니다. 모든 "
"인코더 함수는 정확히 하나의 인자, 인코딩할 메시지 객체를 취합니다. 일반적으로 페이 로드를 추출하여, 인코딩한 다음, 페이 로드를"
" 새로 인코딩된 값으로 재설정합니다. 또한 :mailheader:`Content-Transfer-Encoding` 헤더를 적절하게 "
"설정합니다."

#: ../../library/email.encoders.rst:35
msgid ""
"Note that these functions are not meaningful for a multipart message.  "
"They must be applied to individual subparts instead, and will raise a "
":exc:`TypeError` if passed a message whose type is multipart."
msgstr ""
"이러한 함수는 멀티 파트 메시지에는 의미가 없음에 유의하십시오. 대신 개별 서브 파트에 적용해야 하며, 유형이 멀티 파트인 메시지를"
" 전달하면 :exc:`TypeError`\\가 발생합니다."

#: ../../library/email.encoders.rst:39
msgid "Here are the encoding functions provided:"
msgstr "제공되는 인코딩 함수는 다음과 같습니다:"

#: ../../library/email.encoders.rst:44
msgid ""
"Encodes the payload into quoted-printable form and sets the :mailheader"
":`Content-Transfer-Encoding` header to ``quoted-printable`` [#]_. This is"
" a good encoding to use when most of your payload is normal printable "
"data, but contains a few unprintable characters."
msgstr ""
"페이 로드를 인용 quoted-printable 형식으로 인코딩하고 :mailheader:`Content-Transfer-"
"Encoding` 헤더를 ``quoted-printable``\\로 설정합니다 [#]_. 이것은 대부분의 페이 로드가 인쇄 가능한 "
"일반 데이터이지만, 인쇄할 수 없는 문자가 몇 개 있을 때 사용하기에 적합한 인코딩입니다."

#: ../../library/email.encoders.rst:52
msgid ""
"Encodes the payload into base64 form and sets the :mailheader:`Content-"
"Transfer-Encoding` header to ``base64``.  This is a good encoding to use "
"when most of your payload is unprintable data since it is a more compact "
"form than quoted-printable.  The drawback of base64 encoding is that it "
"renders the text non-human readable."
msgstr ""
"페이 로드를 base64 형식으로 인코딩하고 :mailheader:`Content-Transfer-Encoding` 헤더를 "
"``base64``\\로 설정합니다. 이것은 페이 로드가 대부분 인쇄할 수 없는 데이터일 때 사용하기에 좋은 인코딩입니다. "
"quoted-printable보다 더 압축된 형식이기 때문입니다. base64 인코딩의 단점은 텍스트를 사람이 읽을 수 없도록 "
"만든다는 것입니다."

#: ../../library/email.encoders.rst:61
msgid ""
"This doesn't actually modify the message's payload, but it does set the "
":mailheader:`Content-Transfer-Encoding` header to either ``7bit`` or "
"``8bit`` as appropriate, based on the payload data."
msgstr ""
"이것은 실제로 메시지의 페이 로드를 수정하지는 않지만, 페이 로드 데이터를 기반으로, :mailheader:`Content-"
"Transfer-Encoding` 헤더를 적절하게 ``7bit``\\나 ``8bit``\\로 설정합니다."

#: ../../library/email.encoders.rst:68
msgid ""
"This does nothing; it doesn't even set the :mailheader:`Content-Transfer-"
"Encoding` header."
msgstr ""
"이것은 아무것도 하지 않습니다. 심지어 :mailheader:`Content-Transfer-Encoding` 헤더도 설정하지 "
"않습니다."

#: ../../library/email.encoders.rst:72
msgid "Footnotes"
msgstr "각주"

#: ../../library/email.encoders.rst:73
msgid ""
"Note that encoding with :meth:`encode_quopri` also encodes all tabs and "
"space characters in the data."
msgstr ":meth:`encode_quopri`\\로 인코딩하면 데이터의 모든 탭과 공백 문자도 인코딩됨에 유의하십시오."


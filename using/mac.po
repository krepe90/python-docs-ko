# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 23:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../using/mac.rst:6
#, fuzzy
msgid "Using Python on macOS"
msgstr "매킨토시에서 파이썬 사용하기"

#: ../../using/mac.rst:11
msgid ""
"This document aims to give an overview of macOS-specific behavior you "
"should know about to get started with Python on Mac computers. Python on "
"a Mac running macOS is very similar to Python on other Unix-derived "
"platforms, but there are some differences in installation and some "
"features."
msgstr ""

#: ../../using/mac.rst:16
msgid ""
"There are various ways to obtain and install Python for macOS. Pre-built "
"versions of the most recent versions of Python are available from a "
"number of distributors. Much of this document describes use of the "
"Pythons provided by the CPython release team for download from the "
"`python.org website <https://www.python.org/downloads/>`_. See "
":ref:`alternative_bundles` for some other options."
msgstr ""

#: ../../using/mac.rst:34
#, fuzzy
msgid "Using Python for macOS from ``python.org``"
msgstr "매킨토시에서 파이썬 사용하기"

#: ../../using/mac.rst:37
msgid "Installation steps"
msgstr ""

#: ../../using/mac.rst:39
msgid ""
"For `current Python versions <https://www.python.org/downloads/>`_ (other"
" than those in ``security`` status), the release team produces a **Python"
" for macOS** installer package for each new release. A list of available "
"installers is available `here "
"<https://www.python.org/downloads/macos/>`_. We recommend using the most "
"recent supported Python version where possible. Current installers "
"provide a `universal2 binary "
"<https://en.wikipedia.org/wiki/Universal_binary>`_ build of Python which "
"runs natively on all Macs (Apple Silicon and Intel) that are supported by"
" a wide range of macOS versions, currently typically from at least "
"**macOS 10.13 High Sierra** on."
msgstr ""

#: ../../using/mac.rst:51
msgid ""
"The downloaded file is a standard macOS installer package file "
"(``.pkg``). File integrity information (checksum, size, sigstore "
"signature, etc) for each file is included on the release download page. "
"Installer packages and their contents are signed and notarized with "
"``Python Software Foundation`` Apple Developer ID certificates to meet "
"`macOS Gatekeeper requirements <https://support.apple.com/en-"
"us/102445>`_."
msgstr ""

#: ../../using/mac.rst:57
msgid ""
"For a default installation, double-click on the downloaded installer "
"package file. This should launch the standard macOS Installer app and "
"display the first of several installer windows steps."
msgstr ""

#: ../../using/mac.rst:63
msgid ""
"Clicking on the **Continue** button brings up the **Read Me** for this "
"installer. Besides other important information, the **Read Me** documents"
" which Python version is going to be installed and on what versions of "
"macOS it is supported. You may need to scroll through to read the whole "
"file. By default, this **Read Me** will also be installed in "
"|usemac_applications_folder_version| and available to read anytime."
msgstr ""

#: ../../using/mac.rst:71
msgid ""
"Clicking on **Continue** proceeds to display the license for Python and "
"for other included software. You will then need to **Agree** to the "
"license terms before proceeding to the next step. This license file will "
"also be installed and available to be read later."
msgstr ""

#: ../../using/mac.rst:78
msgid ""
"After the license terms are accepted, the next step is the **Installation"
" Type** display. For most uses, the standard set of installation "
"operations is appropriate."
msgstr ""

#: ../../using/mac.rst:83
msgid ""
"By pressing the **Customize** button, you can choose to omit or select "
"certain package components of the installer. Click on each package name "
"to see a description of what it installs. To also install support for the"
" optional experimental free-threaded feature, see :ref:`install-"
"freethreaded-macos`."
msgstr ""

#: ../../using/mac.rst:91
msgid ""
"In either case, clicking **Install** will begin the install process by "
"asking permission to install new software. A macOS user name with "
"``Administrator`` privilege is needed as the installed Python will be "
"available to all users of the Mac."
msgstr ""

#: ../../using/mac.rst:95
msgid "When the installation is complete, the **Summary** window will appear."
msgstr ""

#: ../../using/mac.rst:99
msgid ""
"Double-click on the :command:`Install Certificates.command` icon or file "
"in the |usemac_applications_folder_version| window to complete the "
"installation."
msgstr ""

#: ../../using/mac.rst:105
msgid ""
"This will open a temporary :program:`Terminal` shell window that will use"
" the new Python to download and install SSL root certificates for its "
"use."
msgstr ""

#: ../../using/mac.rst:111
msgid ""
"If ``Successfully installed certifi`` and ``update complete`` appears in "
"the terminal window, the installation is complete. Close this terminal "
"window and the installer window."
msgstr ""

#: ../../using/mac.rst:115
msgid "A default install will include:"
msgstr ""

#: ../../using/mac.rst:117
#, fuzzy
msgid ""
"A |usemac_applications_folder_name| folder in your :file:`Applications` "
"folder. In here you find :program:`IDLE`, the development environment "
"that is a standard part of official Python distributions; and "
":program:`Python Launcher`, which handles double-clicking Python scripts "
"from the macOS `Finder <https://support.apple.com/en-us/HT201732>`_."
msgstr ""
"여러분의 :file:`Applications` 폴더에 있는 :file:`Python 3.9` 폴더. 여기서 다음과 같은 것들을 "
"발견할 수 있습니다: IDLE, 공식 파이썬 배포판의 표준 부품인 개발 환경; 그리고 PythonLauncher, Finder에서의"
" 파이썬 스크립트 더블 클릭을 처리합니다."

#: ../../using/mac.rst:122
#, fuzzy
msgid ""
"A framework :file:`/Library/Frameworks/Python.framework`, which includes "
"the Python executable and libraries. The installer adds this location to "
"your shell path. To uninstall Python, you can remove these three things. "
"Symlinks to the Python executable are placed in :file:`/usr/local/bin/`."
msgstr ""
"파이썬 실행 파일과 라이브러리를 포함하는 프레임워크 "
":file:`/Library/Frameworks/Python.framework`. 설치기는 이 위치를 셸 경로에 추가합니다. "
"MacPython을 제거하려면, 이 세 가지를 지우면 됩니다. 파이썬 실행 파일에 대한 심볼릭 링크는 /usr/local/bin/에"
" 있습니다."

#: ../../using/mac.rst:129
msgid ""
"Recent versions of macOS include a :command:`python3` command in "
":file:`/usr/bin/python3` that links to a usually older and incomplete "
"version of Python provided by and for use by the Apple development tools,"
" :program:`Xcode` or the :program:`Command Line Tools for Xcode`. You "
"should never modify or attempt to delete this installation, as it is "
"Apple-controlled and is used by Apple-provided or third-party software.  "
"If you choose to install a newer Python version from ``python.org``, you "
"will have two different but functional Python installations on your "
"computer that can co-exist. The default installer options should ensure "
"that its :command:`python3` will be used instead of the system "
":command:`python3`."
msgstr ""

#: ../../using/mac.rst:140
msgid "How to run a Python script"
msgstr "파이썬 스크립트를 실행하는 방법"

#: ../../using/mac.rst:142
msgid ""
"There are two ways to invoke the Python interpreter. If you are familiar "
"with using a Unix shell in a terminal window, you can invoke "
"|usemac_python_x_dot_y_literal| or ``python3`` optionally followed by one"
" or more command line options (described in :ref:`using-on-general`). The"
" Python tutorial also has a useful section on :ref:`using Python "
"interactively from a shell <tut-interac>`."
msgstr ""

#: ../../using/mac.rst:149
msgid ""
"You can also invoke the interpreter through an integrated development "
"environment. :ref:`idle` is a basic editor and interpreter environment "
"which is included with the standard distribution of Python. "
":program:`IDLE` includes a Help menu that allows you to access Python "
"documentation. If you are completely new to Python, you can read the "
"tutorial introduction in that document."
msgstr ""

#: ../../using/mac.rst:157
msgid ""
"There are many other editors and IDEs available, see :ref:`editors` for "
"more information."
msgstr ""

#: ../../using/mac.rst:160
msgid ""
"To run a Python script file from the terminal window, you can invoke the "
"interpreter with the name of the script file:"
msgstr ""

#: ../../using/mac.rst:163
msgid "|usemac_python_x_dot_y_literal| ``myscript.py``"
msgstr ""

#: ../../using/mac.rst:165
#, fuzzy
msgid "To run your script from the Finder, you can either:"
msgstr "Finder에서 스크립트를 실행하려면 두 가지 옵션이 있습니다:"

#: ../../using/mac.rst:167
#, fuzzy
msgid "Drag it to :program:`Python Launcher`."
msgstr "스크립트를 :program:`PythonLauncher`\\로 드래그하십시오."

#: ../../using/mac.rst:169
#, fuzzy
msgid ""
"Select :program:`Python Launcher` as the default application to open your"
" script (or any ``.py`` script) through the Finder Info window and "
"double-click it. :program:`Python Launcher` has various preferences to "
"control how your script is launched. Option-dragging allows you to change"
" these for one invocation, or use its ``Preferences`` menu to change "
"things globally."
msgstr ""
"Finder 정보 창을 통해 여러분의 스크립트(또는 모든 .py 스크립트)를 여는 기본 응용 프로그램으로 "
":program:`PythonLauncher`\\를 선택하고 스크립트를 더블 클릭하십시오. "
":program:`PythonLauncher`\\에는 스크립트를 시작하는 방법을 제어하는 다양한 설정이 있습니다. "
"Option-드래그하면 하나의 호출에 대해 이를 변경할 수 있으며, 환경 설정 메뉴를 사용하여 전역적으로 변경할 수 있습니다."

#: ../../using/mac.rst:175
msgid ""
"Be aware that running the script directly from the macOS Finder might "
"produce different results than when running from a terminal window as the"
" script will not be run in the usual shell environment including any "
"setting of environment variables in shell profiles. And, as with any "
"other script or program, be certain of what you are about to run."
msgstr ""

#: ../../using/mac.rst:185
msgid "Alternative Distributions"
msgstr ""

#: ../../using/mac.rst:187
msgid ""
"Besides the standard ``python.org`` for macOS installer, there are third-"
"party distributions for macOS that may include additional functionality. "
"Some popular distributions and their key features:"
msgstr ""

#: ../../using/mac.rst:191
msgid "`ActivePython <https://www.activestate.com/products/python/>`_"
msgstr ""

#: ../../using/mac.rst:192
msgid "Installer with multi-platform compatibility, documentation"
msgstr ""

#: ../../using/mac.rst:194
msgid "`Anaconda <https://www.anaconda.com/download/>`_"
msgstr ""

#: ../../using/mac.rst:195
msgid ""
"Popular scientific modules (such as numpy, scipy, and pandas) and the "
"``conda`` package manager."
msgstr ""

#: ../../using/mac.rst:198
msgid "`Homebrew <https://brew.sh>`_"
msgstr ""

#: ../../using/mac.rst:199
msgid ""
"Package manager for macOS including multiple versions of Python and many "
"third-party Python-based packages (including numpy, scipy, and pandas)."
msgstr ""

#: ../../using/mac.rst:202
msgid "`MacPorts <https://www.macports.org>`_"
msgstr ""

#: ../../using/mac.rst:203
msgid ""
"Another package manager for macOS including multiple versions of Python "
"and many third-party Python-based packages. May include pre-built "
"versions of Python and many packages for older versions of macOS."
msgstr ""

#: ../../using/mac.rst:207
msgid ""
"Note that distributions might not include the latest versions of Python "
"or other libraries, and are not maintained or supported by the core "
"Python team."
msgstr ""

#: ../../using/mac.rst:213
msgid "Installing Additional Python Packages"
msgstr "추가 파이썬 패키지 설치하기"

#: ../../using/mac.rst:215
msgid "Refer to the `Python Packaging User Guide`_ for more information."
msgstr ""

#: ../../using/mac.rst:225
#, fuzzy
msgid "GUI Programming"
msgstr "Mac에서의 GUI 프로그래밍"

#: ../../using/mac.rst:227
msgid ""
"There are several options for building GUI applications on the Mac with "
"Python."
msgstr "Mac에서 파이썬으로 GUI 응용 프로그램을 작성하기 위한 몇 가지 옵션이 있습니다."

#: ../../using/mac.rst:229
#, fuzzy
msgid ""
"The standard Python GUI toolkit is :mod:`tkinter`, based on the cross-"
"platform Tk toolkit (https://www.tcl.tk). A macOS-native version of Tk is"
" included with the installer."
msgstr ""
"표준 파이썬 GUI 툴킷은 크로스 플랫폼 Tk 툴킷(https://www.tcl.tk)을 기반으로 하는 "
":mod:`tkinter`\\입니다. Tk의 Aqua-네이티브 버전은 애플에 의해 OS X에 번들로 제공되며, 최신 버전은 "
"https://www.activestate.com 에서 내려받아 설치할 수 있습니다; 소스에서 빌드할 수도 있습니다."

#: ../../using/mac.rst:233
#, fuzzy
msgid ""
"*PyObjC* is a Python binding to Apple's Objective-C/Cocoa framework. "
"Information on PyObjC is available from :pypi:`pyobjc`."
msgstr ""
"*PyObjC*\\는 애플의 Objective-C/Cocoa 프레임워크에 대한 파이썬 바인딩입니다. 이 프레임워크는 가장 현대적인 "
"Mac 개발의 기초입니다. PyObjC에 대한 정보는 https://pypi.org/project/pyobjc/ 에서 얻을 수 "
"있습니다."

#: ../../using/mac.rst:236
msgid "A number of alternative macOS GUI toolkits are available including:"
msgstr ""

#: ../../using/mac.rst:238
msgid ""
"`PySide <https://www.qt.io/qt-for-python>`_: Official Python bindings to "
"the `Qt GUI toolkit <https://wiki.qt.io/Qt_for_Python>`_."
msgstr ""

#: ../../using/mac.rst:241
msgid ""
"`PyQt <https://riverbankcomputing.com/software/pyqt/>`_: Alternative "
"Python bindings to Qt."
msgstr ""

#: ../../using/mac.rst:244
msgid ""
"`Kivy <https://kivy.org>`_: A cross-platform GUI toolkit that supports "
"desktop and mobile platforms."
msgstr ""

#: ../../using/mac.rst:247
msgid ""
"`Toga <https://toga.readthedocs.io>`_: Part of the `BeeWare Project "
"<https://beeware.org>`_; supports desktop, mobile, web and console apps."
msgstr ""

#: ../../using/mac.rst:250
msgid ""
"`wxPython <https://wxpython.org>`_: A cross-platform toolkit that "
"supports desktop operating systems."
msgstr ""

#: ../../using/mac.rst:255
msgid "Advanced Topics"
msgstr ""

#: ../../using/mac.rst:260
msgid "Installing Free-threaded Binaries"
msgstr ""

#: ../../using/mac.rst:262
msgid "(Experimental)"
msgstr ""

#: ../../using/mac.rst:266
msgid ""
"Everything described in this section is considered experimental, and "
"should be expected to change in future releases."
msgstr ""

#: ../../using/mac.rst:269
msgid ""
"The ``python.org`` :ref:`Python for macOS <getting-and-installing-"
"macpython>` installer package can optionally install an additional build "
"of Python |usemac_x_dot_y| that supports :pep:`703`, the experimental "
"free-threading feature (running with the :term:`global interpreter lock` "
"disabled). Check the release page on ``python.org`` for possible updated "
"information."
msgstr ""

#: ../../using/mac.rst:275
msgid ""
"Because this feature is still considered experimental, the support for it"
" is not installed by default. It is packaged as a separate install "
"option, available by clicking the **Customize** button on the "
"**Installation Type** step of the installer as described above."
msgstr ""

#: ../../using/mac.rst:282
msgid ""
"If the box next to the **Free-threaded Python** package name is checked, "
"a separate :file:`PythonT.framework` will also be installed alongside the"
" normal :file:`Python.framework` in :file:`/Library/Frameworks`. This "
"configuration allows a free-threaded Python |usemac_x_dot_y| build to co-"
"exist on your system with a traditional (GIL only) Python "
"|usemac_x_dot_y| build with minimal risk while installing or testing. "
"This installation layout is itself experimental and is subject to change "
"in future releases."
msgstr ""

#: ../../using/mac.rst:290
msgid "Known cautions and limitations:"
msgstr ""

#: ../../using/mac.rst:292
msgid ""
"The **UNIX command-line tools** package, which is selected by default, "
"will install links in :file:`/usr/local/bin` for "
"|usemac_python_x_dot_y_t_literal|, the free-threaded interpreter, and "
"|usemac_python_x_dot_y_t_literal_config|, a configuration utility which "
"may be useful for package builders. Since :file:`/usr/local/bin` is "
"typically included in your shell ``PATH``, in most cases no changes to "
"your ``PATH`` environment variables should be needed to use "
"|usemac_python_x_dot_y_t_literal|."
msgstr ""

#: ../../using/mac.rst:300
msgid ""
"For this release, the **Shell profile updater** package and the "
":file:`Update Shell Profile.command` in "
"|usemac_applications_folder_version| do not support the free-threaded "
"package."
msgstr ""

#: ../../using/mac.rst:304
msgid ""
"The free-threaded build and the traditional build have separate search "
"paths and separate :file:`site-packages` directories so, by default, if "
"you need a package available in both builds, it may need to be installed "
"in both. The free-threaded package will install a separate instance of "
":program:`pip` for use with |usemac_python_x_dot_y_t_literal|."
msgstr ""

#: ../../using/mac.rst:310
msgid "To install a package using :command:`pip` without a :command:`venv`:"
msgstr ""

#: ../../using/mac.rst:312
msgid "|usemac_python_x_dot_y_t_literal| ``-m pip install <package_name>``"
msgstr ""

#: ../../using/mac.rst:314
msgid ""
"When working with multiple Python environments, it is usually safest and "
"easiest to :ref:`create and use virtual environments <tut-venv>`. This "
"can avoid possible command name conflicts and confusion about which "
"Python is in use:"
msgstr ""

#: ../../using/mac.rst:318
msgid "|usemac_python_x_dot_y_t_literal| ``-m venv <venv_name>``"
msgstr ""

#: ../../using/mac.rst:320
msgid "then :command:`activate`."
msgstr ""

#: ../../using/mac.rst:322
msgid "To run a free-threaded version of IDLE:"
msgstr ""

#: ../../using/mac.rst:324
msgid "|usemac_python_x_dot_y_t_literal| ``-m idlelib``"
msgstr ""

#: ../../using/mac.rst:326
msgid ""
"The interpreters in both builds respond to the same :ref:`PYTHON "
"environment variables <using-on-envvars>` which may have unexpected "
"results, for example, if you have ``PYTHONPATH`` set in a shell profile. "
"If necessary, there are :ref:`command line options <using-on-interface-"
"options>` like ``-E`` to ignore these environment variables."
msgstr ""

#: ../../using/mac.rst:333
msgid ""
"The free-threaded build links to the third-party shared libraries, such "
"as ``OpenSSL`` and ``Tk``, installed in the traditional framework. This "
"means that both builds also share one set of trust certificates as "
"installed by the :command:`Install Certificates.command` script, thus it "
"only needs to be run once."
msgstr ""

#: ../../using/mac.rst:339
msgid ""
"If you cannot depend on the link in ``/usr/local/bin`` pointing to the "
"``python.org`` free-threaded |usemac_python_x_dot_y_t_literal| (for "
"example, if you want to install your own version there or some other "
"distribution does), you can explicitly set your shell ``PATH`` "
"environment variable to include the ``PythonT`` framework ``bin`` "
"directory:"
msgstr ""

#: ../../using/mac.rst:345
msgid ""
"export "
"PATH=\"/Library/Frameworks/PythonT.framework/Versions/3.13/bin\":\"$PATH\""
msgstr ""

#: ../../using/mac.rst:349
msgid ""
"The traditional framework installation by default does something similar,"
" except for :file:`Python.framework`. Be aware that having both framework"
" ``bin`` directories in ``PATH`` can lead to confusion if there are "
"duplicate names like ``python3.13`` in both; which one is actually used "
"depends on the order they appear in ``PATH``. The ``which python3.x`` or "
"``which python3.xt`` commands can show which path is being used. Using "
"virtual environments can help avoid such ambiguities. Another option "
"might be to create a shell :command:`alias` to the desired interpreter, "
"like:"
msgstr ""

#: ../../using/mac.rst:358
msgid ""
"alias "
"py3.13=\"/Library/Frameworks/Python.framework/Versions/3.13/bin/python3.13\""
"\n"
"alias "
"py3.13t=\"/Library/Frameworks/PythonT.framework/Versions/3.13/bin/python3.13t\""
msgstr ""

#: ../../using/mac.rst:364
msgid "Installing using the command line"
msgstr ""

#: ../../using/mac.rst:366
msgid ""
"If you want to use automation to install the ``python.org`` installer "
"package (rather than by using the familiar macOS :program:`Installer` GUI"
" app), the macOS command line :command:`installer` utility lets you "
"select non-default options, too. If you are not familiar with "
":command:`installer`, it can be somewhat cryptic (see :command:`man "
"installer` for more information). As an example, the following shell "
"snippet shows one way to do it, using the ``3.13.0b2`` release and "
"selecting the free-threaded interpreter option:"
msgstr ""

#: ../../using/mac.rst:375
#, python-brace-format
msgid ""
"RELEASE=\"python-3.13.0b2-macos11.pkg\"\n"
"\n"
"# download installer pkg\n"
"curl -O https://www.python.org/ftp/python/3.13.0/${RELEASE}\n"
"\n"
"# create installer choicechanges to customize the install:\n"
"#    enable the PythonTFramework-3.13 package\n"
"#    while accepting the other defaults (install all other packages)\n"
"cat > ./choicechanges.plist <<EOF\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" "
"\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n"
"<plist version=\"1.0\">\n"
"<array>\n"
"        <dict>\n"
"                <key>attributeSetting</key>\n"
"                <integer>1</integer>\n"
"                <key>choiceAttribute</key>\n"
"                <string>selected</string>\n"
"                <key>choiceIdentifier</key>\n"
"                <string>org.python.Python.PythonTFramework-3.13</string>\n"
"        </dict>\n"
"</array>\n"
"</plist>\n"
"EOF\n"
"\n"
"sudo installer -pkg ./${RELEASE} -applyChoiceChangesXML "
"./choicechanges.plist -target /"
msgstr ""

#: ../../using/mac.rst:405
msgid ""
"You can then test that both installer builds are now available with "
"something like:"
msgstr ""

#: ../../using/mac.rst:407
msgid ""
"$ # test that the free-threaded interpreter was installed if the Unix "
"Command Tools package was enabled\n"
"$ /usr/local/bin/python3.13t -VV\n"
"Python 3.13.0b2 experimental free-threading build (v3.13.0b2:3a83b172af, "
"Jun  5 2024, 12:57:31) [Clang 15.0.0 (clang-1500.3.9.4)]\n"
"$ #    and the traditional interpreter\n"
"$ /usr/local/bin/python3.13 -VV\n"
"Python 3.13.0b2 (v3.13.0b2:3a83b172af, Jun  5 2024, 12:50:24) [Clang "
"15.0.0 (clang-1500.3.9.4)]\n"
"$ # test that they are also available without the prefix if "
"/usr/local/bin is on $PATH\n"
"$ python3.13t -VV\n"
"Python 3.13.0b2 experimental free-threading build (v3.13.0b2:3a83b172af, "
"Jun  5 2024, 12:57:31) [Clang 15.0.0 (clang-1500.3.9.4)]\n"
"$ python3.13 -VV\n"
"Python 3.13.0b2 (v3.13.0b2:3a83b172af, Jun  5 2024, 12:50:24) [Clang "
"15.0.0 (clang-1500.3.9.4)]"
msgstr ""

#: ../../using/mac.rst:423
msgid ""
"Current ``python.org`` installers only install to fixed locations like "
":file:`/Library/Frameworks/`, :file:`/Applications`, and "
":file:`/usr/local/bin`. You cannot use the :command:`installer` "
"``-domain`` option to install to other locations."
msgstr ""

#: ../../using/mac.rst:431
#, fuzzy
msgid "Distributing Python Applications"
msgstr "Mac에서 파이썬 응용 프로그램 배포하기"

#: ../../using/mac.rst:433
msgid ""
"A range of tools exist for converting your Python code into a standalone "
"distributable application:"
msgstr ""

#: ../../using/mac.rst:436
msgid ""
":pypi:`py2app`: Supports creating macOS ``.app`` bundles from a Python "
"project."
msgstr ""

#: ../../using/mac.rst:439
msgid ""
"`Briefcase <https://briefcase.readthedocs.io>`_: Part of the `BeeWare "
"Project <https://beeware.org>`_; a cross-platform packaging tool that "
"supports creation of ``.app`` bundles on macOS, as well as managing "
"signing and notarization."
msgstr ""

#: ../../using/mac.rst:444
msgid ""
"`PyInstaller <https://pyinstaller.org/>`_: A cross-platform packaging "
"tool that creates a single file or folder as a distributable artifact."
msgstr ""

#: ../../using/mac.rst:448
msgid "App Store Compliance"
msgstr ""

#: ../../using/mac.rst:450
msgid ""
"Apps submitted for distribution through the macOS App Store must pass "
"Apple's app review process. This process includes a set of automated "
"validation rules that inspect the submitted application bundle for "
"problematic code."
msgstr ""

#: ../../using/mac.rst:454
msgid ""
"The Python standard library contains some code that is known to violate "
"these automated rules. While these violations appear to be false "
"positives, Apple's review rules cannot be challenged. Therefore, it is "
"necessary to modify the Python standard library for an app to pass App "
"Store review."
msgstr ""

#: ../../using/mac.rst:459
msgid ""
"The Python source tree contains :source:`a patch file <Mac/Resources/app-"
"store-compliance.patch>` that will remove all code that is known to cause"
" issues with the App Store review process. This patch is applied "
"automatically when CPython is configured with the :option:`--with-app-"
"store-compliance` option."
msgstr ""

#: ../../using/mac.rst:465
msgid ""
"This patch is not normally required to use CPython on a Mac; nor is it "
"required if you are distributing an app *outside* the macOS App Store. It"
" is *only* required if you are using the macOS App Store as a "
"distribution channel."
msgstr ""

#: ../../using/mac.rst:470
msgid "Other Resources"
msgstr "기타 자원"

#: ../../using/mac.rst:472
msgid ""
"The `python.org Help page <https://www.python.org/about/help/>`_ has "
"links to many useful resources. The `Pythonmac-SIG mailing list "
"<https://www.python.org/community/sigs/current/pythonmac-sig/>`_ is "
"another support resource specifically for Python users and developers on "
"the Mac."
msgstr ""

#~ msgid "Author"
#~ msgstr "저자"

#~ msgid "Bob Savage <bobsavage@mac.com>"
#~ msgstr "Bob Savage <bobsavage@mac.com>"

#~ msgid ""
#~ "Python on a Macintosh running Mac "
#~ "OS X is in principle very similar"
#~ " to Python on any other Unix "
#~ "platform, but there are a number "
#~ "of additional features such as the "
#~ "IDE and the Package Manager that "
#~ "are worth pointing out."
#~ msgstr ""
#~ "Mac OS X을 실행하는 매킨토시 상의 파이썬은 "
#~ "원칙적으로 다른 모든 유닉스 플랫폼에 있는 파이썬과 "
#~ "매우 유사하지만, IDE와 패키지 관리자와 같은 언급할 "
#~ "만한 많은 추가 기능들이 있습니다."

#~ msgid "Getting and Installing MacPython"
#~ msgstr "MacPython을 구하고 설치하기"

#~ msgid ""
#~ "Mac OS X 10.8 comes with Python"
#~ " 2.7 pre-installed by Apple.  If "
#~ "you wish, you are invited to "
#~ "install the most recent version of "
#~ "Python 3 from the Python website "
#~ "(https://www.python.org).  A current \"universal "
#~ "binary\" build of Python, which runs "
#~ "natively on the Mac's new Intel "
#~ "and legacy PPC CPU's, is available "
#~ "there."
#~ msgstr ""
#~ "Mac OS X 10.8은 애플이 사전 설치한 "
#~ "파이썬 2.7을 제공합니다. 원한다면, 파이썬 웹 사이트"
#~ " (https://www.python.org)에서 파이썬 3의 최신 버전을"
#~ " 설치하도록 초대합니다. 맥의 새로운 인텔과 레거시 "
#~ "PPC CPU에서 그대로 실행되는 최신 \"유니버설 "
#~ "바이너리\" 파이썬 빌드를 사용할 수 있습니다."

#~ msgid "What you get after installing is a number of things:"
#~ msgstr "설치 후 얻을 수 있는 것은 여러 가지가 있습니다:"

#~ msgid ""
#~ "The Apple-provided build of Python "
#~ "is installed in "
#~ ":file:`/System/Library/Frameworks/Python.framework` and "
#~ ":file:`/usr/bin/python`, respectively. You should"
#~ " never modify or delete these, as "
#~ "they are Apple-controlled and are "
#~ "used by Apple- or third-party "
#~ "software.  Remember that if you choose"
#~ " to install a newer Python version"
#~ " from python.org, you will have two"
#~ " different but functional Python "
#~ "installations on your computer, so it"
#~ " will be important that your paths"
#~ " and usages are consistent with what"
#~ " you want to do."
#~ msgstr ""
#~ "애플에서 제공한 파이썬 빌드는 "
#~ ":file:`/System/Library/Frameworks/Python.framework`\\와 "
#~ ":file:`/usr/bin/python`\\에 각각 설치됩니다. 애플에서 제어하고"
#~ " 애플이나 제삼자 소프트웨어에서 사용하므로, 절대로 수정하거나"
#~ " 삭제해서는 안 됩니다. Python.org에서 최신 파이썬 "
#~ "버전을 설치했다면, 컴퓨터에 서로 다르지만 동작하는 두 "
#~ "개의 파이썬 설치를 갖게 된다는 것을 기억하십시오, "
#~ "경로와 사용이 여러분이 원하는 것과 일치하는 것이 "
#~ "중요합니다."

#~ msgid ""
#~ "IDLE includes a help menu that "
#~ "allows you to access Python "
#~ "documentation. If you are completely new"
#~ " to Python you should start reading"
#~ " the tutorial introduction in that "
#~ "document."
#~ msgstr ""
#~ "IDLE에는 파이썬 설명서에 액세스할 수 있는 도움말 "
#~ "메뉴가 포함되어 있습니다. 파이썬을 완전히 처음 접한다면,"
#~ " 이 설명서에서 자습서 소개를 읽는 것으로 시작해야"
#~ " 합니다."

#~ msgid ""
#~ "If you are familiar with Python on"
#~ " other Unix platforms you should read"
#~ " the section on running Python "
#~ "scripts from the Unix shell."
#~ msgstr "다른 유닉스 플랫폼에서 파이썬에 익숙하다면 유닉스 셸에서 파이썬 스크립트를 실행하는 부분을 읽어야 합니다."

#~ msgid ""
#~ "Your best way to get started with"
#~ " Python on Mac OS X is through"
#~ " the IDLE integrated development "
#~ "environment, see section :ref:`ide` and "
#~ "use the Help menu when the IDE "
#~ "is running."
#~ msgstr ""
#~ "Mac OS X에서 파이썬을 시작하는 가장 좋은 "
#~ "방법은 IDLE 통합 개발 환경을 사용하는 것입니다, "
#~ ":ref:`ide` 절을 참조하고, IDE가 실행 중일 때"
#~ " 도움말 메뉴를 사용하십시오."

#~ msgid ""
#~ "If you want to run Python scripts"
#~ " from the Terminal window command "
#~ "line or from the Finder you first"
#~ " need an editor to create your "
#~ "script. Mac OS X comes with a "
#~ "number of standard Unix command line "
#~ "editors, :program:`vim` and :program:`emacs` "
#~ "among them. If you want a more "
#~ "Mac-like editor, :program:`BBEdit` or "
#~ ":program:`TextWrangler` from Bare Bones "
#~ "Software (see "
#~ "http://www.barebones.com/products/bbedit/index.html) are "
#~ "good choices, as is :program:`TextMate` "
#~ "(see https://macromates.com/). Other editors "
#~ "include :program:`Gvim` (http://macvim-"
#~ "dev.github.io/macvim/) and :program:`Aquamacs` "
#~ "(http://aquamacs.org/)."
#~ msgstr ""
#~ "터미널 창 명령 줄이나 Finder에서 파이썬 스크립트를"
#~ " 실행하려면 먼저 스크립트를 만들 편집기가 필요합니다. "
#~ "Mac OS X에는 여러 표준 유닉스 명령 줄"
#~ " 편집기, 그중에서도 :program:`vim`\\과 :program:`emacs`\\가"
#~ " 함께 제공됩니다. 좀 더 Mac 다운 편집기가 "
#~ "필요하다면, Bare Bones Software의 "
#~ ":program:`BBEdit`\\나 "
#~ ":program:`TextWrangler`\\(http://www.barebones.com/products/bbedit/index.html"
#~ " 을 참조하십시오)와 "
#~ ":program:`TextMate`\\(https://macromates.com/ 을 참조하십시오)는"
#~ " 좋은 선택입니다. 다른 편집기로는 :program:`Gvim`\\(http"
#~ "://macvim-dev.github.io/macvim/)과 "
#~ ":program:`Aquamacs`\\(http://aquamacs.org/)가 있습니다."

#~ msgid ""
#~ "To run your script from the "
#~ "Terminal window you must make sure "
#~ "that :file:`/usr/local/bin` is in your "
#~ "shell search path."
#~ msgstr "터미널 창에서 스크립트를 실행하려면 :file:`/usr/local/bin`\\이 셸 검색 경로에 있도록 해야 합니다."

#~ msgid "Running scripts with a GUI"
#~ msgstr "GUI로 스크립트 실행하기"

#~ msgid ""
#~ "With older versions of Python, there "
#~ "is one Mac OS X quirk that "
#~ "you need to be aware of: programs"
#~ " that talk to the Aqua window "
#~ "manager (in other words, anything that"
#~ " has a GUI) need to be run "
#~ "in a special way. Use :program:`pythonw`"
#~ " instead of :program:`python` to start "
#~ "such scripts."
#~ msgstr ""
#~ "이전 버전의 파이썬에는, 여러분이 신경 써야 할 "
#~ "Mac OS X의 단점이 하나 있습니다: Aqua "
#~ "창 관리자와 대화하는 프로그램(즉, GUI가 있는 프로그램)은"
#~ " 특별한 방법으로 실행해야 합니다. 이러한 스크립트를 "
#~ "시작하려면 :program:`python` 대신 :program:`pythonw`\\를 "
#~ "사용하십시오."

#~ msgid ""
#~ "With Python 3.9, you can use "
#~ "either :program:`python` or :program:`pythonw`."
#~ msgstr "파이썬 3.9에서는, :program:`python`\\이나 :program:`pythonw`\\를 모두 사용할 수 있습니다."

#~ msgid "Configuration"
#~ msgstr "구성"

#~ msgid ""
#~ "Python on OS X honors all standard"
#~ " Unix environment variables such as "
#~ ":envvar:`PYTHONPATH`, but setting these "
#~ "variables for programs started from the"
#~ " Finder is non-standard as the "
#~ "Finder does not read your "
#~ ":file:`.profile` or :file:`.cshrc` at startup."
#~ " You need to create a file "
#~ ":file:`~/.MacOSX/environment.plist`. See Apple's "
#~ "Technical Document QA1067 for details."
#~ msgstr ""
#~ "OS X의 파이썬은 :envvar:`PYTHONPATH`\\와 같은 표준"
#~ " 유닉스 환경 변수를 모두 준수하지만, Finder에서 "
#~ "시작된 프로그램에 대해 이러한 변수를 설정하는 것은 "
#~ "비표준인데, 시작 시 Finder가 여러분의 "
#~ ":file:`.profile`\\이나 :file:`.cshrc`\\를 읽지 않기 "
#~ "때문입니다. :file:`~/.MacOSX/environment.plist` 파일을 만들"
#~ " 필요가 있습니다. 자세한 내용은 애플의 기술 문서"
#~ " QA1067을 참조하십시오."

#~ msgid ""
#~ "For more information on installation "
#~ "Python packages in MacPython, see "
#~ "section :ref:`mac-package-manager`."
#~ msgstr ""
#~ "MacPython의 파이썬 패키지 설치에 대한 자세한 내용은,"
#~ " :ref:`mac-package-manager` 절을 참조하십시오."

#~ msgid "The IDE"
#~ msgstr "IDE"

#~ msgid ""
#~ "MacPython ships with the standard IDLE"
#~ " development environment. A good "
#~ "introduction to using IDLE can be "
#~ "found at "
#~ "http://www.hashcollision.org/hkn/python/idle_intro/index.html."
#~ msgstr ""
#~ "MacPython에는 표준 IDLE 개발 환경이 따라옵니다. "
#~ "IDLE 사용에 대한 좋은 소개는 "
#~ "http://www.hashcollision.org/hkn/python/idle_intro/index.html 에서"
#~ " 찾을 수 있습니다."

#~ msgid "There are several methods to install additional Python packages:"
#~ msgstr "추가 파이썬 패키지를 설치하는 몇 가지 방법이 있습니다:"

#~ msgid ""
#~ "Packages can be installed via the "
#~ "standard Python distutils mode (``python "
#~ "setup.py install``)."
#~ msgstr "패키지는 표준 파이썬 distutils 모드를 통해 설치할 수 있습니다 (``python setup.py install``)."

#~ msgid ""
#~ "Many packages can also be installed "
#~ "via the :program:`setuptools` extension or "
#~ ":program:`pip` wrapper, see https://pip.pypa.io/."
#~ msgstr ""
#~ "많은 패키지는 :program:`setuptools` 확장이나 "
#~ ":program:`pip` 래퍼를 통해 설치할 수도 있습니다, "
#~ "https://pip.pypa.io/ 를 참조하십시오."

#~ msgid ""
#~ "*wxPython* is another popular cross-"
#~ "platform GUI toolkit that runs natively"
#~ " on Mac OS X. Packages and "
#~ "documentation are available from "
#~ "https://www.wxpython.org."
#~ msgstr ""
#~ "*wxPython*\\은 Mac OS X에서 네이티브하게 실행되는 "
#~ "다른 인기 있는 크로스 플랫폼 GUI 툴킷입니다. "
#~ "패키지와 설명서는 https://www.wxpython.org 에서 제공됩니다."

#~ msgid ""
#~ "*PyQt* is another popular cross-platform"
#~ " GUI toolkit that runs natively on"
#~ " Mac OS X. More information can "
#~ "be found at "
#~ "https://riverbankcomputing.com/software/pyqt/intro."
#~ msgstr ""
#~ "*PyQt*\\는 Mac OS X에서 네이티브하게 실행되는 "
#~ "다른 인기 있는 크로스 플랫폼 GUI 툴킷입니다. "
#~ "자세한 정보는 https://riverbankcomputing.com/software/pyqt/intro"
#~ " 에서 찾을 수 있습니다."

#~ msgid ""
#~ "The standard tool for deploying "
#~ "standalone Python applications on the "
#~ "Mac is :program:`py2app`. More information "
#~ "on installing and using py2app can "
#~ "be found at http://undefined.org/python/#py2app."
#~ msgstr ""
#~ "Mac에서 독립형 파이썬 응용 프로그램을 배포하기 위한 "
#~ "표준 도구는 :program:`py2app`\\입니다. py2app의 설치와 "
#~ "사용에 대한 자세한 정보는 "
#~ "http://undefined.org/python/#py2app 에서 확인할 수 "
#~ "있습니다."

#~ msgid ""
#~ "The MacPython mailing list is an "
#~ "excellent support resource for Python "
#~ "users and developers on the Mac:"
#~ msgstr "MacPython 메일링리스트는 Mac 파이썬 사용자와 개발자를 위한 훌륭한 지원 자원입니다:"

#~ msgid "https://www.python.org/community/sigs/current/pythonmac-sig/"
#~ msgstr "https://www.python.org/community/sigs/current/pythonmac-sig/"

#~ msgid "Another useful resource is the MacPython wiki:"
#~ msgstr "또 다른 유용한 자원은 MacPython 위키입니다:"

#~ msgid "https://wiki.python.org/moin/MacPython"
#~ msgstr "https://wiki.python.org/moin/MacPython"

